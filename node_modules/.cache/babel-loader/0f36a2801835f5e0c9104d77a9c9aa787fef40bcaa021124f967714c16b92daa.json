{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"my-3\"\n}, \" Мои тесты \", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  class: \"d-flex flex-wrap mt-2\"\n};\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"d-flex justify-content-between\"\n};\nconst _hoisted_6 = {\n  class: \"card-title\"\n};\nconst _hoisted_7 = {\n  class: \"card-subtitle mb-2 text-muted\"\n};\nconst _hoisted_8 = {\n  class: \"card-text\"\n};\nconst _hoisted_9 = {\n  class: \"col-5 d-flex flex-column justify-content-around\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"card-footer\"\n};\nconst _hoisted_12 = {\n  class: \"text-muted\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-center\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, $data.loaded ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.decks, deck => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"card m-2 col-5\",\n      key: deck.id\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, [_createElementVNode(\"h5\", _hoisted_6, [_createVNode(_component_router_link, {\n      to: {\n        name: 'deck',\n        params: {\n          slug: deck.slug\n        }\n      },\n      class: \"text-reset text-decoration-none\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(deck.title), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]), _createElementVNode(\"h6\", _hoisted_7, _toDisplayString(deck.creator.username) + \", \" + _toDisplayString(deck.creation_date), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_8, _toDisplayString(deck.desc), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: $event => $options.attempt(deck.id)\n    }, \"Пройти тест\", 8 /* PROPS */, _hoisted_10)])])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"small\", _hoisted_12, _toDisplayString($options.last_mark(deck.id)), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _hoisted_13])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createVNode","_component_Navbar","_hoisted_1","_hoisted_2","$data","loaded","_createElementBlock","_hoisted_3","_Fragment","_renderList","decks","deck","key","id","_hoisted_4","_hoisted_5","_hoisted_6","_component_router_link","to","name","params","slug","title","_hoisted_7","_toDisplayString","creator","username","creation_date","_hoisted_8","desc","_hoisted_9","onClick","$event","$options","attempt","_hoisted_10","_hoisted_11","_hoisted_12","last_mark","_hoisted_13"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/card_views/Tests.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <h1 class=\"my-3\"> Мои тесты </h1>\n        <div class=\"d-flex flex-wrap mt-2\" v-if=\"loaded\">\n            <div class=\"card m-2 col-5\" v-for=\"deck in decks\" :key=\"deck.id\">\n                <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between\">\n                        <div>\n                            <h5 class=\"card-title\"><router-link :to=\"{ name: 'deck', params: { slug: deck.slug } }\"\n                                    class=\"text-reset text-decoration-none\">{{ deck.title }}</router-link></h5>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">{{ deck.creator.username }}, {{ deck.creation_date }}\n                            </h6>\n                            <p class=\"card-text\">{{ deck.desc }}</p>\n                        </div>\n                        <div class=\"col-5 d-flex flex-column justify-content-around\">\n                            <button class=\"btn btn-primary\" @click=\"attempt(deck.id)\">Пройти тест</button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <small class=\"text-muted\">{{ last_mark(deck.id) }}</small>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"text-center\">\n        </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'Tests',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            profile: '',\n            decks: [],\n            attempts: [],\n            loaded: false,\n        }\n    },\n    computed: {\n        ...mapState(['accessToken', 'user']),\n    },\n    created() {\n        API.get('/cards/profiles').then(response => {\n            console.log(response.data)\n            let profiles = response.data\n            profiles.forEach(p => {\n                if (p.user.id == this.user.id) {\n                    this.profile = p\n                }\n            })\n            console.log(this.profile)\n\n            API.get('/cards/decks').then(response => {\n                console.log(response.data)\n                let decks = response.data\n                decks.forEach(d => {\n                    if (this.profile.decks.includes(d.id)) {\n                        this.decks.push(d)\n                    }\n                })\n                console.log(this.decks)\n\n                API.get('/cards/attempts').then(response => {\n                    console.log(response.data)\n                    let all_attempts = response.data\n                    all_attempts.forEach(a => {\n                        if (this.profile.user.id == a.user) {\n                            this.attempts.push(a)\n                        }\n                    })\n                    this.loaded = true\n                }).catch(err => {\n                    console.log(err)\n                })\n            }).catch(err => {\n                console.log(err)\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    },\n    methods: {\n        last_mark(id) {\n            var closest = new Date('NaN');\n            var last_attempt\n            let attempts = this.attempts\n\n            if (attempts.length == 0) {\n                return 'Еще не пройден'\n            }\n            attempts.forEach(a => {\n                if (a.deck == id) {\n                    if (!isNaN(closest)) {\n                        let next = new Date(a.date)\n                        if (next.getTime() > closest.getTime()) {\n                            closest = next\n                            last_attempt = a\n                        }\n                    }\n                    else {\n                        closest = new Date(a.date)\n                    }\n                }\n            })\n\n            API.get(`/cards/attempts/${last_attempt.id}/marks`).then(response => {\n                console.log(response.data)\n                let marks = response.data\n                let total = 0\n                marks.forEach(m => {\n                    total += m.mark\n                })\n                return total\n            }).catch(err => {\n                console.log(err)\n            })\n        },\n        attempt(id) {\n            API.post(`/cards/attempts/`, {\n                deck: id\n            }).then(response => {\n                console.log(response.data)\n                this.$router.push({ name: 'test', params: { id: response.data.id}})\n            })\n        }\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;gCAClBC,mBAAA,CAAiC;EAA7BD,KAAK,EAAC;AAAM,GAAC,aAAW;;;EACvBA,KAAK,EAAC;;;EAEEA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAgC;;EAE/BA,KAAK,EAAC;AAAY;;EAElBA,KAAK,EAAC;AAA+B;;EAEtCA,KAAK,EAAC;AAAW;;EAEnBA,KAAK,EAAC;AAAiD;;;EAK/DA,KAAK,EAAC;AAAa;;EACbA,KAAK,EAAC;AAAY;iCAKrCC,mBAAA,CACM;EADDD,KAAK,EAAC;AAAa;;;;;6DAzB5BE,YAAA,CAAiBC,iBAAA,GACjBF,mBAAA,CA0BM,OA1BNG,UA0BM,GAzBFC,UAAiC,EACQC,KAAA,CAAAC,MAAM,I,cAA/CC,mBAAA,CAoBM,OApBNC,UAoBM,I,kBAnBFD,mBAAA,CAkBME,SAAA,QAAAC,WAAA,CAlBqCL,KAAA,CAAAM,KAAK,EAAbC,IAAI;yBAAvCL,mBAAA,CAkBM;MAlBDR,KAAK,EAAC,gBAAgB;MAAwBc,GAAG,EAAED,IAAI,CAACE;QACzDd,mBAAA,CAaM,OAbNe,UAaM,GAZFf,mBAAA,CAWM,OAXNgB,UAWM,GAVFhB,mBAAA,CAMM,cALFA,mBAAA,CACmF,MADnFiB,UACmF,GAD5DhB,YAAA,CACuDiB,sBAAA;MADzCC,EAAE;QAAAC,IAAA;QAAAC,MAAA;UAAAC,IAAA,EAAkCV,IAAI,CAACU;QAAI;MAAA;MAC1EvB,KAAK,EAAC;;wBAAkC,MAAgB,C,kCAAba,IAAI,CAACW,KAAK,iB;;;mDAC7DvB,mBAAA,CACK,MADLwB,UACK,EAAAC,gBAAA,CADwCb,IAAI,CAACc,OAAO,CAACC,QAAQ,IAAG,IAAE,GAAAF,gBAAA,CAAGb,IAAI,CAACgB,aAAa,kBAE5F5B,mBAAA,CAAwC,KAAxC6B,UAAwC,EAAAJ,gBAAA,CAAhBb,IAAI,CAACkB,IAAI,iB,GAErC9B,mBAAA,CAEM,OAFN+B,UAEM,GADF/B,mBAAA,CAA8E;MAAtED,KAAK,EAAC,iBAAiB;MAAEiC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,OAAO,CAACvB,IAAI,CAACE,EAAE;OAAG,aAAW,iBAAAsB,WAAA,E,OAIjFpC,mBAAA,CAEM,OAFNqC,WAEM,GADFrC,mBAAA,CAA0D,SAA1DsC,WAA0D,EAAAb,gBAAA,CAA7BS,QAAA,CAAAK,SAAS,CAAC3B,IAAI,CAACE,EAAE,kB;yEAK1D0B,WACM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}