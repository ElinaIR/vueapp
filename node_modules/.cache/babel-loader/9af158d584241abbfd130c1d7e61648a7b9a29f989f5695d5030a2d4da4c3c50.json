{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row m-3\"\n};\nconst _hoisted_3 = {\n  class: \"col\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"col-3 d-flex align-items-center\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"selectYear\",\n  class: \"form-label me-2\"\n}, \"Год\", -1 /* HOISTED */);\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = {\n  class: \"row m-3\"\n};\nconst _hoisted_8 = {\n  class: \"col-4\",\n  style: {\n    \"overflow-x\": \"scroll\"\n  }\n};\nconst _hoisted_9 = {\n  class: \"col-4\",\n  style: {\n    \"overflow-x\": \"scroll\"\n  }\n};\nconst _hoisted_10 = {\n  class: \"col-4\",\n  style: {\n    \"overflow-x\": \"scroll\"\n  }\n};\nconst _hoisted_11 = {\n  class: \"m-3\",\n  style: {\n    \"overflow-x\": \"scroll\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_LineChart = _resolveComponent(\"LineChart\");\n  const _component_BarChart = _resolveComponent(\"BarChart\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$data.users_loaded ? (_openBlock(), _createBlock(_component_LineChart, {\n    key: 0,\n    options: $data.chartOptions,\n    data: $options.lineChartData\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : _createCommentVNode(\"v-if\", true)]), $data.users_loaded ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select form-select-sm\",\n    \"aria-label\": \".form-select-sm example\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.year = $event),\n    id: \"selectYear\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.years, y => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: y,\n      key: y\n    }, _toDisplayString(y), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.year]])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [$data.ege_loaded ? (_openBlock(), _createBlock(_component_BarChart, {\n    key: 0,\n    options: $data.chartOptions,\n    data: $data.egeBarChartData\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_9, [$data.oge_loaded ? (_openBlock(), _createBlock(_component_BarChart, {\n    key: 0,\n    options: $data.chartOptions,\n    data: $data.ogeBarChartData\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_10, [$data.vpr_loaded ? (_openBlock(), _createBlock(_component_BarChart, {\n    key: 0,\n    options: $data.chartOptions,\n    data: $data.vprBarChartData\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_11, [$data.decks_loaded ? (_openBlock(), _createBlock(_component_BarChart, {\n    key: 0,\n    options: $data.chartOptions,\n    data: $data.deckBarChartData\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : _createCommentVNode(\"v-if\", true)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","for","style","_createVNode","_component_Navbar","_hoisted_1","_hoisted_2","_hoisted_3","$data","users_loaded","_createBlock","_component_LineChart","options","chartOptions","data","$options","lineChartData","_createElementBlock","_hoisted_4","_hoisted_5","year","$event","id","_Fragment","_renderList","years","y","value","key","_hoisted_6","_hoisted_7","_hoisted_8","ege_loaded","_component_BarChart","egeBarChartData","_hoisted_9","oge_loaded","ogeBarChartData","_hoisted_10","vpr_loaded","vprBarChartData","_hoisted_11","decks_loaded","deckBarChartData"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/Stats.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <div class=\"row m-3\">\n            <div class=\"col\">\n                <LineChart v-if=\"users_loaded\" :options=\"chartOptions\" :data=\"lineChartData\"/>\n            </div>\n            <div v-if=\"users_loaded\" class=\"col-3 d-flex align-items-center\">\n                <label for=\"selectYear\" class=\"form-label me-2\">Год</label>\n                <select class=\"form-select form-select-sm\" aria-label=\".form-select-sm example\" v-model=\"year\" id=\"selectYear\">\n                    <option :value=\"y\" v-for=\"y in years\" :key=\"y\">{{ y }}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"row m-3\">\n            <div class=\"col-4\" style=\"overflow-x: scroll\">\n                <BarChart v-if=\"ege_loaded\" :options=\"chartOptions\" :data=\"egeBarChartData\" />\n            </div>\n            <div class=\"col-4\" style=\"overflow-x: scroll\">\n                <BarChart v-if=\"oge_loaded\" :options=\"chartOptions\" :data=\"ogeBarChartData\" />\n            </div>\n            <div class=\"col-4\" style=\"overflow-x: scroll\">\n                <BarChart v-if=\"vpr_loaded\" :options=\"chartOptions\" :data=\"vprBarChartData\" />\n            </div>\n        </div>\n        <div class=\"m-3\" style=\"overflow-x: scroll\">\n            <BarChart v-if=\"decks_loaded\" :options=\"chartOptions\" :data=\"deckBarChartData\" />\n        </div>\n    </div>\n</template>\n<script>\nimport { API } from '../axios-api'\nimport Navbar from '../components/Navbar.vue'\nimport BarChart from '../components/BarChart.vue'\nimport LineChart from '../components/LineChart.vue'\n\nexport default {\n    name: 'Stats',\n    components: {\n        Navbar, BarChart, LineChart\n    },\n    data() {\n        return {\n            users_loaded: false,\n            users: [],\n            ege_loaded: false,\n            ege: [],\n            oge_loaded: false,\n            oge: [],\n            vpr_loaded: false,\n            vpr: [],\n            decks_loaded: false,\n            years: [],\n            year: 2023,\n            egeBarChartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ЕГЭ',\n                        backgroundColor: 'red',\n                        data: null,\n                    }\n                ]\n            },\n            ogeBarChartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ОГЭ',\n                        backgroundColor: 'orange',\n                        data: null,\n                    }\n                ]\n            },\n            vprBarChartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ВПР',\n                        backgroundColor: 'yellow',\n                        data: null,\n                    }\n                ]\n            },\n            deckBarChartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'Стопки',\n                        backgroundColor: 'green',\n                        data: null,\n                    }\n                ]\n            },\n            chartOptions: {\n                responsive: true,\n                scales: {\n                    y: {\n                        suggestedMin: 0,\n                    }\n                }\n            }\n        }\n    },\n    mounted() {\n        API.get('/users').then(response => {\n            console.log(response.data)\n            this.users = response.data\n            let users = response.data\n            users.forEach(u => {\n                let reg = new Date(u.date_joined)\n                if (!this.years.includes(reg.getFullYear())) {\n                    this.years.push(reg.getFullYear())\n                }\n            })\n            this.users_loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n        API.get('/ege/popularity').then(response => {\n            this.ege = response.data\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.egeBarChartData.labels = labels\n            this.egeBarChartData.datasets[0].data = data\n            this.ege_loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n        API.get('/oge/popularity').then(response => {\n            this.oge = response.data\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.ogeBarChartData.labels = labels\n            this.ogeBarChartData.datasets[0].data = data\n            this.oge_loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n        \n        API.get('/vpr/popularity').then(response => {\n            this.vpr = response.data\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.vprBarChartData.labels = labels\n            this.vprBarChartData.datasets[0].data = data\n            this.vpr_loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n\n\n        API.get('/cards/popularity').then(response => {\n            // this.decks = response.data\n            let popularity = response.data\n            console.log(response.data)\n            let decks = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                console.log(p, decks, p.deck.id)\n                if (decks.includes(p.deck.id)) {\n                    data[decks.findIndex((elem) => elem == p.deck.id)] += 1\n                }\n                else {\n                    decks.push(p.deck.id)\n                    data.push(1)\n                    labels.push(p.deck.title)\n                    console.log('push', decks, data, labels)\n                }\n            })\n            this.deckBarChartData.labels = labels\n            this.deckBarChartData.datasets[0].data = data\n            this.decks_loaded = true\n            console.log(labels, data)\n        }).catch(err => {\n            console.log(err)\n        })\n    },\n    computed: {\n        lineChartData() {\n            let chartData = {\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n                datasets: [\n                    {\n                        label: 'Пользователи',\n                        backgroundColor: 'blue',\n                        data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    },\n                    {\n                        label: 'ЕГЭ',\n                        backgroundColor: 'red',\n                        data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    },\n                    {\n                        label: 'ОГЭ',\n                        backgroundColor: 'orange',\n                        data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    },\n                    {\n                        label: 'ВПР',\n                        backgroundColor: 'yellow',\n                        data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    }\n                ],\n            }\n\n            let users = this.users\n            users.forEach(u => {\n                let reg = new Date(u.date_joined)\n                if (reg.getFullYear() == this.year) {\n                    chartData.datasets[0].data[reg.getMonth()] += 1\n                }\n            })\n            let ege = this.ege\n            ege.forEach(e => {\n                let date = new Date(e.date)\n                if (date.getFullYear() == this.year) {\n                    chartData.datasets[1].data[date.getMonth()] += 1\n                }\n            })\n            let oge = this.oge\n            oge.forEach(o => {\n                let date = new Date(o.date)\n                if (date.getFullYear() == this.year) {\n                    chartData.datasets[2].data[date.getMonth()] += 1\n                }\n            })\n            let vpr = this.vpr\n            vpr.forEach(v => {\n                let date = new Date(v.date)\n                if (date.getFullYear() == this.year) {\n                    chartData.datasets[3].data[date.getMonth()] += 1\n                }\n            })\n\n            return chartData\n        }\n    }\n}\n</script>\n<style scoped>\n    \n</style>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAS;;EACXA,KAAK,EAAC;AAAK;;;EAGSA,KAAK,EAAC;;gCAC3BC,mBAAA,CAA2D;EAApDC,GAAG,EAAC,YAAY;EAACF,KAAK,EAAC;GAAkB,KAAG;;;EAMtDA,KAAK,EAAC;AAAS;;EACXA,KAAK,EAAC,OAAO;EAACG,KAA0B,EAA1B;IAAA;EAAA;;;EAGdH,KAAK,EAAC,OAAO;EAACG,KAA0B,EAA1B;IAAA;EAAA;;;EAGdH,KAAK,EAAC,OAAO;EAACG,KAA0B,EAA1B;IAAA;EAAA;;;EAIlBH,KAAK,EAAC,KAAK;EAACG,KAA0B,EAA1B;IAAA;EAAA;;;;;;6DAxBrBC,YAAA,CAAiBC,iBAAA,GACjBJ,mBAAA,CA0BM,OA1BNK,UA0BM,GAzBFL,mBAAA,CAUM,OAVNM,UAUM,GATFN,mBAAA,CAEM,OAFNO,UAEM,GADeC,KAAA,CAAAC,YAAY,I,cAA7BC,YAAA,CAA8EC,oBAAA;;IAA9CC,OAAO,EAAEJ,KAAA,CAAAK,YAAY;IAAGC,IAAI,EAAEC,QAAA,CAAAC;uFAEvDR,KAAA,CAAAC,YAAY,I,cAAvBQ,mBAAA,CAKM,OALNC,UAKM,GAJFC,UAA2D,E,gBAC3DnB,mBAAA,CAES;IAFDD,KAAK,EAAC,4BAA4B;IAAC,YAAU,EAAC,yBAAyB;+DAAUS,KAAA,CAAAY,IAAI,GAAAC,MAAA;IAAEC,EAAE,EAAC;yBAC9FL,mBAAA,CAA+DM,SAAA,QAAAC,WAAA,CAAhChB,KAAA,CAAAiB,KAAK,EAAVC,CAAC;yBAA3BT,mBAAA,CAA+D;MAAtDU,KAAK,EAAED,CAAC;MAAsBE,GAAG,EAAEF;wBAAMA,CAAC,wBAAAG,UAAA;2EADkCrB,KAAA,CAAAY,IAAI,E,4CAKrGpB,mBAAA,CAUM,OAVN8B,UAUM,GATF9B,mBAAA,CAEM,OAFN+B,UAEM,GADcvB,KAAA,CAAAwB,UAAU,I,cAA1BtB,YAAA,CAA8EuB,mBAAA;;IAAjDrB,OAAO,EAAEJ,KAAA,CAAAK,YAAY;IAAGC,IAAI,EAAEN,KAAA,CAAA0B;uFAE/DlC,mBAAA,CAEM,OAFNmC,UAEM,GADc3B,KAAA,CAAA4B,UAAU,I,cAA1B1B,YAAA,CAA8EuB,mBAAA;;IAAjDrB,OAAO,EAAEJ,KAAA,CAAAK,YAAY;IAAGC,IAAI,EAAEN,KAAA,CAAA6B;uFAE/DrC,mBAAA,CAEM,OAFNsC,WAEM,GADc9B,KAAA,CAAA+B,UAAU,I,cAA1B7B,YAAA,CAA8EuB,mBAAA;;IAAjDrB,OAAO,EAAEJ,KAAA,CAAAK,YAAY;IAAGC,IAAI,EAAEN,KAAA,CAAAgC;yFAGnExC,mBAAA,CAEM,OAFNyC,WAEM,GADcjC,KAAA,CAAAkC,YAAY,I,cAA5BhC,YAAA,CAAiFuB,mBAAA;;IAAlDrB,OAAO,EAAEJ,KAAA,CAAAK,YAAY;IAAGC,IAAI,EAAEN,KAAA,CAAAmC"},"metadata":{},"sourceType":"module","externalDependencies":[]}