{"ast":null,"code":"import axios from \"axios\";\nimport store from '../store';\nconst API = axios.create({\n  withCredentials: true,\n  baseURL: 'http://127.0.0.1:8000/api/v1'\n  // headers: {\n  //     'Access-Control-Allow-Origin': '*',\n  //     'Access-Control-Allow-Headers': '*',\n  //     'Access-Control-Allow-Credentials': 'true',\n  // }\n});\n// let token = document.getElementsByName(\"csrfmiddlewaretoken\")\n\n// if (token) {\n//     API.defaults.headers.common['X-CSRFToken'] = token[0].value\n// }\n// else {\n//     console.error('CSRF token not found')\n// }\n\nAPI.interceptors.response.use(response => response, async err => {\n  console.log(err);\n  if (err.response.status == 401) {\n    this.$store.dispatch('tokenRefresh', {\n      refreshToken: state.refreshToken\n    }).then(() => {\n      const new_access = state.accessToken;\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + new_access;\n      return API(err.config);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n});\nexport { API };","map":{"version":3,"names":["axios","store","API","create","withCredentials","baseURL","interceptors","response","use","err","console","log","status","$store","dispatch","refreshToken","state","then","new_access","accessToken","defaults","headers","common","config","catch"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/axios-api.js"],"sourcesContent":["import axios from \"axios\";\nimport store from '../store';\n\nconst API = axios.create({\n    withCredentials: true,\n    baseURL: 'http://127.0.0.1:8000/api/v1',\n    // headers: {\n    //     'Access-Control-Allow-Origin': '*',\n    //     'Access-Control-Allow-Headers': '*',\n    //     'Access-Control-Allow-Credentials': 'true',\n    // }\n})\n// let token = document.getElementsByName(\"csrfmiddlewaretoken\")\n\n// if (token) {\n//     API.defaults.headers.common['X-CSRFToken'] = token[0].value\n// }\n// else {\n//     console.error('CSRF token not found')\n// }\n\nAPI.interceptors.response.use(response => response, async err => {\n    console.log(err)\n    if (err.response.status == 401) {\n        this.$store.dispatch('tokenRefresh', {\n            refreshToken: state.refreshToken\n        }).then(() => {\n            const new_access = state.accessToken\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + new_access\n            return API(err.config)\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n})\n\nexport { API }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,UAAU;AAE5B,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;EACT;EACA;EACA;EACA;EACA;AACJ,CAAC,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAACD,QAAQ,IAAIA,QAAQ,EAAE,MAAME,GAAG,IAAI;EAC7DC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAChB,IAAIA,GAAG,CAACF,QAAQ,CAACK,MAAM,IAAI,GAAG,EAAE;IAC5B,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,cAAc,EAAE;MACjCC,YAAY,EAAEC,KAAK,CAACD;IACxB,CAAC,CAAC,CAACE,IAAI,CAAC,MAAM;MACV,MAAMC,UAAU,GAAGF,KAAK,CAACG,WAAW;MACpCnB,KAAK,CAACoB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGJ,UAAU;MACvE,OAAOhB,GAAG,CAACO,GAAG,CAACc,MAAM,CAAC;IAC1B,CAAC,CAAC,CAACC,KAAK,CAACf,GAAG,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,SAASP,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}