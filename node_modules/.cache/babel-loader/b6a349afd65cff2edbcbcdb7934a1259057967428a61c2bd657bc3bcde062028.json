{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API } from '../axios-api';\nimport { mapState } from 'vuex';\nimport Navbar from '../components/Navbar.vue';\nexport default {\n  name: 'DeckList',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      filter: {\n        title: '',\n        creator: '',\n        filtered: []\n      },\n      APIData: [],\n      profile: ''\n    };\n  },\n  computed: {\n    ...mapState(['accessToken', 'user']),\n    filter_list() {\n      let title = this.filter.title;\n      let creator = this.filter.creator;\n      let title_filter = this.APIData.filter(deck => title.trim() == '' || deck.title.toLowerCase().includes(title.toLowerCase()));\n      let creator_filter = title_filter.filter(deck => creator.trim() == '' || creator.toLowerCase() == deck.creator.username.toLowerCase());\n\n      // this.filter.filtered = creator_filter\n      return creator_filter;\n    }\n  },\n  created() {\n    API.get('/cards/decks').then(response => {\n      console.log(response.data);\n      this.APIData = response.data;\n      this.filter.filtered = response.data;\n    }).catch(err => {\n      console.log(err);\n    });\n    API.get('/cards/profiles').then(response => {\n      console.log(response.data);\n      let profiles = response.data;\n      profiles.forEach(p => {\n        if (p.user.id == this.user.id) {\n          this.profile = p;\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  methods: {\n    add(id) {\n      this.profile.decks.push(id);\n      API.patch(`/cards/profiles/${this.profile.id}/`, {\n        decks: this.profile.decks\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.$store.state.accessToken}`\n        }\n      }).then(response => {\n        console.log(response.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    // filter_list() {\n    //     let title = this.filter.title\n    //     let creator = this.filter.creator\n\n    //     let title_filter = this.APIData.filter(deck => (title.trim() == '') || (deck.title.toLowerCase().includes(title.toLowerCase())))\n\n    //     let creator_filter = title_filter.filter(deck => (creator.trim() == '') || (creator.toLowerCase() == deck.creator.username.toLowerCase()))\n\n    //     this.filter.filtered = creator_filter\n    // },\n    reset() {\n      this.filter.title = '';\n      this.filter.creator = '';\n      this.filter.filtered = this.APIData;\n    }\n  }\n};","map":{"version":3,"names":["API","mapState","Navbar","name","components","data","filter","title","creator","filtered","APIData","profile","computed","filter_list","title_filter","deck","trim","toLowerCase","includes","creator_filter","username","created","get","then","response","console","log","catch","err","profiles","forEach","p","user","id","methods","add","decks","push","patch","headers","$store","state","accessToken","reset"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/card_views/DeckList.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <form class=\"p-2 bg-light border border-3 rounded-3 row w-75 mx-auto mt-2\" id=\"form\">\n            <div class=\"col-auto d-flex align-items-center\">\n                <span>Фильтр</span>\n                <!-- @submit.prevent=\"filter_list\" -->\n            </div>\n            <div class=\"col\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Название стопки\" aria-label=\"InputTitle\" v-model=\"filter.title\" @change=\"filter_list\">\n            </div>\n            <div class=\"col\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Создатель стопки\" aria-label=\"InputCreator\" v-model=\"filter.creator\">\n            </div>\n            <div class=\"col-auto\"><button type=\"submit\" class=\"btn btn-outline-secondary\">Найти</button></div>\n            <div class=\"col-auto\"><button class=\"btn btn-outline-secondary\" @click=\"reset\">Сбросить</button></div>\n        </form>\n        <div class=\"d-flex flex-wrap justify-content-center\">\n        <div class=\"card m-2 col-5\" v-for=\"deck in filter_list\" :key=\"deck.id\">\n            <div class=\"card-body\">\n                <div class=\"d-flex justify-content-between\">\n                    <div>\n                        <h5 class=\"card-title\"><router-link :to=\"{ name: 'deck', params: { slug: deck.slug }}\" class=\"text-reset text-decoration-none\">{{ deck.title }}</router-link></h5>\n                        <h6 class=\"card-subtitle mb-2 text-muted\">{{ deck.creator.username }}, {{ deck.creation_date }}</h6>\n                        <p class=\"card-text\">{{ deck.desc }}</p>\n                    </div>\n                    <div class=\"col-5 d-flex flex-column justify-content-around\" v-if=\"accessToken != null\">\n                        <button v-if=\"!profile.decks.includes(deck.id)\" class=\"btn btn-primary align-self-end\" @click=\"add(deck.id)\">Добавить</button>\n                        <router-link :to=\"{ name: 'create-card', params: { slug: deck.slug }}\" v-if=\"user.id == deck.creator\" class=\"btn btn-outline-secondary btn-sm\">Создать карточку</router-link>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n\n        <div class=\"text-center\">\n\n            <!-- {% if page_obj.has_previous %}\n                <a href=\"?page={{ page_obj.previous_page_number }}\">пред.</a>\n            {% endif %}\n\n            <p class=\"mt-2\">\n                {{ page_obj.number }} из {{ page_obj.paginator.num_pages }}\n            </p>\n\n            {% if page_obj.has_next %}\n                <a href=\"?page={{ page_obj.next_page_number }}\">след.</a>\n            {% endif %} -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'DeckList',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            filter: {\n                title: '',\n                creator: '',\n                filtered: [],\n            },\n            APIData: [],\n            profile: '',\n        }\n    },\n    computed: {\n        ...mapState(['accessToken', 'user']),\n        filter_list() {\n            let title = this.filter.title\n            let creator = this.filter.creator\n\n            let title_filter = this.APIData.filter(deck => (title.trim() == '') || (deck.title.toLowerCase().includes(title.toLowerCase())))\n\n            let creator_filter = title_filter.filter(deck => (creator.trim() == '') || (creator.toLowerCase() == deck.creator.username.toLowerCase()))\n\n            // this.filter.filtered = creator_filter\n            return creator_filter\n        },\n    },\n    created() {\n        API.get('/cards/decks').then(response => {\n            console.log(response.data)\n            this.APIData = response.data\n            this.filter.filtered = response.data\n        }).catch(err => {\n            console.log(err)\n        })\n        API.get('/cards/profiles').then(response => {\n            console.log(response.data)\n            let profiles = response.data\n            profiles.forEach(p => {\n                if (p.user.id == this.user.id) {\n                    this.profile = p\n                }\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    },\n    methods: {\n        add(id) {\n            this.profile.decks.push(id)\n            API.patch(`/cards/profiles/${this.profile.id}/`, {\n                decks: this.profile.decks\n            }, {\n                headers: {\n                    'Authorization': `Bearer ${this.$store.state.accessToken}`,\n                },\n            }).then(response => {\n                console.log(response.data)\n            }).catch(err => {\n                console.log(err)\n            })\n        },\n        // filter_list() {\n        //     let title = this.filter.title\n        //     let creator = this.filter.creator\n\n        //     let title_filter = this.APIData.filter(deck => (title.trim() == '') || (deck.title.toLowerCase().includes(title.toLowerCase())))\n\n        //     let creator_filter = title_filter.filter(deck => (creator.trim() == '') || (creator.toLowerCase() == deck.creator.username.toLowerCase()))\n\n        //     this.filter.filtered = creator_filter\n        // },\n        reset() {\n            this.filter.title = ''\n            this.filter.creator = ''\n            this.filter.filtered = this.APIData\n        }\n    }\n}\n</script>\n\n<style scoped>\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}