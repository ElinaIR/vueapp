{"ast":null,"code":"// import Vue from 'vue'\nimport { createStore } from 'vuex';\nimport { API } from './axios-api';\nexport default createStore({\n  state: {\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    accessToken: JSON.parse(localStorage.getItem('access')) || null,\n    refreshToken: JSON.parse(localStorage.getItem('refresh')) || null\n  },\n  mutations: {\n    updateStorage(state, {\n      access,\n      refresh\n    }) {\n      state.accessToken = access;\n      state.refreshToken = refresh;\n      console.log('access', state.accessToken);\n      console.log('refresh', state.refreshToken);\n    },\n    refreshToken(state, {\n      newAccess\n    }) {\n      state.accessToken = newAccess;\n      console.log('newAccess', state.accessToken);\n    },\n    destroyToken(state) {\n      state.accessToken = null;\n      state.refreshToken = null;\n      state.user = null;\n    },\n    getUser(state, user) {\n      state.user = user;\n      console.log(state.user);\n    }\n  },\n  getters: {\n    loggedIn(state) {\n      return state.accessToken != null;\n    }\n  },\n  actions: {\n    userLogin(context, usercredentials) {\n      API.post('/token/', {\n        username: usercredentials.username,\n        password: usercredentials.password\n      }).then(response => {\n        localStorage.setItem('access', JSON.stringify(response.data.access));\n        localStorage.setItem('refresh', JSON.stringify(response.data.refresh));\n        context.commit('updateStorage', {\n          access: response.data.access,\n          refresh: response.data.refresh\n        });\n        console.log(usercredentials.username);\n        API.get('/users/', {\n          params: JSON.stringify({\n            username: usercredentials.username\n          })\n        }).then(response => {\n          console.log(response.data);\n          localStorage.setItem('user', JSON.stringify(response.data));\n          context.commit('getUser', {\n            user: response.data\n          });\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    tokenRefresh(context, refreshToken) {\n      API.post('/token/refresh/', {\n        refresh: refreshToken\n      }).then(response => {\n        localStorage.setItem('access', response.data.access);\n        context.commit('refreshToken', {\n          newAccess: response.data.access\n        });\n        // context.commit('getUser')\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    userLogout(context) {\n      if (context.getters.loggedIn) {\n        localStorage.removeItem('user');\n        localStorage.removeItem('access');\n        localStorage.removeItem('refresh');\n        context.commit('destroyToken');\n      }\n    }\n  }\n});","map":{"version":3,"names":["createStore","API","state","user","JSON","parse","localStorage","getItem","accessToken","refreshToken","mutations","updateStorage","access","refresh","console","log","newAccess","destroyToken","getUser","getters","loggedIn","actions","userLogin","context","usercredentials","post","username","password","then","response","setItem","stringify","data","commit","get","params","catch","err","tokenRefresh","userLogout","removeItem"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/store.js"],"sourcesContent":["// import Vue from 'vue'\nimport { createStore} from 'vuex'\nimport { API } from './axios-api'\n\nexport default createStore({\n    state: {\n        user: JSON.parse(localStorage.getItem('user')) || null,\n        accessToken: JSON.parse(localStorage.getItem('access')) || null,\n        refreshToken: JSON.parse(localStorage.getItem('refresh')) || null,\n    },\n    mutations: {\n        updateStorage (state, { access, refresh }) {\n            state.accessToken = access\n            state.refreshToken = refresh\n            console.log('access', state.accessToken)\n            console.log('refresh', state.refreshToken)\n        },\n        refreshToken (state, { newAccess }) {\n            state.accessToken = newAccess\n            console.log('newAccess', state.accessToken)\n        },\n        destroyToken (state) {\n            state.accessToken = null\n            state.refreshToken = null\n            state.user = null\n        },\n        getUser (state, user) {\n            state.user = user\n            console.log(state.user)\n        }\n    },\n    getters: {\n        loggedIn (state) {\n            return state.accessToken != null\n        }\n    },\n    actions: {\n        userLogin (context, usercredentials) {\n            API.post('/token/', {\n                username: usercredentials.username,\n                password: usercredentials.password\n            }).then(response => {\n                localStorage.setItem('access', JSON.stringify(response.data.access))\n                localStorage.setItem('refresh', JSON.stringify(response.data.refresh))\n                context.commit('updateStorage', { \n                    access: response.data.access, \n                    refresh: response.data.refresh \n                })\n                console.log(usercredentials.username)\n                API.get('/users/', { \n                    params: JSON.stringify({ username: usercredentials.username }) \n                }).then(response => {\n                    console.log(response.data)\n                    localStorage.setItem('user', JSON.stringify(response.data))\n                    context.commit('getUser', {\n                        user: response.data\n                    })\n                })\n            }).catch(err => {\n                console.log(err)\n            })\n        },\n        tokenRefresh (context, refreshToken) {\n            API.post('/token/refresh/', {\n                refresh: refreshToken,\n            }).then(response => {\n                localStorage.setItem('access', response.data.access)\n                context.commit('refreshToken', { newAccess: response.data.access })\n                // context.commit('getUser')\n            }).catch(err => {\n                console.log(err)\n            })\n        },\n        userLogout (context) {\n            if (context.getters.loggedIn) {\n                localStorage.removeItem('user')\n                localStorage.removeItem('access')\n                localStorage.removeItem('refresh')\n                context.commit('destroyToken')\n            }\n        }\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}