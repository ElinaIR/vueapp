{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-sm\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_1, [$data.start ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.APIData), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createVNode","_component_Navbar","_createElementVNode","_hoisted_1","$data","start","_createElementBlock","_hoisted_2","_toDisplayString","APIData"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/EGETask1.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container-sm\">\n        <div v-if=\"start\"> {{ APIData }} </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'EGETask1',\n    // props: ['id'],\n    data() {\n        return {\n            start: false,\n            prepare: false,\n            record: false,\n            APIData: ''\n        }\n    },\n    components: {\n        Navbar\n    },\n    created() {\n        API.get(`/ege/variants/${this.$route.params.id}/tasks`,)\n            .then(response => {\n                console.log('Post API has received data')\n                this.APIData = response.data.tasks[0]\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        \n        let start_timer = 10\n        setTimeout(() => {\n            this.start = true\n        }, start_timer * 1000)\n    },\n}\n</script>\n\n<style scoped></style>"],"mappings":";;EAESA,KAAK,EAAC;AAAc;;;;;;6DADzBC,YAAA,CAAiBC,iBAAA,GACjBC,mBAAA,CAEM,OAFNC,UAEM,GADSC,KAAA,CAAAC,KAAK,I,cAAhBC,mBAAA,CAAuC,OAAAC,UAAA,EAAAC,gBAAA,CAAjBJ,KAAA,CAAAK,OAAO,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}