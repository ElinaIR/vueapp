{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_Bar = _resolveComponent(\"Bar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_1, [$data.loaded ? (_openBlock(), _createBlock(_component_Bar, {\n    key: 0,\n    id: \"bar_chart\",\n    options: $data.BarChartOptions,\n    data: $data.BarChartData\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createVNode","_component_Navbar","_createElementVNode","_hoisted_1","$data","loaded","_createBlock","_component_Bar","id","options","BarChartOptions","data","BarChartData"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/Stats.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <Bar v-if=\"loaded\" id=\"bar_chart\" :options=\"BarChartOptions\" :data=\"BarChartData\" />\n    </div>\n</template>\n<script>\nimport { API } from '../axios-api'\n// import { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue'\nimport { Bar } from 'vue-chartjs'\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js'\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\nexport default {\n    name: 'Stats',\n    components: {\n        Navbar, Bar\n    },\n    data() {\n        return {\n            loaded: false,\n            BarChartData: {\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\n            },\n            BarChartOptions: {\n                responsive: true\n            }\n        }\n    },\n    async mounted() {\n        this.loaded = false\n        await API.get('/ege/popularity').then(response => {\n            this.BarChartData = response.data\n            this.loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n}\n</script>\n<style scoped>\n    \n</style>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;;;;6DADtBC,YAAA,CAAiBC,iBAAA,GACjBC,mBAAA,CAEM,OAFNC,UAEM,GADSC,KAAA,CAAAC,MAAM,I,cAAjBC,YAAA,CAAoFC,cAAA;;IAAjEC,EAAE,EAAC,WAAW;IAAEC,OAAO,EAAEL,KAAA,CAAAM,eAAe;IAAGC,IAAI,EAAEP,KAAA,CAAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}