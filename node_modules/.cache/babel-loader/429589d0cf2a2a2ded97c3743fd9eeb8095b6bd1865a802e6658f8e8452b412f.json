{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API } from '../axios-api';\nimport Navbar from '../components/Navbar.vue';\nexport default {\n  name: 'EGETask1',\n  // props: ['id'],\n  data() {\n    return {\n      counteddown: false,\n      countdown: 3,\n      start: false,\n      APIData: '',\n      BaseData: '',\n      start_pl: new Audio(),\n      task_pl: new Audio(),\n      speak_pl: new Audio(),\n      startTimeout: '',\n      prepareTimeout: '',\n      recordTimeout: ''\n    };\n  },\n  components: {\n    Navbar\n  },\n  created() {\n    API.get(`/ege/variants/${this.$route.params.id}/tasks`).then(response => {\n      console.log(response.data);\n      this.APIData = response.data.tasks[0];\n    }).catch(err => {\n      console.log(err);\n    });\n    API.get(`/base-audio`).then(response => {\n      console.log(response.data);\n      this.BaseData = response.data.at(-1);\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  mounted() {\n    let start_interval = setInterval(() => {\n      this.countdown--;\n    }, 1000);\n    setTimeout(() => {\n      clearInterval(start_interval);\n      this.counteddown = true;\n    }, 3000);\n  },\n  methods: {\n    handleclick() {\n      this.start_pl.src = this.BaseData.start;\n      this.start_pl.play();\n      this.startTimeout = setTimeout(() => {\n        this.start = true;\n        var task_url = 'http://127.0.0.1:8000' + this.APIData.audio;\n        this.task_pl.src = task_url;\n        console.log(this.task_pl);\n        this.task_pl.play();\n        this.prepareTimeout = setTimeout(() => {\n          this.speak_pl.src = this.BaseData.start_speaking;\n          this.speak_pl.play();\n          var percent = 0;\n          var timerid = setInterval(function () {\n            percent += 5;\n            document.getElementById('pr_bar').ariaValueNow = percent;\n            if (percent >= 100) {\n              clearInterval(timerid);\n              document.getElementById('pr_bar').ariaValueNow = percent;\n            }\n          }, 200);\n          this.recordTimeout = setTimeout(() => {\n            var percent = 0;\n            var timerid = setInterval(function () {\n              percent += 5;\n              document.getElementById('pr_bar').ariaValueNow = percent;\n              if (percent >= 100) {\n                clearInterval(timerid);\n                document.getElementById('pr_bar').ariaValueNow = percent;\n              }\n            }, 200);\n            this.$router.push({\n              name: 'ege-task2',\n              params: {\n                id: this.$route.params.id\n              }\n            });\n          }, this.APIData.record_time * 1000);\n        }, this.APIData.prepare_time * 1000);\n      }, 3000);\n    },\n    handleSkip() {\n      clearTimeout(this.startTimeout);\n      clearTimeout(this.prepareTimeout);\n      clearTimeout(this.recordTimeout);\n      this.start_pl.pause();\n      this.task_pl.pause();\n      this.speak_pl.pause();\n      this.$router.push({\n        name: 'ege-task2',\n        params: {\n          id: this.$route.params.id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["API","Navbar","name","data","counteddown","countdown","start","APIData","BaseData","start_pl","Audio","task_pl","speak_pl","startTimeout","prepareTimeout","recordTimeout","components","created","get","$route","params","id","then","response","console","log","tasks","catch","err","at","mounted","start_interval","setInterval","setTimeout","clearInterval","methods","handleclick","src","play","task_url","audio","start_speaking","percent","timerid","document","getElementById","ariaValueNow","$router","push","record_time","prepare_time","handleSkip","clearTimeout","pause"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/EGETask1.vue"],"sourcesContent":["<template>\n    <div tabindex=\"-1\" @keypress=\"handleclick\">\n    <div class=\"vh-100 position-relative\" :class=\"{'d-flex': !start, 'flex-column': !start, 'justify-content-center': !start }\">\n        <div :class=\"{'fixed-top': !start}\"><Navbar></Navbar></div>\n        <div class=\"container\">\n            <h1 v-if=\"!counteddown\" class=\"text-center text-danger\"><strong>{{ countdown }}</strong></h1>\n            <h1 v-if=\"counteddown && !start\" class=\"text-center text-danger\"><strong>Now we are ready to start</strong></h1>\n\n\n            <div v-if=\"start\" class=\"mt-2\">\n                 <p><strong>{{ APIData.task }}</strong></p>\n                 <p>{{ APIData.text }}</p>\n            </div>\n        </div>\n        <div class=\" bottom-0 m-5\">\n            <div class=\"progress\">\n                <div class=\"progress-bar w-75\" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\" id=\"pr_bar\"></div>\n            </div>\n            <button v-if=\"counteddown\" class=\"btn btn-outline-secondary end-0\" @click=\"handleSkip\">Пропустить</button>\n        </div>\n    </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'EGETask1',\n    // props: ['id'],\n    data() {\n        return {\n            counteddown: false,\n            countdown: 3,\n            start: false,\n            APIData: '',\n            BaseData: '',\n            start_pl: new Audio(),\n            task_pl: new Audio(),\n            speak_pl: new Audio(),\n            startTimeout: '',\n            prepareTimeout: '',\n            recordTimeout: '',\n        }\n    },\n    components: {\n        Navbar\n    },\n    created() {\n        API.get(`/ege/variants/${this.$route.params.id}/tasks`,)\n            .then(response => {\n                console.log(response.data)\n                this.APIData = response.data.tasks[0]\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        API.get(`/base-audio`,)\n            .then(response => {\n                console.log(response.data)\n                this.BaseData = response.data.at(-1)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    },\n    mounted() {\n        let start_interval = setInterval(() => {\n            this.countdown--\n        }, 1000)\n\n        setTimeout(() => {\n            clearInterval(start_interval)\n            this.counteddown = true\n        }, 3000)\n\n    },\n    methods: {\n        handleclick() {\n            this.start_pl.src = this.BaseData.start\n            this.start_pl.play()\n\n            this.startTimeout = setTimeout(() => {\n                this.start = true\n                var task_url = 'http://127.0.0.1:8000' + this.APIData.audio\n                this.task_pl.src = task_url\n                console.log(this.task_pl)\n                this.task_pl.play()\n\n                this.prepareTimeout = setTimeout(() => {\n                    this.speak_pl.src = this.BaseData.start_speaking\n                    this.speak_pl.play()\n                    var percent = 0\n                    var timerid = setInterval(function() {\n                        percent += 5\n                        document.getElementById('pr_bar').ariaValueNow = percent\n\n                        if (percent >= 100) {\n                            clearInterval(timerid)\n                            document.getElementById('pr_bar').ariaValueNow = percent\n                        }\n                    }, 200)\n\n                    this.recordTimeout = setTimeout(() => {\n                        var percent = 0\n                        var timerid = setInterval(function () {\n                            percent += 5\n                            document.getElementById('pr_bar').ariaValueNow = percent\n\n                            if (percent >= 100) {\n                                clearInterval(timerid)\n                                document.getElementById('pr_bar').ariaValueNow = percent\n                            }\n                        }, 200)\n                        this.$router.push({ name: 'ege-task2', params: {id: this.$route.params.id }})\n                    }, this.APIData.record_time * 1000)\n                }, this.APIData.prepare_time * 1000)\n            }, 3000)\n            \n        },\n        handleSkip() {\n            clearTimeout(this.startTimeout)\n            clearTimeout(this.prepareTimeout)\n            clearTimeout(this.recordTimeout)\n            this.start_pl.pause()\n            this.task_pl.pause()\n            this.speak_pl.pause()\n            this.$router.push({ name: 'ege-task2', params: { id: this.$route.params.id } })\n        }\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}