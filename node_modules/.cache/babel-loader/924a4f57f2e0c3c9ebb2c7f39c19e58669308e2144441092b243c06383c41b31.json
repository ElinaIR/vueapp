{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API } from '../axios-api';\nimport { mapState } from 'vuex';\nimport Navbar from '../components/Navbar.vue';\nexport default {\n  name: 'MyDecks',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      loaded: false,\n      base_url: 'http://127.0.0.1:8000',\n      cards: []\n    };\n  },\n  computed: {\n    ...mapState(['accessToken', 'user']),\n    paginatedCard() {\n      let start = this.currentPage - 1;\n      let end = start + 1;\n      let cards = this.cards;\n      console.log('cards', cards);\n      console.log('start', start);\n      console.log('end', end);\n      console.log('slice', cards.slice(start, end));\n      return cards.slice(start, end);\n    },\n    currentPage() {\n      return Number(this.$route.query.page || '1');\n    }\n  },\n  created() {\n    API.get('/cards/cards').then(response => {\n      console.log(response.data);\n      let all_cards = response.data;\n      let today = new Date();\n      all_cards.forEach(c => {\n        let next = new Date(c.next_review);\n        if (this.user.id == c.user && c.original_card.deck.slug == this.$route.params.slug && next.getTime() < today.getTime()) {\n          this.cards.push(c);\n        }\n      });\n      this.loaded = true;\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  methods: {\n    no_card() {\n      let card = this.paginatedCard()[0];\n      console.log(card);\n      let today = new Date();\n      let last_wrong = new Date();\n      let deltaDays = Math.ceil((today.getTime() - last_wrong.getTime()) / (1000 * 60 * 60 * 24));\n      deltaDays = deltaDays * 2 + 1;\n      let delta = new Date(deltaDays * (1000 * 60 * 60 * 24));\n      let next_review = new Date(last_wrong.getTime() + delta);\n      console.log(last_wrong, deltaDays, delta, next_review);\n    },\n    yes_card() {\n      let card = this.paginatedCard()[0];\n      console.log(card);\n      let today = new Date();\n      let last_wrong = new Date(card.last_wrong);\n      let deltaDays = Math.ceil((today.getTime() - last_wrong.getTime()) / (1000 * 60 * 60 * 24));\n      deltaDays = deltaDays * 2 + 1;\n      let delta = new Date(deltaDays * (1000 * 60 * 60 * 24));\n      let next_review = new Date(last_wrong.getTime() + delta);\n      console.log(last_wrong, deltaDays, delta, next_review);\n    }\n  }\n};","map":{"version":3,"names":["API","mapState","Navbar","name","components","data","loaded","base_url","cards","computed","paginatedCard","start","currentPage","end","console","log","slice","Number","$route","query","page","created","get","then","response","all_cards","today","Date","forEach","c","next","next_review","user","id","original_card","deck","slug","params","getTime","push","catch","err","methods","no_card","card","last_wrong","deltaDays","Math","ceil","delta","yes_card"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/card_views/Review.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <div v-if=\"loaded\">\n        <div class=\"card mt-3\" v-for=\"c in paginatedCard\" :key=\"c.id\">\n            <div class=\"card-body\">\n                <div class=\"\">\n                    <div>\n                        <img :src=\"base_url + c.front_pic\" class=\"img-fluid\" alt=\"\" v-if=\"c.original_card.front_pic\">\n                        <h5 class=\"card-title text-center\" v-if=\"c.original_card.front_word\">{{ c.original_card.front_word }}</h5>\n                        <br>\n                        <p id=\"back\" class=\"card-text text-center text-white\">{{ c.original_card.back }}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n        <div class=\"text-center mt-3\">\n\n            <button class=\"btn btn-outline-danger\" @click=\"no_card\">Не помню</button>\n            <router-link :to=\"{ path: this.$route.path, query: { page: `${this.currentPage + 1}`}}\" class=\"btn btn-outline-warning\">Помню</router-link>\n            <button class=\"btn btn-outline-success\" @click=\"yes_card\">Помню отлично</button>\n        <!-- {% if page_obj.has_next %}\n            <a href=\"{{ c.get_no_url }}\" class=\"btn btn-outline-danger mx-5\"> Не помню </a>\n            <a href=\"?page={{page_obj.next_page_number}}\" class=\"btn btn-primary mx-2\"> Помню </a>\n            <a href=\"{{ c.get_yes_url }}\" class=\"btn btn-success mx-4\"> Помню отлично </a>\n        {% elif page_obj.has_previous %}\n            <a href=\"{{ c.get_no_url }}\" class=\"btn btn-outline-danger mx-5\"> Не помню </a>\n            <a href=\"?page={{page_obj.previous_page_number}}\" class=\"btn btn-primary mx-2\"> Помню </a>\n            <a href=\"{{ c.get_yes_url }}\" class=\"btn btn-success mx-4\"> Помню отлично </a>\n        {% elif not page_obj.has_other_pages %}\n            <a href=\"{{ c.get_no_url }}\" class=\"btn btn-outline-danger mx-5\"> Не помню </a>\n            <a href=\"?page={{page_obj.number}}\" class=\"btn btn-primary mx-2\"> Помню </a>\n            <a href=\"{{ c.get_yes_url }}\" class=\"btn btn-success mx-4\"> Помню отлично </a>\n        {% endif %} -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue'\n\nexport default {\n    name: 'MyDecks',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            loaded: false,\n            base_url: 'http://127.0.0.1:8000',\n            cards: [],\n        }\n    },\n    computed: {\n        ...mapState(['accessToken', 'user']),\n        paginatedCard() {\n            let start = this.currentPage - 1\n            let end = start + 1\n            let cards = this.cards\n            console.log('cards', cards)\n            console.log('start', start)\n            console.log('end', end)\n            console.log('slice', cards.slice(start, end))\n            return cards.slice(start, end)\n        },\n        currentPage() {\n            return Number(this.$route.query.page || '1')\n        }\n    },\n    created() {\n        API.get('/cards/cards').then(response => {\n            console.log(response.data)\n            let all_cards = response.data\n            let today = new Date()\n            all_cards.forEach(c => {\n                let next = new Date(c.next_review)\n                if ((this.user.id == c.user) && (c.original_card.deck.slug == this.$route.params.slug) && (next.getTime() < today.getTime())) {\n                    this.cards.push(c)\n                }\n            })\n            this.loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n    },\n    methods: {\n        no_card() {\n            let card = this.paginatedCard()[0]\n            console.log(card)\n            let today = new Date()\n            let last_wrong = new Date()\n            let deltaDays = Math.ceil((today.getTime() - last_wrong.getTime()) / (1000 * 60 * 60 * 24))\n            deltaDays = deltaDays * 2 + 1\n            let delta = new Date(deltaDays * (1000 * 60 * 60 * 24))\n            let next_review = new Date(last_wrong.getTime() + delta)\n            console.log(last_wrong, deltaDays, delta, next_review)\n        },\n        yes_card() {\n            let card = this.paginatedCard()[0]\n            console.log(card)\n            let today = new Date()\n            let last_wrong = new Date(card.last_wrong)\n            let deltaDays = Math.ceil((today.getTime() - last_wrong.getTime()) / (1000 * 60 * 60 * 24)) \n            deltaDays = deltaDays * 2 + 1\n            let delta = new Date(deltaDays * (1000 * 60 * 60 * 24))\n            let next_review = new Date(last_wrong.getTime() + delta)\n            console.log(last_wrong, deltaDays, delta, next_review)\n        }\n    }\n    \n}\n</script>\n<style lang=\"\">\n    \n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}