{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"vh-100\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"d-flex justify-content-around mt-3\"\n};\nconst _hoisted_4 = {\n  class: \"\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"img\", {\n  id: \"image\",\n  src: \"\",\n  alt: \"\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"col-6\"\n};\nconst _hoisted_7 = {\n  style: {\n    \"white-space\": \"pre\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <keyboard-events @keyup=\\\"handleclick\\\"></keyboard-events> \"), _createElementVNode(\"div\", {\n    tabindex: \"-1\",\n    onKeypress: _cache[1] || (_cache[1] = (...args) => $options.handleclick && $options.handleclick(...args))\n  }, [_createCommentVNode(\" <Navbar v-if=\\\"start\\\"></Navbar> \"), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString($data.APIData.pic_caption), 1 /* TEXT */)]), _hoisted_5]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", _hoisted_7, [_createElementVNode(\"strong\", null, _toDisplayString($data.APIData.task), 1 /* TEXT */)]), _createCommentVNode(\" <p><strong>{{ task }}</strong></p>\\n                        <ul>\\n                            <li v-for=\\\"p in points\\\" :key=\\\"p\\\">\\n                                {{ p }}\\n                            </li>\\n                        </ul>\\n                        <p><strong>{{ task_end }}</strong></p> \")])])]), _createElementVNode(\"button\", {\n    class: \"btn btn-outline-secondary position-absolute bottom-0 end-0 m-5\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.handleSkip && $options.handleSkip(...args))\n  }, \"Пропустить\")]), _createCommentVNode(\" <div class=\\\"container\\\">\\n        <div v-if=\\\"start\\\" class=\\\"mt-2\\\">\\n            <p><strong>{{ APIData.task }}</strong></p>\\n            <p>{{ APIData.text }}</p>\\n        </div>\\n    </div> \")], 32 /* HYDRATE_EVENTS */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","id","src","alt","style","_createCommentVNode","tabindex","onKeypress","_cache","args","$options","handleclick","_hoisted_1","_createVNode","_component_Navbar","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","APIData","pic_caption","_hoisted_5","_hoisted_6","_hoisted_7","task","onClick","handleSkip"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/EGETask2.vue"],"sourcesContent":["<template>\n    <!-- <keyboard-events @keyup=\"handleclick\"></keyboard-events> -->\n    <div tabindex=\"-1\" @keypress=\"handleclick\">\n        <!-- <Navbar v-if=\"start\"></Navbar> -->\n        <div class=\"vh-100\">\n            <Navbar></Navbar>\n            <div class=\"container\">\n                <div class=\"d-flex justify-content-around mt-3\">\n                    <div class=\"\">\n                        <p><strong>{{ APIData.pic_caption }}</strong></p>\n                        <img id=\"image\" src=\"\" alt=\"\">\n                    </div>\n                    <div class=\"col-6\">\n                        <p style=\"white-space: pre;\"><strong>{{ APIData.task }}</strong></p>\n                        <!-- <p><strong>{{ task }}</strong></p>\n                        <ul>\n                            <li v-for=\"p in points\" :key=\"p\">\n                                {{ p }}\n                            </li>\n                        </ul>\n                        <p><strong>{{ task_end }}</strong></p> -->\n                    </div>\n                </div>\n            </div>\n\n            <button class=\"btn btn-outline-secondary position-absolute bottom-0 end-0 m-5\" @click=\"handleSkip\">Пропустить</button>\n        </div>\n        <!-- <div class=\"container\">\n        <div v-if=\"start\" class=\"mt-2\">\n            <p><strong>{{ APIData.task }}</strong></p>\n            <p>{{ APIData.text }}</p>\n        </div>\n    </div> -->\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'EGETask1',\n    // props: ['id'],\n    data() {\n        return {\n            APIData: '',\n            img_url: '',\n            task: '',\n            points: [],\n            task_end: '',\n            BaseData: '',\n        }\n    },\n    components: {\n        Navbar\n    },\n    created() {\n        API.get(`/ege/variants/${this.$route.params.id}/tasks`,)\n            .then(response => {\n                console.log(response.data)\n                this.APIData = response.data.tasks[1]\n                this.img_url = 'http://127.0.0.1:8000' + this.APIData.pic\n                document.getElementById('image').src = this.img_url\n\n                // let text = this.APIData.task\n                // let first = text.split(': ')\n                // this.task = first[0] + ':'\n                // let second = first[1].split('. ')\n                // this.task_end = second[1]\n                // second[0] = second[0] + '.'\n                // let third = second[0].split('; ')\n                // for (let p in third) {\n                //     p = p + ';'\n                // }\n                // this.points = third\n\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        // await this.startfunc()\n        // this.start_player.src = this.BaseData.start\n        // this.start_player.play()\n        API.get(`/base-audio`,)\n            .then(response => {\n                console.log(response.data)\n                this.BaseData = response.data.at(-1)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        // let start_timer = 5\n        // setTimeout(() => {\n        //     this.start = true\n        // }, start_timer * 1000)\n    },\n    mounted() {\n        // document.getElementsById('keyid').focus()\n        // let start_timer = this.countdown\n        // let start_interval = setInterval(() => {\n        //     this.countdown--\n        // }, 1000)\n        // var pl = new Audio(this.BaseData.start)\n\n        // setTimeout(() => {\n        //     clearInterval(start_interval)\n        //     this.counteddown = true\n            // var pl = new Audio(this.BaseData.start)\n            // pl.play()\n\n            // this.start_player.src = this.APIData.audio\n            // this.start_player.play()\n            // this.start_player.addEventListener('ended', function() {\n            //     this.start = true\n            // })\n        // }, 3000)\n\n    },\n    methods: {\n        handleclick() {\n            // new Audio(this.BaseData.start).play().catch(err => {\n            //     console.log(err)\n            // })\n            // this.start_player.src = this.BaseData.start\n            // this.start_player.play()\n            // this.start_player.addEventListener('ended', function() {\n            //     this.start = true\n            // })\n            var start_pl = new Audio(this.BaseData.start)\n            start_pl.play()\n            // pl.onended = function() {\n            //     var started = true\n            //     console.log(started)\n            // }\n            setTimeout(() => {\n                this.start = true\n                var task_url = 'http://127.0.0.1:8000' + this.APIData.audio\n                var task_pl = new Audio(task_url)\n                console.log(task_pl)\n                task_pl.play()\n                setTimeout(() => {\n                    var speak_pl = new Audio(this.BaseData.start_speaking)\n                    speak_pl.play()\n                    setTimeout(() => {\n                        this.$router.push({ name: 'ege-task2', params: { id: this.$route.params.id } })\n                    }, this.APIData.record_time * 1000)\n                }, this.APIData.prepare_time * 1000)\n            }, 3000)\n\n        },\n        handleSkip() {\n            this.start_pl.pause()\n            this.task_pl.pause()\n            this.speak_pl.pause()\n            this.$router.push({ name: 'ege-task2', params: { id: this.$route.params.id } })\n        }\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";;EAIaA,KAAK,EAAC;AAAQ;;EAEVA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAoC;;EACtCA,KAAK,EAAC;AAAE;gCAETC,mBAAA,CAA8B;EAAzBC,EAAE,EAAC,OAAO;EAACC,GAAG,EAAC,EAAE;EAACC,GAAG,EAAC;;;EAE1BJ,KAAK,EAAC;AAAO;;EACXK,KAAyB,EAAzB;IAAA;EAAA;AAAyB;;;6DAZhDC,mBAAA,gEAAiE,EACjEL,mBAAA,CA+BM;IA/BDM,QAAQ,EAAC,IAAI;IAAEC,UAAQ,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;MACrCJ,mBAAA,sCAAuC,EACvCL,mBAAA,CAsBM,OAtBNY,UAsBM,GArBFC,YAAA,CAAiBC,iBAAA,GACjBd,mBAAA,CAiBM,OAjBNe,UAiBM,GAhBFf,mBAAA,CAeM,OAfNgB,UAeM,GAdFhB,mBAAA,CAGM,OAHNiB,UAGM,GAFFjB,mBAAA,CAAiD,YAA9CA,mBAAA,CAA0C,gBAAAkB,gBAAA,CAA/BC,KAAA,CAAAC,OAAO,CAACC,WAAW,iB,GACjCC,UAA8B,C,GAElCtB,mBAAA,CASM,OATNuB,UASM,GARFvB,mBAAA,CAAoE,KAApEwB,UAAoE,GAAvCxB,mBAAA,CAAmC,gBAAAkB,gBAAA,CAAxBC,KAAA,CAAAC,OAAO,CAACK,IAAI,iB,GACpDpB,mBAAA,oTAM0C,C,OAKtDL,mBAAA,CAAsH;IAA9GD,KAAK,EAAC,gEAAgE;IAAE2B,OAAK,EAAAlB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAiB,UAAA,IAAAjB,QAAA,CAAAiB,UAAA,IAAAlB,IAAA,CAAU;KAAE,YAAU,E,GAEjHJ,mBAAA,uMAKM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}