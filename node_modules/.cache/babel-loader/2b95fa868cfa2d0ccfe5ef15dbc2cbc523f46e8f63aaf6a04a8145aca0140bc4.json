{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3ffbb476\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"vh-100\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"mt-2\"\n};\nconst _hoisted_4 = {\n  class: \"position-absolute bottom-0 w-100 d-flex justify-content-around align-items-center mb-3\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"w-75\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"progress\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"progress-bar progress-bar-info\",\n  role: \"progressbar\",\n  \"aria-valuenow\": \"0\",\n  \"aria-valuemin\": \"0\",\n  \"aria-valuemax\": \"100\",\n  style: {\n    \"width\": \"0%\"\n  },\n  id: \"pr_bar\"\n})])], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    tabindex: \"-1\",\n    onKeypress: _cache[0] || (_cache[0] = (...args) => $options.handleclick && $options.handleclick(...args))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString($data.APIData.task), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", null, [_createVNode(_component_router_link, {\n    to: {\n      name: 'ege-task4',\n      params: {\n        exam: this.$route.params.exam,\n        id: this.$route.params.id\n      }\n    },\n    class: \"btn format_btn rounded-pill\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Далее\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])])])])], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["class","_createElementVNode","role","style","id","_createElementBlock","tabindex","onKeypress","_cache","args","$options","handleclick","_hoisted_1","_createVNode","_component_Navbar","_hoisted_2","_hoisted_3","_toDisplayString","$data","APIData","task","_hoisted_4","_hoisted_5","_component_router_link","to","name","params","exam","$route"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/EGETask3.vue"],"sourcesContent":["<template>\n    <div tabindex=\"-1\" @keypress=\"handleclick\">\n        <div class=\"vh-100\">\n            <Navbar></Navbar>\n            <div class=\"container\">\n                <div class=\"mt-2\">\n                     <p><strong>{{ APIData.task }}</strong></p>\n                </div>\n            </div>\n            <div class=\"position-absolute bottom-0 w-100 d-flex justify-content-around align-items-center mb-3\">\n                <div class=\"w-75\">\n                    <div class=\"progress\">\n                        <div class=\"progress-bar progress-bar-info\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width:0%\" id=\"pr_bar\" ></div>\n                    </div>\n                </div>\n                <div>\n                    <router-link :to=\"{ name: 'ege-task4', params: { exam: this.$route.params.exam, id: this.$route.params.id } }\" class=\"btn format_btn rounded-pill\">Далее</router-link>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'EGETask3',\n    data() {\n        return {\n            APIData: '',\n            BaseData: '',\n            task_pl: new Audio(),\n            start_pl: new Audio(),\n            q_pl: new Audio(),\n            q: 1,\n            end_pl: new Audio(),\n            timeouts: [],\n        }\n    },\n    components: {\n        Navbar\n    },\n    computed: {\n        ege: function () {\n            return this.$route.params.exam == 'ege'\n        },\n        oge: function () {\n            return this.$route.params.exam == 'oge'\n        },\n        q_max: function () {\n            if (this.$route.params.exam == 'oge') {\n                return 6\n            }\n            return 5\n        },\n    },\n    created() {\n        API.get(`/${this.$route.params.exam}/variants/${this.$route.params.id}/tasks`,)\n            .then(response => {\n                console.log(response.data)\n                if (this.ege) {\n                    this.APIData = response.data.tasks[2]   \n                }\n                else if (this.oge) {\n                    this.APIData = response.data.tasks[1]\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        API.get(`/base-audio`,)\n            .then(response => {\n                console.log(response.data)\n                this.BaseData = response.data.at(-1)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    },\n    mounted() {\n        setTimeout(() => {\n            this.handleclick()\n        }, 1000)\n\n        this.q_pl.addEventListener('ended', () => {\n            if (this.q == this.q_max) {\n                this.getBar(this.APIData.record_time * 10)\n\n                this.timeouts.push(setTimeout(() => {\n                    var end_url = 'http://127.0.0.1:8000' + this.APIData.end_audio\n                    this.end_pl.src = end_url\n                    this.end_pl.play()\n\n                    this.end_pl.addEventListener('ended', () => {\n                        this.$router.push({ name: 'ege-task4', params: { exam: this.$route.params.exam, id: this.$route.params.id } })\n                    })\n                }, this.APIData.record_time * 1000))\n            }\n            else {\n                this.getBar(this.APIData.record_time * 10)\n\n                this.q = this.q + 1\n                console.log(this.q)\n                this.timeouts.push(setTimeout(() => {\n                    var q_url = 'http://127.0.0.1:8000' + eval(`this.APIData.question${this.q}`)\n                    console.log('q url', q_url, `this.APIData.question${this.q}`)\n                    this.q_pl.src = q_url\n                    this.q_pl.play()\n                }, this.APIData.record_time * 1000))\n            }\n        })\n    },\n    beforeRouteLeave() {\n        console.log(this.timouts)\n        for (let i = 0; i < this.timeouts.length; i++) {\n            clearTimeout(this.timeouts[i])\n        }\n        this.task_pl.pause()\n        this.start_pl.pause()\n        this.q_pl.pause()\n        this.end_pl.pause()\n    },\n    methods: {\n        handleclick() {\n            var task_url = 'http://127.0.0.1:8000' + this.APIData.audio\n            this.task_pl.src = task_url\n            this.task_pl.play()\n\n            this.task_pl.addEventListener('ended', () => {\n                this.getBar(this.APIData.prepare_time * 10)\n\n                this.timeouts.push(setTimeout(() => {\n                    var start_url = 'http://127.0.0.1:8000' + this.APIData.start_audio\n                    this.start_pl.src = start_url\n                    this.start_pl.play()\n                }, this.APIData.prepare_time * 1000))\n            })\n\n            this.start_pl.addEventListener('ended', () => {\n                this.timeouts.push(setTimeout(() => {\n                    var q_url = 'http://127.0.0.1:8000' + this.APIData.question1\n                    this.q_pl.src = q_url\n                    this.q_pl.play()\n                }, this.APIData.timer * 1000))\n            })\n        },\n        getBar(time) {\n            let bar = document.getElementById('pr_bar')\n            let percent = 0\n            bar.style.width = percent + '%'\n            let timerid = setInterval(function () {\n                percent += 1\n                bar.style.width = percent + '%'\n\n                if (percent >= 100) {\n                    bar.style.width = '100%'\n                    clearInterval(timerid)\n                }\n            }, time)\n        },\n    }\n}\n</script>\n\n<style scoped>\n    .format_btn {\n        width: 100px;\n        background: #FFB904;\n    }\n    .format_btn:hover {\n        background: linear-gradient(to bottom right, #FFB904, #F2DB9F, #FFB904);\n        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\n    }\n</style>"],"mappings":";;;EAEaA,KAAK,EAAC;AAAQ;;EAEVA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAM;;EAIhBA,KAAK,EAAC;AAAwF;gEAC/FC,mBAAA,CAIM;EAJDD,KAAK,EAAC;AAAM,I,aACbC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAU,I,aACjBC,mBAAA,CAA2J;EAAtJD,KAAK,EAAC,gCAAgC;EAACE,IAAI,EAAC,aAAa;EAAC,eAAa,EAAC,GAAG;EAAC,eAAa,EAAC,GAAG;EAAC,eAAa,EAAC,KAAK;EAACC,KAAgB,EAAhB;IAAA;EAAA,CAAgB;EAACC,EAAE,EAAC;;;;;;uBAX/JC,mBAAA,CAmBM;IAnBDC,QAAQ,EAAC,IAAI;IAAEC,UAAQ,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;MACrCR,mBAAA,CAiBM,OAjBNW,UAiBM,GAhBFC,YAAA,CAAiBC,iBAAA,GACjBb,mBAAA,CAIM,OAJNc,UAIM,GAHFd,mBAAA,CAEM,OAFNe,UAEM,GADDf,mBAAA,CAA0C,YAAvCA,mBAAA,CAAmC,gBAAAgB,gBAAA,CAAxBC,KAAA,CAAAC,OAAO,CAACC,IAAI,iB,OAGnCnB,mBAAA,CASM,OATNoB,UASM,GARFC,UAIM,EACNrB,mBAAA,CAEM,cADFY,YAAA,CAAsKU,sBAAA;IAAxJC,EAAE;MAAAC,IAAA;MAAAC,MAAA;QAAAC,IAAA,OAA4CC,MAAM,CAACF,MAAM,CAACC,IAAI;QAAAvB,EAAA,OAAWwB,MAAM,CAACF,MAAM,CAACtB;MAAE;IAAA;IAAMJ,KAAK,EAAC;;sBAA8B,MAAK,C,iBAAL,OAAK,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}