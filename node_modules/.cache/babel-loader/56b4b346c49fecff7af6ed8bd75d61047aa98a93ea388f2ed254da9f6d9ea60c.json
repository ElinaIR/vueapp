{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API } from '../axios-api';\nimport { mapState } from 'vuex';\nimport Navbar from '../components/Navbar.vue';\nexport default {\n  name: 'EGETask4',\n  // props: ['id'],\n  data() {\n    return {\n      APIData: '',\n      img1_url: '',\n      img2_url: '',\n      BaseData: '',\n      task_pl: new Audio(),\n      speak_pl: new Audio(),\n      end_pl: new Audio(),\n      prepareTimeout: '',\n      recordTimeout: '',\n      endTimeout: '',\n      timeouts: []\n    };\n  },\n  components: {\n    Navbar\n  },\n  computed: {\n    ...mapState(['user']),\n    ege: function () {\n      return this.$route.params.exam == 'ege';\n    },\n    oge: function () {\n      return this.$route.params.exam == 'oge';\n    },\n    vpr: function () {\n      return this.$route.params.exam == 'vpr';\n    }\n  },\n  created() {\n    API.get(`/${this.$route.params.exam}/variants/${this.$route.params.id}/tasks`).then(response => {\n      console.log(response.data);\n      this.APIData = response.data.tasks[3];\n      this.img1_url = 'http://127.0.0.1:8000' + this.APIData.pic1;\n      document.getElementById('image1').src = this.img1_url;\n      this.img2_url = 'http://127.0.0.1:8000' + this.APIData.pic2;\n      document.getElementById('image2').src = this.img2_url;\n    }).catch(err => {\n      console.log(err);\n    });\n    API.get(`/base-audio`).then(response => {\n      console.log(response.data);\n      this.BaseData = response.data.at(-1);\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  mounted() {\n    this.end_pl.addEventListener('ended', () => {\n      if (this.user) {\n        if (this.$route.params.exam == 'ege') {\n          API.post('/popularity/', {\n            variant_type: this.$route.params.exam,\n            ege_variant: this.$route.params.id,\n            user: this.user.id\n          }).then(response => {\n            console.log(response);\n            this.$router.push({\n              name: 'exam',\n              params: {\n                exam: this.$route.params.exam\n              }\n            });\n          }).catch(err => {\n            console.log(err);\n          });\n        } else if (this.$route.params.exam == 'oge') {\n          API.post('/popularity/', {\n            variant_type: this.$route.params.exam,\n            oge_variant: this.$route.params.id,\n            user: this.user.id\n          }).then(response => {\n            console.log(response);\n            this.$router.push({\n              name: 'exam',\n              params: {\n                exam: this.$route.params.exam\n              }\n            });\n          }).catch(err => {\n            console.log(err);\n          });\n        } else if (this.$route.params.exam == 'vpr') {\n          API.post('/popularity/', {\n            variant_type: this.$route.params.exam,\n            vpr_variant: this.$route.params.id,\n            user: this.user.id\n          }).then(response => {\n            console.log(response);\n            this.$router.push({\n              name: 'exam',\n              params: {\n                exam: this.$route.params.exam\n              }\n            });\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n      }\n    });\n    this.handleclick();\n  },\n  beforeRouteLeave() {\n    for (let i = 0; i < this.timeouts.length; i++) {\n      clearTimeout(this.timeouts[i]);\n    }\n    this.task_pl.pause();\n    this.speak_pl.pause();\n    this.end_pl.pause();\n  },\n  methods: {\n    handleclick() {\n      var task_url = 'http://127.0.0.1:8000' + this.APIData.audio;\n      this.task_pl.src = task_url;\n      this.task_pl.play();\n      this.task_pl.addEventListener('ended', () => {\n        this.getBar(this.APIData.prepare_time * 10);\n        this.timeouts.push(setTimeout(() => {\n          this.speak_pl.src = this.BaseData.start_speaking;\n          this.speak_pl.play();\n        }, this.APIData.prepare_time * 1000));\n      });\n      this.speak_pl.addEventListener('ended', () => {\n        this.getBar(this.APIData.prepare_time * 10);\n        this.timeouts.push(setTimeout(() => {\n          this.end_pl.src = this.BaseData.end;\n          this.end_pl.play();\n        }, this.APIData.record_time * 1000));\n      });\n\n      // this.end_pl.addEventListener('ended', () => {\n      //     if (this.user) {\n      //         if (this.$route.params.exam == 'ege') {\n      //             API.post('/popularity/', {\n      //                 variant_type: this.$route.params.exam,\n      //                 ege_variant: this.$route.params.id,\n      //                 user: this.user.id\n      //             }).then(response => {\n      //                 console.log(response)\n      //                 this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n      //             }).catch(err => {\n      //                 console.log(err)\n      //             })\n      //         }\n      //         else if (this.$route.params.exam == 'oge') {\n      //             API.post('/popularity/', {\n      //                 variant_type: this.$route.params.exam,\n      //                 oge_variant: this.$route.params.id,\n      //                 user: this.user.id\n      //             }).then(response => {\n      //                 console.log(response)\n      //                 this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n      //             }).catch(err => {\n      //                 console.log(err)\n      //             })\n      //         }\n      //         else if (this.$route.params.exam == 'vpr') {\n      //             API.post('/popularity/', {\n      //                 variant_type: this.$route.params.exam,\n      //                 vpr_variant: this.$route.params.id,\n      //                 user: this.user.id\n      //             }).then(response => {\n      //                 console.log(response)\n      //                 this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n      //             }).catch(err => {\n      //                 console.log(err)\n      //             })\n      //         }\n      //     }\n      // })\n    },\n\n    getBar(time) {\n      let bar = document.getElementById('pr_bar');\n      let percent = 0;\n      bar.style.width = percent + '%';\n      let timerid = setInterval(function () {\n        percent += 1;\n        bar.style.width = percent + '%';\n        if (percent >= 100) {\n          bar.style.width = '100%';\n          clearInterval(timerid);\n        }\n      }, time);\n    }\n  }\n};","map":{"version":3,"names":["API","mapState","Navbar","name","data","APIData","img1_url","img2_url","BaseData","task_pl","Audio","speak_pl","end_pl","prepareTimeout","recordTimeout","endTimeout","timeouts","components","computed","ege","$route","params","exam","oge","vpr","created","get","id","then","response","console","log","tasks","pic1","document","getElementById","src","pic2","catch","err","at","mounted","addEventListener","user","post","variant_type","ege_variant","$router","push","oge_variant","vpr_variant","handleclick","beforeRouteLeave","i","length","clearTimeout","pause","methods","task_url","audio","play","getBar","prepare_time","setTimeout","start_speaking","end","record_time","time","bar","percent","style","width","timerid","setInterval","clearInterval"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/EGETask4.vue"],"sourcesContent":["<template>\n    <div tabindex=\"-1\" @keypress=\"handleclick\">\n        <div class=\"vh-100\">\n            <Navbar></Navbar>\n            <div class=\"container\">\n                <div class=\"mt-3\">\n                    <p style=\"white-space: pre-wrap;\"><strong>{{ APIData.task }}</strong></p>\n                </div>\n                <div class=\"d-flex flex-column mt-3\">\n                    <div class=\"d-flex justify-content-around\">\n                        <span class=\"col-5\"><strong>Photo 1</strong></span>\n                        <span class=\"col-5\"><strong>Photo 2</strong></span>\n                    </div>\n                    <div class=\"d-flex justify-content-around\">\n                        <img class=\"image-fluid col-5\" id=\"image1\" src=\"\" alt=\"\">\n                        <img class=\"image-fluid col-5\" id=\"image2\" src=\"\" alt=\"\">\n                    </div>\n                </div>\n            </div>\n\n            <!-- <button class=\"btn btn-outline-secondary position-absolute bottom-0 end-0 m-5\" @click=\"handleSkip\">Пропустить</button> -->\n            <div class=\"position-absolute bottom-0 w-100 d-flex justify-content-around align-items-center mb-3\">\n                <div class=\"w-75\">\n                    <div class=\"progress\">\n                        <div class=\"progress-bar progress-bar-info\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width:0%\" id=\"pr_bar\" ></div>\n                    </div>\n                </div>\n                <div>\n                            <!-- <button class=\"btn btn-outline-secondary \" v-if=\"start\" @click=\"handleSkip\">Пропустить</button> -->\n                    <router-link :to=\"{ name: 'exam', params: { exam: this.$route.params.exam } }\" class=\"btn btn-outline-secondary\">Пропустить</router-link>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'EGETask4',\n    // props: ['id'],\n    data() {\n        return {\n            APIData: '',\n            img1_url: '',\n            img2_url: '',\n            BaseData: '',\n            task_pl: new Audio(),\n            speak_pl: new Audio(),\n            end_pl: new Audio(),\n            prepareTimeout: '',\n            recordTimeout: '',\n            endTimeout: '',\n            timeouts: [],\n        }\n    },\n    components: {\n        Navbar\n    },\n    computed: {\n        ...mapState(['user']),\n        ege: function () {\n            return this.$route.params.exam == 'ege'\n        },\n        oge: function () {\n            return this.$route.params.exam == 'oge'\n        },\n        vpr: function () {\n            return this.$route.params.exam == 'vpr'\n        },\n    },\n    created() {\n        API.get(`/${this.$route.params.exam}/variants/${this.$route.params.id}/tasks`,)\n            .then(response => {\n                console.log(response.data)\n                this.APIData = response.data.tasks[3]\n                this.img1_url = 'http://127.0.0.1:8000' + this.APIData.pic1\n                document.getElementById('image1').src = this.img1_url\n                this.img2_url = 'http://127.0.0.1:8000' + this.APIData.pic2\n                document.getElementById('image2').src = this.img2_url\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        API.get(`/base-audio`,)\n            .then(response => {\n                console.log(response.data)\n                this.BaseData = response.data.at(-1)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    },\n    mounted() {\n        this.end_pl.addEventListener('ended', () => {\n            if (this.user) {\n                if (this.$route.params.exam == 'ege') {\n                    API.post('/popularity/', {\n                        variant_type: this.$route.params.exam,\n                        ege_variant: this.$route.params.id,\n                        user: this.user.id\n                    }).then(response => {\n                        console.log(response)\n                        this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n                    }).catch(err => {\n                        console.log(err)\n                    })\n                }\n                else if (this.$route.params.exam == 'oge') {\n                    API.post('/popularity/', {\n                        variant_type: this.$route.params.exam,\n                        oge_variant: this.$route.params.id,\n                        user: this.user.id\n                    }).then(response => {\n                        console.log(response)\n                        this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n                    }).catch(err => {\n                        console.log(err)\n                    })\n                }\n                else if (this.$route.params.exam == 'vpr') {\n                    API.post('/popularity/', {\n                        variant_type: this.$route.params.exam,\n                        vpr_variant: this.$route.params.id,\n                        user: this.user.id\n                    }).then(response => {\n                        console.log(response)\n                        this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n                    }).catch(err => {\n                        console.log(err)\n                    })\n                }\n            }\n        })\n        this.handleclick()\n    },\n    beforeRouteLeave() {\n        for (let i = 0; i < this.timeouts.length; i++) {\n            clearTimeout(this.timeouts[i])\n        }\n        this.task_pl.pause()\n        this.speak_pl.pause()\n        this.end_pl.pause()\n    },\n    methods: {\n        handleclick() {\n            var task_url = 'http://127.0.0.1:8000' + this.APIData.audio\n            this.task_pl.src = task_url\n            this.task_pl.play()\n\n            this.task_pl.addEventListener('ended', () => {\n                this.getBar(this.APIData.prepare_time * 10)\n\n                this.timeouts.push(setTimeout(() => {\n                    this.speak_pl.src = this.BaseData.start_speaking\n                    this.speak_pl.play()\n                }, this.APIData.prepare_time * 1000))\n            })\n\n            this.speak_pl.addEventListener('ended', () => {\n                this.getBar(this.APIData.prepare_time * 10)\n\n                this.timeouts.push(setTimeout(() => {\n                    this.end_pl.src = this.BaseData.end\n                    this.end_pl.play()\n                }, this.APIData.record_time * 1000))\n            })\n\n            // this.end_pl.addEventListener('ended', () => {\n            //     if (this.user) {\n            //         if (this.$route.params.exam == 'ege') {\n            //             API.post('/popularity/', {\n            //                 variant_type: this.$route.params.exam,\n            //                 ege_variant: this.$route.params.id,\n            //                 user: this.user.id\n            //             }).then(response => {\n            //                 console.log(response)\n            //                 this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n            //             }).catch(err => {\n            //                 console.log(err)\n            //             })\n            //         }\n            //         else if (this.$route.params.exam == 'oge') {\n            //             API.post('/popularity/', {\n            //                 variant_type: this.$route.params.exam,\n            //                 oge_variant: this.$route.params.id,\n            //                 user: this.user.id\n            //             }).then(response => {\n            //                 console.log(response)\n            //                 this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n            //             }).catch(err => {\n            //                 console.log(err)\n            //             })\n            //         }\n            //         else if (this.$route.params.exam == 'vpr') {\n            //             API.post('/popularity/', {\n            //                 variant_type: this.$route.params.exam,\n            //                 vpr_variant: this.$route.params.id,\n            //                 user: this.user.id\n            //             }).then(response => {\n            //                 console.log(response)\n            //                 this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n            //             }).catch(err => {\n            //                 console.log(err)\n            //             })\n            //         }\n            //     }\n            // })\n        },\n        getBar(time) {\n            let bar = document.getElementById('pr_bar')\n            let percent = 0\n            bar.style.width = percent + '%'\n            let timerid = setInterval(function () {\n                percent += 1\n                bar.style.width = percent + '%'\n\n                if (percent >= 100) {\n                    bar.style.width = '100%'\n                    clearInterval(timerid)\n                }\n            }, time)\n        },\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}