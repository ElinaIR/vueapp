{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_Bar = _resolveComponent(\"Bar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$data.loaded ? (_openBlock(), _createBlock(_component_Bar, {\n    key: 0,\n    id: \"ege_bar_chart\",\n    options: $data.BarChartOptions,\n    data: $data.egeBarChartData,\n    class: \"col-3\"\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : _createCommentVNode(\"v-if\", true), $data.loaded ? (_openBlock(), _createBlock(_component_Bar, {\n    key: 1,\n    id: \"oge_bar_chart\",\n    options: $data.BarChartOptions,\n    data: $data.ogeBarChartData,\n    class: \"col-3\"\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : _createCommentVNode(\"v-if\", true), $data.loaded ? (_openBlock(), _createBlock(_component_Bar, {\n    key: 2,\n    id: \"vpr_bar_chart\",\n    options: $data.BarChartOptions,\n    data: $data.vprBarChartData,\n    class: \"col-3\"\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : _createCommentVNode(\"v-if\", true)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createVNode","_component_Navbar","_createElementVNode","_hoisted_1","_hoisted_2","$data","loaded","_createBlock","_component_Bar","id","options","BarChartOptions","data","egeBarChartData","ogeBarChartData","vprBarChartData"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/Stats.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <div class=\"row\">\n            <Bar v-if=\"loaded\" id=\"ege_bar_chart\" :options=\"BarChartOptions\" :data=\"egeBarChartData\" class=\"col-3\" />\n            <Bar v-if=\"loaded\" id=\"oge_bar_chart\" :options=\"BarChartOptions\" :data=\"ogeBarChartData\" class=\"col-3\" />\n            <Bar v-if=\"loaded\" id=\"vpr_bar_chart\" :options=\"BarChartOptions\" :data=\"vprBarChartData\" class=\"col-3\" />\n        </div>\n    </div>\n</template>\n<script>\nimport { API } from '../axios-api'\n// import { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue'\nimport BarChart from '../components/BarChart.vue'\n// import { Bar } from 'vue-chartjs'\n// import { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js'\n\n// ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\nexport default {\n    name: 'Stats',\n    components: {\n        Navbar, BarChart\n    },\n    data() {\n        return {\n            loaded: false,\n            egeBarChartData: {\n                // labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ЕГЭ',\n                        backgroundColor: 'red',\n                        data: null,\n                    }\n                ]\n            },\n            ogeBarChartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ОГЭ',\n                        backgroundColor: 'orange',\n                        data: null,\n                    }\n                ]\n            },\n            vprBarChartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ВПР',\n                        backgroundColor: 'yellow',\n                        data: null,\n                    }\n                ]\n            },\n            BarChartOptions: {\n                responsive: true\n            }\n        }\n    },\n    async mounted() {\n        this.loaded = false\n        await API.get('/ege/popularity').then(response => {\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.egeBarChartData.labels = labels\n            this.egeBarChartData.datasets[0].data = data\n            console.log(labels, data)\n            this.loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n        await API.get('/oge/popularity').then(response => {\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.ogeBarChartData.labels = labels\n            this.ogeBarChartData.datasets[0].data = data\n            console.log(labels, data)\n            this.loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n        \n        await API.get('/vpr/popularity').then(response => {\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.vprBarChartData.labels = labels\n            this.vprBarChartData.datasets[0].data = data\n            console.log(labels, data)\n            this.loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n}\n</script>\n<style scoped>\n    \n</style>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAK;;;;6DAFpBC,YAAA,CAAiBC,iBAAA,GACjBC,mBAAA,CAMM,OANNC,UAMM,GALFD,mBAAA,CAIM,OAJNE,UAIM,GAHSC,KAAA,CAAAC,MAAM,I,cAAjBC,YAAA,CAAyGC,cAAA;;IAAtFC,EAAE,EAAC,eAAe;IAAEC,OAAO,EAAEL,KAAA,CAAAM,eAAe;IAAGC,IAAI,EAAEP,KAAA,CAAAQ,eAAe;IAAEd,KAAK,EAAC;qFACpFM,KAAA,CAAAC,MAAM,I,cAAjBC,YAAA,CAAyGC,cAAA;;IAAtFC,EAAE,EAAC,eAAe;IAAEC,OAAO,EAAEL,KAAA,CAAAM,eAAe;IAAGC,IAAI,EAAEP,KAAA,CAAAS,eAAe;IAAEf,KAAK,EAAC;qFACpFM,KAAA,CAAAC,MAAM,I,cAAjBC,YAAA,CAAyGC,cAAA;;IAAtFC,EAAE,EAAC,eAAe;IAAEC,OAAO,EAAEL,KAAA,CAAAM,eAAe;IAAGC,IAAI,EAAEP,KAAA,CAAAU,eAAe;IAAEhB,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}