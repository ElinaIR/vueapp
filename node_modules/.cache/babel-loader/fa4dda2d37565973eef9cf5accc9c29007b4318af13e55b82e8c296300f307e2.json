{"ast":null,"code":"// import Vue from 'vue'\nimport { createStore } from 'vuex';\nimport { API } from './axios-api';\nexport default createStore({\n  state: {\n    user: null,\n    accessToken: null,\n    refreshToken: null,\n    APIData: ''\n  },\n  mutations: {\n    updateStorage(state, {\n      access,\n      refresh\n    }) {\n      state.accessToken = access;\n      state.refreshToken = refresh;\n      console.log(state.accessToken);\n    },\n    refreshToken(state, {\n      newAccess\n    }) {\n      state.accessToken = newAccess;\n    },\n    destroyToken(state) {\n      state.accessToken = null;\n      state.refreshToken = null;\n      state.user = null;\n    },\n    getUser(state) {\n      state.user = JSON.parse(localStorage.getItem('user'));\n      console.log(state.user);\n    }\n  },\n  getters: {\n    loggedIn(state) {\n      return state.accessToken != null;\n    }\n  },\n  actions: {\n    userLogin(context, usercredentials) {\n      API.post('/token/', {\n        username: usercredentials.username,\n        password: usercredentials.password\n      }).then(response => {\n        localStorage.setItem('token', response.data);\n        context.commit('updateStorage', {\n          access: response.data.access,\n          refresh: response.data.refresh\n        });\n        API.get('/users/', {\n          params: {\n            username: usercredentials.username\n          }\n        }).then(response => {\n          localStorage.setItem('user', response.data);\n          context.commit('getUser');\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    tokenRefresh(context, refreshToken) {\n      API.post('/token/refresh', {\n        refresh: refreshToken\n      }).then(response => {\n        context.commit('refreshToken', {\n          newAccess: response.data.access\n        });\n        // context.commit('getUser')\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    userLogout(context) {\n      console.log(\"is logged in?  \", context.getters.loggedIn);\n      if (context.getters.loggedIn) {\n        context.commit('destroyToken');\n        localStorage.removeItem('user');\n      }\n    }\n  }\n});","map":{"version":3,"names":["createStore","API","state","user","accessToken","refreshToken","APIData","mutations","updateStorage","access","refresh","console","log","newAccess","destroyToken","getUser","JSON","parse","localStorage","getItem","getters","loggedIn","actions","userLogin","context","usercredentials","post","username","password","then","response","setItem","data","commit","get","params","catch","err","tokenRefresh","userLogout","removeItem"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/store.js"],"sourcesContent":["// import Vue from 'vue'\nimport { createStore} from 'vuex'\nimport { API } from './axios-api'\n\nexport default createStore({\n    state: {\n        user: null,\n        accessToken: null,\n        refreshToken: null,\n        APIData: ''\n    },\n    mutations: {\n        updateStorage (state, { access, refresh }) {\n            state.accessToken = access\n            state.refreshToken = refresh\n            console.log(state.accessToken)\n        },\n        refreshToken (state, { newAccess }) {\n            state.accessToken = newAccess\n        },\n        destroyToken (state) {\n            state.accessToken = null\n            state.refreshToken = null\n            state.user = null\n        },\n        getUser (state) {\n            state.user = JSON.parse(localStorage.getItem('user'))\n            console.log(state.user)\n        }\n    },\n    getters: {\n        loggedIn (state) {\n            return state.accessToken != null\n        }\n    },\n    actions: {\n        userLogin (context, usercredentials) {\n            API.post('/token/', {\n                username: usercredentials.username,\n                password: usercredentials.password\n            }).then(response => {\n                localStorage.setItem('token', response.data)\n                context.commit('updateStorage', { \n                    access: response.data.access, \n                    refresh: response.data.refresh \n                })\n                API.get('/users/', { \n                    params: { username: usercredentials.username } \n                }).then(response => {\n                    localStorage.setItem('user', response.data)\n                    context.commit('getUser')\n                })\n            }).catch(err => {\n                console.log(err)\n            })\n        },\n        tokenRefresh (context, refreshToken) {\n            API.post('/token/refresh', {\n                refresh: refreshToken,\n            }).then(response => {\n                context.commit('refreshToken', { newAccess: response.data.access })\n                // context.commit('getUser')\n            }).catch(err => {\n                console.log(err)\n            })\n        },\n        userLogout (context) {\n            console.log(\"is logged in?  \", context.getters.loggedIn)\n            if (context.getters.loggedIn) {\n                context.commit('destroyToken')\n                localStorage.removeItem('user')\n            }\n        }\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}