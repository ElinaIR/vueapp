{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API } from '../axios-api';\nimport Navbar from '../components/Navbar.vue';\nimport BarChart from '../components/BarChart.vue';\nimport LineChart from '../components/LineChart.vue';\nexport default {\n  name: 'Stats',\n  components: {\n    Navbar,\n    BarChart,\n    LineChart\n  },\n  data() {\n    return {\n      users_loaded: false,\n      ege_loaded: false,\n      oge_loaded: false,\n      vpr_loaded: false,\n      users: [],\n      years: [],\n      year: 2023,\n      egeBarChartData: {\n        labels: [],\n        datasets: [{\n          label: 'ЕГЭ',\n          backgroundColor: 'red',\n          data: null\n        }]\n      },\n      ogeBarChartData: {\n        labels: [],\n        datasets: [{\n          label: 'ОГЭ',\n          backgroundColor: 'orange',\n          data: null\n        }]\n      },\n      vprBarChartData: {\n        labels: [],\n        datasets: [{\n          label: 'ВПР',\n          backgroundColor: 'yellow',\n          data: null\n        }]\n      },\n      chartOptions: {\n        responsive: true\n      }\n    };\n  },\n  async mounted() {\n    await API.get('/users').then(response => {\n      console.log(response.data);\n      this.users = response.data;\n      let users = response.data;\n      users.forEach(u => {\n        let reg = new Date(u.date_joined);\n        if (!this.years.includes(reg.getFullYear())) {\n          this.years.push(reg.getFullYear());\n        }\n      });\n      this.users_loaded = true;\n    }).catch(err => {\n      console.log(err);\n    });\n    await API.get('/ege/popularity').then(response => {\n      let popularity = response.data;\n      let variants = [];\n      let data = [];\n      let labels = [];\n      popularity.forEach(p => {\n        if (variants.includes(p.variant.id)) {\n          data[variants.findIndex(elem => elem == p.variant.id)] += 1;\n        } else {\n          variants.push(p.variant.id);\n          data.push(1);\n          labels.push(p.variant.name);\n        }\n      });\n      this.egeBarChartData.labels = labels;\n      this.egeBarChartData.datasets[0].data = data;\n      this.ege_loaded = true;\n      console.log(labels, data);\n    }).catch(err => {\n      console.log(err);\n    });\n    await API.get('/oge/popularity').then(response => {\n      let popularity = response.data;\n      let variants = [];\n      let data = [];\n      let labels = [];\n      popularity.forEach(p => {\n        if (variants.includes(p.variant.id)) {\n          data[variants.findIndex(elem => elem == p.variant.id)] += 1;\n        } else {\n          variants.push(p.variant.id);\n          data.push(1);\n          labels.push(p.variant.name);\n        }\n      });\n      this.ogeBarChartData.labels = labels;\n      this.ogeBarChartData.datasets[0].data = data;\n      this.oge_loaded = true;\n      console.log(labels, data);\n    }).catch(err => {\n      console.log(err);\n    });\n    await API.get('/vpr/popularity').then(response => {\n      let popularity = response.data;\n      let variants = [];\n      let data = [];\n      let labels = [];\n      popularity.forEach(p => {\n        if (variants.includes(p.variant.id)) {\n          data[variants.findIndex(elem => elem == p.variant.id)] += 1;\n        } else {\n          variants.push(p.variant.id);\n          data.push(1);\n          labels.push(p.variant.name);\n        }\n      });\n      this.vprBarChartData.labels = labels;\n      this.vprBarChartData.datasets[0].data = data;\n      console.log(labels, data);\n      this.vpr_loaded = true;\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  computed: {\n    lineChartData() {\n      let chartData = {\n        labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n        datasets: [{\n          label: 'Пользователи',\n          backgroundColor: 'blue',\n          data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        }]\n      };\n      let users = this.users;\n      users.forEach(u => {\n        let reg = new Date(u.date_joined);\n        if (reg.getFullYear() == this.year) {\n          chartData.datasets[0].data[reg.getMonth()] += 1;\n        }\n      });\n      return chartData;\n    }\n  }\n};","map":{"version":3,"names":["API","Navbar","BarChart","LineChart","name","components","data","users_loaded","ege_loaded","oge_loaded","vpr_loaded","users","years","year","egeBarChartData","labels","datasets","label","backgroundColor","ogeBarChartData","vprBarChartData","chartOptions","responsive","mounted","get","then","response","console","log","forEach","u","reg","Date","date_joined","includes","getFullYear","push","catch","err","popularity","variants","p","variant","id","findIndex","elem","computed","lineChartData","chartData","getMonth"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/Stats.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div>\n                <LineChart v-if=\"users_loaded\" :options=\"chartOptions\" :data=\"lineChartData\"/>\n            </div>\n            <div v-if=\"users_loaded\" class=\"col-3\">\n                <select class=\"form-select form-select-sm\" aria-label=\".form-select-sm example\" v-model=\"year\">\n                    <option value=\"y\" v-for=\"y in years\" :key=\"y\">{{ y }}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-4\">\n                <BarChart v-if=\"ege_loaded\" :options=\"chartOptions\" :data=\"egeBarChartData\" class=\"col-3\"/>\n            </div>\n            <div class=\"col-4\">\n                <BarChart v-if=\"oge_loaded\" :options=\"chartOptions\" :data=\"ogeBarChartData\" class=\"col-3\"/>\n            </div>\n            <div class=\"col-4\">\n                <BarChart v-if=\"vpr_loaded\" :options=\"chartOptions\" :data=\"vprBarChartData\" class=\"col-3\"/>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport { API } from '../axios-api'\nimport Navbar from '../components/Navbar.vue'\nimport BarChart from '../components/BarChart.vue'\nimport LineChart from '../components/LineChart.vue'\n\nexport default {\n    name: 'Stats',\n    components: {\n        Navbar, BarChart, LineChart\n    },\n    data() {\n        return {\n            users_loaded: false,\n            ege_loaded: false,\n            oge_loaded: false,\n            vpr_loaded: false,\n            users: [],\n            years: [],\n            year: 2023,\n            egeBarChartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ЕГЭ',\n                        backgroundColor: 'red',\n                        data: null,\n                    }\n                ]\n            },\n            ogeBarChartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ОГЭ',\n                        backgroundColor: 'orange',\n                        data: null,\n                    }\n                ]\n            },\n            vprBarChartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ВПР',\n                        backgroundColor: 'yellow',\n                        data: null,\n                    }\n                ]\n            },\n            chartOptions: {\n                responsive: true\n            }\n        }\n    },\n    async mounted() {\n        await API.get('/users').then(response => {\n            console.log(response.data)\n            this.users = response.data\n            let users = response.data\n            users.forEach(u => {\n                let reg = new Date(u.date_joined)\n                if (!this.years.includes(reg.getFullYear())) {\n                    this.years.push(reg.getFullYear())\n                }\n            })\n            this.users_loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n        await API.get('/ege/popularity').then(response => {\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.egeBarChartData.labels = labels\n            this.egeBarChartData.datasets[0].data = data\n            this.ege_loaded = true\n            console.log(labels, data)\n        }).catch(err => {\n            console.log(err)\n        })\n        await API.get('/oge/popularity').then(response => {\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.ogeBarChartData.labels = labels\n            this.ogeBarChartData.datasets[0].data = data\n            this.oge_loaded = true\n            console.log(labels, data)\n        }).catch(err => {\n            console.log(err)\n        })\n        \n        await API.get('/vpr/popularity').then(response => {\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.vprBarChartData.labels = labels\n            this.vprBarChartData.datasets[0].data = data\n            console.log(labels, data)\n            this.vpr_loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n    },\n    computed: {\n        lineChartData() {\n            let chartData = {\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n                datasets: [\n                    {\n                        label: 'Пользователи',\n                        backgroundColor: 'blue',\n                        data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    }\n                ],\n            }\n\n            let users = this.users\n            users.forEach(u => {\n                let reg = new Date(u.date_joined)\n                if (reg.getFullYear() == this.year) {\n                    chartData.datasets[0].data[reg.getMonth()] += 1\n                }\n            })\n\n            return chartData\n        }\n    }\n}\n</script>\n<style scoped>\n    \n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}