{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API } from '../axios-api';\n// import { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue';\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  name: 'Stats',\n  components: {\n    Navbar,\n    Bar\n  },\n  data() {\n    return {\n      loaded: false,\n      egeBarChartData: {\n        // labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n        labels: [],\n        datasets: [{\n          label: 'ЕГЭ',\n          backgroundColor: 'red',\n          data: null\n        }]\n      },\n      ogeBarChartData: {\n        labels: [],\n        datasets: [{\n          label: 'ОГЭ',\n          backgroundColor: 'orange',\n          data: null\n        }]\n      },\n      vprBarChartData: {\n        labels: [],\n        datasets: [{\n          label: 'ВПР',\n          backgroundColor: 'yellow',\n          data: null\n        }]\n      },\n      BarChartOptions: {\n        responsive: true\n      }\n    };\n  },\n  async mounted() {\n    this.loaded = false;\n    await API.get('/ege/popularity').then(response => {\n      let popularity = response.data;\n      let variants = [];\n      let data = [];\n      let labels = [];\n      popularity.forEach(p => {\n        if (variants.includes(p.variant.id)) {\n          data[variants.findIndex(elem => elem == p.variant.id)] += 1;\n        } else {\n          variants.push(p.variant.id);\n          data.push(1);\n          labels.push(p.variant.name);\n        }\n      });\n      this.egeBarChartData.labels = labels;\n      this.egeBarChartData.datasets[0].data = data;\n      console.log(labels, data);\n      this.loaded = true;\n    }).catch(err => {\n      console.log(err);\n    });\n    await API.get('/oge/popularity').then(response => {\n      let popularity = response.data;\n      let variants = [];\n      let data = [];\n      let labels = [];\n      popularity.forEach(p => {\n        if (variants.includes(p.variant.id)) {\n          data[variants.findIndex(elem => elem == p.variant.id)] += 1;\n        } else {\n          variants.push(p.variant.id);\n          data.push(1);\n          labels.push(p.variant.name);\n        }\n      });\n      this.ogeBarChartData.labels = labels;\n      this.ogeBarChartData.datasets[0].data = data;\n      console.log(labels, data);\n      this.loaded = true;\n    }).catch(err => {\n      console.log(err);\n    });\n    await API.get('/vpr/popularity').then(response => {\n      let popularity = response.data;\n      let variants = [];\n      let data = [];\n      let labels = [];\n      popularity.forEach(p => {\n        if (variants.includes(p.variant.id)) {\n          data[variants.findIndex(elem => elem == p.variant.id)] += 1;\n        } else {\n          variants.push(p.variant.id);\n          data.push(1);\n          labels.push(p.variant.name);\n        }\n      });\n      this.vprBarChartData.labels = labels;\n      this.vprBarChartData.datasets[0].data = data;\n      console.log(labels, data);\n      this.loaded = true;\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n};","map":{"version":3,"names":["API","Navbar","Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","register","name","components","data","loaded","egeBarChartData","labels","datasets","label","backgroundColor","ogeBarChartData","vprBarChartData","BarChartOptions","responsive","mounted","get","then","response","popularity","variants","forEach","p","includes","variant","id","findIndex","elem","push","console","log","catch","err"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/Stats.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <Bar v-if=\"loaded\" id=\"bar_chart\" :options=\"BarChartOptions\" :data=\"egeBarChartData\" />\n    </div>\n</template>\n<script>\nimport { API } from '../axios-api'\n// import { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue'\nimport { Bar } from 'vue-chartjs'\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js'\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\nexport default {\n    name: 'Stats',\n    components: {\n        Navbar, Bar\n    },\n    data() {\n        return {\n            loaded: false,\n            egeBarChartData: {\n                // labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ЕГЭ',\n                        backgroundColor: 'red',\n                        data: null,\n                    }\n                ]\n            },\n            ogeBarChartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ОГЭ',\n                        backgroundColor: 'orange',\n                        data: null,\n                    }\n                ]\n            },\n            vprBarChartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ВПР',\n                        backgroundColor: 'yellow',\n                        data: null,\n                    }\n                ]\n            },\n            BarChartOptions: {\n                responsive: true\n            }\n        }\n    },\n    async mounted() {\n        this.loaded = false\n        await API.get('/ege/popularity').then(response => {\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.egeBarChartData.labels = labels\n            this.egeBarChartData.datasets[0].data = data\n            console.log(labels, data)\n            this.loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n        await API.get('/oge/popularity').then(response => {\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.ogeBarChartData.labels = labels\n            this.ogeBarChartData.datasets[0].data = data\n            console.log(labels, data)\n            this.loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n        \n        await API.get('/vpr/popularity').then(response => {\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.vprBarChartData.labels = labels\n            this.vprBarChartData.datasets[0].data = data\n            console.log(labels, data)\n            this.loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n}\n</script>\n<style scoped>\n    \n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}