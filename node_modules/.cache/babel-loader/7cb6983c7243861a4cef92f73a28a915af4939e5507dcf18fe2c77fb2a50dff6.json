{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"vh-100\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"mt-3\"\n};\nconst _hoisted_4 = {\n  style: {\n    \"white-space\": \"pre-wrap\"\n  }\n};\nconst _hoisted_5 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"d-flex flex-column mt-3\\\"><div class=\\\"d-flex justify-content-around\\\"><span class=\\\"col-5\\\"><strong>Photo 1</strong></span><span class=\\\"col-5\\\"><strong>Photo 2</strong></span></div><div class=\\\"d-flex justify-content-around\\\"><img class=\\\"image-fluid col-5\\\" id=\\\"image1\\\" src=\\\"\\\" alt=\\\"\\\"><img class=\\\"image-fluid col-5\\\" id=\\\"image2\\\" src=\\\"\\\" alt=\\\"\\\"></div></div>\", 1);\nconst _hoisted_6 = {\n  class: \"position-absolute bottom-0 w-100 d-flex justify-content-around align-items-center mb-3\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"w-75\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"progress\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"progress-bar progress-bar-info\",\n  role: \"progressbar\",\n  \"aria-valuenow\": \"0\",\n  \"aria-valuemin\": \"0\",\n  \"aria-valuemax\": \"100\",\n  style: {\n    \"width\": \"0%\"\n  },\n  id: \"pr_bar\"\n})])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    tabindex: \"-1\",\n    onKeypress: _cache[0] || (_cache[0] = (...args) => $options.handleclick && $options.handleclick(...args))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", _hoisted_4, [_createElementVNode(\"strong\", null, _toDisplayString($data.APIData.task), 1 /* TEXT */)])]), _hoisted_5]), _createCommentVNode(\" <button class=\\\"btn btn-outline-secondary position-absolute bottom-0 end-0 m-5\\\" @click=\\\"handleSkip\\\">Пропустить</button> \"), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", null, [_createCommentVNode(\" <button class=\\\"btn btn-outline-secondary \\\" v-if=\\\"start\\\" @click=\\\"handleSkip\\\">Пропустить</button> \"), _createVNode(_component_router_link, {\n    to: {\n      name: 'exam',\n      params: {\n        exam: this.$route.params.exam\n      }\n    },\n    class: \"btn btn-outline-secondary\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Пропустить\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])])])])], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["class","style","_createElementVNode","role","id","_createElementBlock","tabindex","onKeypress","_cache","args","$options","handleclick","_hoisted_1","_createVNode","_component_Navbar","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","APIData","task","_hoisted_5","_createCommentVNode","_hoisted_6","_hoisted_7","_component_router_link","to","name","params","exam","$route"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/EGETask4.vue"],"sourcesContent":["<template>\n    <div tabindex=\"-1\" @keypress=\"handleclick\">\n        <div class=\"vh-100\">\n            <Navbar></Navbar>\n            <div class=\"container\">\n                <div class=\"mt-3\">\n                    <p style=\"white-space: pre-wrap;\"><strong>{{ APIData.task }}</strong></p>\n                </div>\n                <div class=\"d-flex flex-column mt-3\">\n                    <div class=\"d-flex justify-content-around\">\n                        <span class=\"col-5\"><strong>Photo 1</strong></span>\n                        <span class=\"col-5\"><strong>Photo 2</strong></span>\n                    </div>\n                    <div class=\"d-flex justify-content-around\">\n                        <img class=\"image-fluid col-5\" id=\"image1\" src=\"\" alt=\"\">\n                        <img class=\"image-fluid col-5\" id=\"image2\" src=\"\" alt=\"\">\n                    </div>\n                </div>\n            </div>\n\n            <!-- <button class=\"btn btn-outline-secondary position-absolute bottom-0 end-0 m-5\" @click=\"handleSkip\">Пропустить</button> -->\n            <div class=\"position-absolute bottom-0 w-100 d-flex justify-content-around align-items-center mb-3\">\n                <div class=\"w-75\">\n                    <div class=\"progress\">\n                        <div class=\"progress-bar progress-bar-info\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width:0%\" id=\"pr_bar\" ></div>\n                    </div>\n                </div>\n                <div>\n                            <!-- <button class=\"btn btn-outline-secondary \" v-if=\"start\" @click=\"handleSkip\">Пропустить</button> -->\n                    <router-link :to=\"{ name: 'exam', params: { exam: this.$route.params.exam } }\" class=\"btn btn-outline-secondary\">Пропустить</router-link>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'EGETask4',\n    // props: ['id'],\n    data() {\n        return {\n            APIData: '',\n            img1_url: '',\n            img2_url: '',\n            BaseData: '',\n            task_pl: new Audio(),\n            speak_pl: new Audio(),\n            end_pl: new Audio(),\n            prepareTimeout: '',\n            recordTimeout: '',\n            endTimeout: '',\n            timeouts: [],\n        }\n    },\n    components: {\n        Navbar\n    },\n    computed: {\n        ...mapState(['user']),\n        ege: function () {\n            return this.$route.params.exam == 'ege'\n        },\n        oge: function () {\n            return this.$route.params.exam == 'oge'\n        },\n        vpr: function () {\n            return this.$route.params.exam == 'vpr'\n        },\n    },\n    created() {\n        API.get(`/${this.$route.params.exam}/variants/${this.$route.params.id}/tasks`,)\n            .then(response => {\n                console.log(response.data)\n                this.APIData = response.data.tasks[3]\n                this.img1_url = 'http://127.0.0.1:8000' + this.APIData.pic1\n                document.getElementById('image1').src = this.img1_url\n                this.img2_url = 'http://127.0.0.1:8000' + this.APIData.pic2\n                document.getElementById('image2').src = this.img2_url\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        API.get(`/base-audio`,)\n            .then(response => {\n                console.log(response.data)\n                this.BaseData = response.data.at(-1)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    },\n    mounted() {\n        this.end_pl.addEventListener('ended', () => {\n            if (this.user) {\n                if (this.$route.params.exam == 'ege') {\n                    API.post('/popularity/', {\n                        variant_type: this.$route.params.exam,\n                        ege_variant: this.$route.params.id,\n                        user: this.user.id\n                    }).then(response => {\n                        console.log(response)\n                        this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n                    }).catch(err => {\n                        console.log(err)\n                    })\n                }\n                else if (this.$route.params.exam == 'oge') {\n                    API.post('/popularity/', {\n                        variant_type: this.$route.params.exam,\n                        oge_variant: this.$route.params.id,\n                        user: this.user.id\n                    }).then(response => {\n                        console.log(response)\n                        this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n                    }).catch(err => {\n                        console.log(err)\n                    })\n                }\n                else if (this.$route.params.exam == 'vpr') {\n                    API.post('/popularity/', {\n                        variant_type: this.$route.params.exam,\n                        vpr_variant: this.$route.params.id,\n                        user: this.user.id\n                    }).then(response => {\n                        console.log(response)\n                        this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n                    }).catch(err => {\n                        console.log(err)\n                    })\n                }\n            }\n        })\n        this.handleclick()\n    },\n    beforeRouteLeave() {\n        for (let i = 0; i < this.timeouts.length; i++) {\n            clearTimeout(this.timeouts[i])\n        }\n        this.task_pl.pause()\n        this.speak_pl.pause()\n        this.end_pl.pause()\n    },\n    methods: {\n        handleclick() {\n            var task_url = 'http://127.0.0.1:8000' + this.APIData.audio\n            this.task_pl.src = task_url\n            this.task_pl.play()\n\n            this.task_pl.addEventListener('ended', () => {\n                this.getBar(this.APIData.prepare_time * 10)\n\n                this.timeouts.push(setTimeout(() => {\n                    this.speak_pl.src = this.BaseData.start_speaking\n                    this.speak_pl.play()\n                }, this.APIData.prepare_time * 1000))\n            })\n\n            this.speak_pl.addEventListener('ended', () => {\n                this.getBar(this.APIData.prepare_time * 10)\n\n                this.timeouts.push(setTimeout(() => {\n                    this.end_pl.src = this.BaseData.end\n                    this.end_pl.play()\n                }, this.APIData.record_time * 1000))\n            })\n\n            // this.end_pl.addEventListener('ended', () => {\n            //     if (this.user) {\n            //         if (this.$route.params.exam == 'ege') {\n            //             API.post('/popularity/', {\n            //                 variant_type: this.$route.params.exam,\n            //                 ege_variant: this.$route.params.id,\n            //                 user: this.user.id\n            //             }).then(response => {\n            //                 console.log(response)\n            //                 this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n            //             }).catch(err => {\n            //                 console.log(err)\n            //             })\n            //         }\n            //         else if (this.$route.params.exam == 'oge') {\n            //             API.post('/popularity/', {\n            //                 variant_type: this.$route.params.exam,\n            //                 oge_variant: this.$route.params.id,\n            //                 user: this.user.id\n            //             }).then(response => {\n            //                 console.log(response)\n            //                 this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n            //             }).catch(err => {\n            //                 console.log(err)\n            //             })\n            //         }\n            //         else if (this.$route.params.exam == 'vpr') {\n            //             API.post('/popularity/', {\n            //                 variant_type: this.$route.params.exam,\n            //                 vpr_variant: this.$route.params.id,\n            //                 user: this.user.id\n            //             }).then(response => {\n            //                 console.log(response)\n            //                 this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n            //             }).catch(err => {\n            //                 console.log(err)\n            //             })\n            //         }\n            //     }\n            // })\n        },\n        getBar(time) {\n            let bar = document.getElementById('pr_bar')\n            let percent = 0\n            bar.style.width = percent + '%'\n            let timerid = setInterval(function () {\n                percent += 1\n                bar.style.width = percent + '%'\n\n                if (percent >= 100) {\n                    bar.style.width = '100%'\n                    clearInterval(timerid)\n                }\n            }, time)\n        },\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";;EAEaA,KAAK,EAAC;AAAQ;;EAEVA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAM;;EACVC,KAA8B,EAA9B;IAAA;EAAA;AAA8B;;;EAepCD,KAAK,EAAC;AAAwF;gCAC/FE,mBAAA,CAIM;EAJDF,KAAK,EAAC;AAAM,I,aACbE,mBAAA,CAEM;EAFDF,KAAK,EAAC;AAAU,I,aACjBE,mBAAA,CAA2J;EAAtJF,KAAK,EAAC,gCAAgC;EAACG,IAAI,EAAC,aAAa;EAAC,eAAa,EAAC,GAAG;EAAC,eAAa,EAAC,GAAG;EAAC,eAAa,EAAC,KAAK;EAACF,KAAgB,EAAhB;IAAA;EAAA,CAAgB;EAACG,EAAE,EAAC;;;;;;uBAvB/JC,mBAAA,CAgCM;IAhCDC,QAAQ,EAAC,IAAI;IAAEC,UAAQ,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;MACrCP,mBAAA,CA8BM,OA9BNU,UA8BM,GA7BFC,YAAA,CAAiBC,iBAAA,GACjBZ,mBAAA,CAcM,OAdNa,UAcM,GAbFb,mBAAA,CAEM,OAFNc,UAEM,GADFd,mBAAA,CAAyE,KAAzEe,UAAyE,GAAvCf,mBAAA,CAAmC,gBAAAgB,gBAAA,CAAxBC,KAAA,CAAAC,OAAO,CAACC,IAAI,iB,KAE7DC,UASM,C,GAGVC,mBAAA,gIAA+H,EAC/HrB,mBAAA,CAUM,OAVNsB,UAUM,GATFC,UAIM,EACNvB,mBAAA,CAGM,cAFMqB,mBAAA,2GAAwG,EAChHV,YAAA,CAAyIa,sBAAA;IAA3HC,EAAE;MAAAC,IAAA;MAAAC,MAAA;QAAAC,IAAA,OAAuCC,MAAM,CAACF,MAAM,CAACC;MAAI;IAAA;IAAM9B,KAAK,EAAC;;sBAA4B,MAAU,C,iBAAV,YAAU,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}