{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API } from '../axios-api';\nimport Navbar from '../components/Navbar.vue';\nexport default {\n  name: 'EGETask4',\n  // props: ['id'],\n  data() {\n    return {\n      APIData: '',\n      img1_url: '',\n      img2_url: '',\n      BaseData: '',\n      task_pl: new Audio(),\n      speak_pl: new Audio(),\n      end_pl: new Audio(),\n      prepareTimeout: '',\n      recordTimeout: '',\n      endTimeout: ''\n    };\n  },\n  components: {\n    Navbar\n  },\n  created() {\n    API.get(`/${this.$route.params.exam}/variants/${this.$route.params.id}/tasks`).then(response => {\n      console.log(response.data);\n      this.APIData = response.data.tasks[3];\n      this.img1_url = 'http://127.0.0.1:8000' + this.APIData.pic1;\n      document.getElementById('image1').src = this.img1_url;\n      this.img2_url = 'http://127.0.0.1:8000' + this.APIData.pic2;\n      document.getElementById('image2').src = this.img2_url;\n    }).catch(err => {\n      console.log(err);\n    });\n    API.get(`/base-audio`).then(response => {\n      console.log(response.data);\n      this.BaseData = response.data.at(-1);\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  mounted() {\n    this.handleclick();\n  },\n  beforeRouteLeave() {\n    for (let i = 0; i < this.timeouts.length; i++) {\n      clearTimeout(this.timeouts[i]);\n    }\n    this.task_pl.pause();\n    this.speak_pl.pause();\n    this.end_pl.pause();\n  },\n  methods: {\n    handleclick() {\n      var task_url = 'http://127.0.0.1:8000' + this.APIData.audio;\n      this.task_pl.src = task_url;\n      this.task_pl.play();\n      this.task_pl.addEventListener('ended', () => {\n        this.getBar(this.APIData.prepare_time * 10);\n        this.timeouts.push(setTimeout(() => {\n          this.speak_pl.src = this.BaseData.start_speaking;\n          this.speak_pl.play();\n        }, this.APIData.prepare_time * 1000));\n      });\n      this.speak_pl.addEventListener('ended', () => {\n        this.getBar(this.APIData.prepare_time * 10);\n        this.timeouts.push(setTimeout(() => {\n          this.end_pl.src = this.BaseData.end;\n          this.end_pl.play();\n        }, this.APIData.record_time * 1000));\n      });\n      this.end_pl.addEventListener('ended', () => {\n        this.$router.push({\n          name: 'exam',\n          params: {\n            exam: this.$route.params.exam\n          }\n        });\n      });\n    },\n    getBar(time) {\n      let bar = document.getElementById('pr_bar');\n      let percent = 0;\n      bar.style.width = percent + '%';\n      let timerid = setInterval(function () {\n        percent += 1;\n        bar.style.width = percent + '%';\n        if (percent >= 100) {\n          bar.style.width = '100%';\n          clearInterval(timerid);\n        }\n      }, time);\n    }\n  }\n};","map":{"version":3,"names":["API","Navbar","name","data","APIData","img1_url","img2_url","BaseData","task_pl","Audio","speak_pl","end_pl","prepareTimeout","recordTimeout","endTimeout","components","created","get","$route","params","exam","id","then","response","console","log","tasks","pic1","document","getElementById","src","pic2","catch","err","at","mounted","handleclick","beforeRouteLeave","i","timeouts","length","clearTimeout","pause","methods","task_url","audio","play","addEventListener","getBar","prepare_time","push","setTimeout","start_speaking","end","record_time","$router","time","bar","percent","style","width","timerid","setInterval","clearInterval"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/EGETask4.vue"],"sourcesContent":["<template>\n    <div tabindex=\"-1\" @keypress=\"handleclick\">\n        <div class=\"vh-100\">\n            <Navbar></Navbar>\n            <div class=\"container\">\n                <div class=\"mt-3\">\n                    <p style=\"white-space: pre-wrap;\"><strong>{{ APIData.task }}</strong></p>\n                </div>\n                <div class=\"d-flex flex-column mt-3\">\n                    <div class=\"d-flex justify-content-around\">\n                        <span class=\"col-5\"><strong>Photo 1</strong></span>\n                        <span class=\"col-5\"><strong>Photo 2</strong></span>\n                    </div>\n                    <div class=\"d-flex justify-content-around\">\n                        <img class=\"image-fluid col-5\" id=\"image1\" src=\"\" alt=\"\">\n                        <img class=\"image-fluid col-5\" id=\"image2\" src=\"\" alt=\"\">\n                    </div>\n                </div>\n            </div>\n\n            <!-- <button class=\"btn btn-outline-secondary position-absolute bottom-0 end-0 m-5\" @click=\"handleSkip\">Пропустить</button> -->\n            <div class=\"position-absolute bottom-0 w-100 d-flex justify-content-around align-items-center mb-3\">\n                <div class=\"w-75\">\n                    <div class=\"progress\">\n                        <div class=\"progress-bar progress-bar-info\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width:0%\" id=\"pr_bar\" ></div>\n                    </div>\n                </div>\n                <div>\n                            <!-- <button class=\"btn btn-outline-secondary \" v-if=\"start\" @click=\"handleSkip\">Пропустить</button> -->\n                    <router-link :to=\"{ name: 'ege-task4', params: { exam: this.$route.params.exam, id: this.$route.params.id } }\" class=\"btn btn-outline-secondary\">Пропустить</router-link>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'EGETask4',\n    // props: ['id'],\n    data() {\n        return {\n            APIData: '',\n            img1_url: '',\n            img2_url: '',\n            BaseData: '',\n            task_pl: new Audio(),\n            speak_pl: new Audio(),\n            end_pl: new Audio(),\n            prepareTimeout: '',\n            recordTimeout: '',\n            endTimeout: '',\n        }\n    },\n    components: {\n        Navbar\n    },\n    created() {\n        API.get(`/${this.$route.params.exam}/variants/${this.$route.params.id}/tasks`,)\n            .then(response => {\n                console.log(response.data)\n                this.APIData = response.data.tasks[3]\n                this.img1_url = 'http://127.0.0.1:8000' + this.APIData.pic1\n                document.getElementById('image1').src = this.img1_url\n                this.img2_url = 'http://127.0.0.1:8000' + this.APIData.pic2\n                document.getElementById('image2').src = this.img2_url\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        API.get(`/base-audio`,)\n            .then(response => {\n                console.log(response.data)\n                this.BaseData = response.data.at(-1)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    },\n    mounted() {\n        this.handleclick()\n    },\n    beforeRouteLeave() {\n        for (let i = 0; i < this.timeouts.length; i++) {\n            clearTimeout(this.timeouts[i])\n        }\n        this.task_pl.pause()\n        this.speak_pl.pause()\n        this.end_pl.pause()\n    },\n    methods: {\n        handleclick() {\n            var task_url = 'http://127.0.0.1:8000' + this.APIData.audio\n            this.task_pl.src = task_url\n            this.task_pl.play()\n\n            this.task_pl.addEventListener('ended', () => {\n                this.getBar(this.APIData.prepare_time * 10)\n\n                this.timeouts.push(setTimeout(() => {\n                    this.speak_pl.src = this.BaseData.start_speaking\n                    this.speak_pl.play()\n                }, this.APIData.prepare_time * 1000))\n            })\n\n            this.speak_pl.addEventListener('ended', () => {\n                this.getBar(this.APIData.prepare_time * 10)\n\n                this.timeouts.push(setTimeout(() => {\n                    this.end_pl.src = this.BaseData.end\n                    this.end_pl.play()\n                }, this.APIData.record_time * 1000))\n            })\n\n            this.end_pl.addEventListener('ended', () => {\n                this.$router.push({ name: 'exam', params: { exam: this.$route.params.exam } })\n            })\n        },\n        getBar(time) {\n            let bar = document.getElementById('pr_bar')\n            let percent = 0\n            bar.style.width = percent + '%'\n            let timerid = setInterval(function () {\n                percent += 1\n                bar.style.width = percent + '%'\n\n                if (percent >= 100) {\n                    bar.style.width = '100%'\n                    clearInterval(timerid)\n                }\n            }, time)\n        },\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";AAqCA,SAASA,GAAE,QAAS,cAAa;AACjC,OAAOC,MAAK,MAAO,0BAAyB;AAC5C,eAAe;EACXC,IAAI,EAAE,UAAU;EAChB;EACAC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,IAAIC,KAAK,EAAE;MACpBC,QAAQ,EAAE,IAAID,KAAK,EAAE;MACrBE,MAAM,EAAE,IAAIF,KAAK,EAAE;MACnBG,cAAc,EAAE,EAAE;MAClBC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,UAAU,EAAE;IACRd;EACJ,CAAC;EACDe,OAAOA,CAAA,EAAG;IACNhB,GAAG,CAACiB,GAAG,CAAE,IAAG,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,IAAK,aAAY,IAAI,CAACF,MAAM,CAACC,MAAM,CAACE,EAAG,QAAO,CAAC,CACzEC,IAAI,CAACC,QAAO,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACpB,IAAI;MACzB,IAAI,CAACC,OAAM,GAAImB,QAAQ,CAACpB,IAAI,CAACuB,KAAK,CAAC,CAAC;MACpC,IAAI,CAACrB,QAAO,GAAI,uBAAsB,GAAI,IAAI,CAACD,OAAO,CAACuB,IAAG;MAC1DC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACC,GAAE,GAAI,IAAI,CAACzB,QAAO;MACpD,IAAI,CAACC,QAAO,GAAI,uBAAsB,GAAI,IAAI,CAACF,OAAO,CAAC2B,IAAG;MAC1DH,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACC,GAAE,GAAI,IAAI,CAACxB,QAAO;IACxD,CAAC,EACA0B,KAAK,CAACC,GAAE,IAAK;MACVT,OAAO,CAACC,GAAG,CAACQ,GAAG;IACnB,CAAC;IACLjC,GAAG,CAACiB,GAAG,CAAE,aAAY,CAAC,CACjBK,IAAI,CAACC,QAAO,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACpB,IAAI;MACzB,IAAI,CAACI,QAAO,GAAIgB,QAAQ,CAACpB,IAAI,CAAC+B,EAAE,CAAC,CAAC,CAAC;IACvC,CAAC,EACAF,KAAK,CAACC,GAAE,IAAK;MACVT,OAAO,CAACC,GAAG,CAACQ,GAAG;IACnB,CAAC;EACT,CAAC;EACDE,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,WAAW,EAAC;EACrB,CAAC;EACDC,gBAAgBA,CAAA,EAAG;IACf,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACC,QAAQ,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAC3CG,YAAY,CAAC,IAAI,CAACF,QAAQ,CAACD,CAAC,CAAC;IACjC;IACA,IAAI,CAAC9B,OAAO,CAACkC,KAAK,EAAC;IACnB,IAAI,CAAChC,QAAQ,CAACgC,KAAK,EAAC;IACpB,IAAI,CAAC/B,MAAM,CAAC+B,KAAK,EAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACLP,WAAWA,CAAA,EAAG;MACV,IAAIQ,QAAO,GAAI,uBAAsB,GAAI,IAAI,CAACxC,OAAO,CAACyC,KAAI;MAC1D,IAAI,CAACrC,OAAO,CAACsB,GAAE,GAAIc,QAAO;MAC1B,IAAI,CAACpC,OAAO,CAACsC,IAAI,EAAC;MAElB,IAAI,CAACtC,OAAO,CAACuC,gBAAgB,CAAC,OAAO,EAAE,MAAM;QACzC,IAAI,CAACC,MAAM,CAAC,IAAI,CAAC5C,OAAO,CAAC6C,YAAW,GAAI,EAAE;QAE1C,IAAI,CAACV,QAAQ,CAACW,IAAI,CAACC,UAAU,CAAC,MAAM;UAChC,IAAI,CAACzC,QAAQ,CAACoB,GAAE,GAAI,IAAI,CAACvB,QAAQ,CAAC6C,cAAa;UAC/C,IAAI,CAAC1C,QAAQ,CAACoC,IAAI,EAAC;QACvB,CAAC,EAAE,IAAI,CAAC1C,OAAO,CAAC6C,YAAW,GAAI,IAAI,CAAC;MACxC,CAAC;MAED,IAAI,CAACvC,QAAQ,CAACqC,gBAAgB,CAAC,OAAO,EAAE,MAAM;QAC1C,IAAI,CAACC,MAAM,CAAC,IAAI,CAAC5C,OAAO,CAAC6C,YAAW,GAAI,EAAE;QAE1C,IAAI,CAACV,QAAQ,CAACW,IAAI,CAACC,UAAU,CAAC,MAAM;UAChC,IAAI,CAACxC,MAAM,CAACmB,GAAE,GAAI,IAAI,CAACvB,QAAQ,CAAC8C,GAAE;UAClC,IAAI,CAAC1C,MAAM,CAACmC,IAAI,EAAC;QACrB,CAAC,EAAE,IAAI,CAAC1C,OAAO,CAACkD,WAAU,GAAI,IAAI,CAAC;MACvC,CAAC;MAED,IAAI,CAAC3C,MAAM,CAACoC,gBAAgB,CAAC,OAAO,EAAE,MAAM;QACxC,IAAI,CAACQ,OAAO,CAACL,IAAI,CAAC;UAAEhD,IAAI,EAAE,MAAM;UAAEiB,MAAM,EAAE;YAAEC,IAAI,EAAE,IAAI,CAACF,MAAM,CAACC,MAAM,CAACC;UAAK;QAAE,CAAC;MACjF,CAAC;IACL,CAAC;IACD4B,MAAMA,CAACQ,IAAI,EAAE;MACT,IAAIC,GAAE,GAAI7B,QAAQ,CAACC,cAAc,CAAC,QAAQ;MAC1C,IAAI6B,OAAM,GAAI;MACdD,GAAG,CAACE,KAAK,CAACC,KAAI,GAAIF,OAAM,GAAI,GAAE;MAC9B,IAAIG,OAAM,GAAIC,WAAW,CAAC,YAAY;QAClCJ,OAAM,IAAK;QACXD,GAAG,CAACE,KAAK,CAACC,KAAI,GAAIF,OAAM,GAAI,GAAE;QAE9B,IAAIA,OAAM,IAAK,GAAG,EAAE;UAChBD,GAAG,CAACE,KAAK,CAACC,KAAI,GAAI,MAAK;UACvBG,aAAa,CAACF,OAAO;QACzB;MACJ,CAAC,EAAEL,IAAI;IACX;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}