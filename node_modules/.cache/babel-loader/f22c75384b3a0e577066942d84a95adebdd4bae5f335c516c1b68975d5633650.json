{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"table table-light my-4 table-bordered\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Пользователь\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Результат\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Дата\")])], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_1, [$data.loaded ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.attempts, a => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: a.id\n    }, [_createElementVNode(\"td\", null, [a.user.last_name || a.user.first_name ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(a.user.last_name) + \" \" + _toDisplayString(a.user.first_name), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString(a.user.username), 1 /* TEXT */))]), _createElementVNode(\"td\", null, _toDisplayString($options.mark(a.id)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(a.date), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createVNode","_component_Navbar","_hoisted_1","$data","loaded","_createElementBlock","_hoisted_2","_hoisted_3","_Fragment","_renderList","attempts","a","key","id","user","last_name","first_name","_hoisted_4","_toDisplayString","_hoisted_5","username","$options","mark","date"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/card_views/MyTest.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <table class=\"table table-light my-4 table-bordered\" v-if=\"loaded\">\n            <thead>\n                <tr>\n                    <th>Пользователь</th>\n                    <th>Результат</th>\n                    <th>Дата</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"a in attempts\" :key=\"a.id\">\n                    <td>\n                        <span v-if=\"a.user.last_name || a.user.first_name\">\n                            {{ a.user.last_name }} {{ a.user.first_name }}\n                        </span>\n                        <span v-else>\n                            {{ a.user.username }}\n                        </span>\n                    </td>\n                    <td>{{ mark(a.id) }}</td>\n                    <td>{{ a.date }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'Results',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            attempts: [],\n            marks: [],\n            loaded: false,\n        }\n    },\n    created() {\n        API.get(`/cards/decks/${this.$route.params.slug}`).then(response => {\n            console.log(response.data)\n            let deck = response.data\n            API.get(`/cards/attempts`).then(response => {\n                console.log(response.data)\n                let attempts = response.data\n                attempts.forEach(a => {\n                    if (a.deck == deck.id) {\n                        this.attempts.push(a)\n                    }\n                })\n                this.loaded = true\n            }).catch(err => {\n                console.log(err)\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    },\n    methods: {\n        mark(id) {\n            API.get(`/cards/attempts/${id}/marks`).then(response => {\n                console.log(response.data)\n                let marks = response.data\n                let total_mark = 0\n                marks.forEach(m => {\n                    total_mark += m.mark\n                })\n                console.log(total_mark)\n            }).catch(err => {\n                console.log(err)\n            })\n\n            return total_mark\n        }\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;;;EACXA,KAAK,EAAC;;gCACTC,mBAAA,CAMQ,gB,aALJA,mBAAA,CAIK,a,aAHDA,mBAAA,CAAqB,YAAjB,cAAY,G,aAChBA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAa,YAAT,MAAI,E;;;;;;;;;6DAPxBC,YAAA,CAAiBC,iBAAA,GACjBF,mBAAA,CAwBM,OAxBNG,UAwBM,GAvByDC,KAAA,CAAAC,MAAM,I,cAAjEC,mBAAA,CAsBQ,SAtBRC,UAsBQ,GArBJC,UAMQ,EACRR,mBAAA,CAaQ,iB,kBAZJM,mBAAA,CAWKG,SAAA,QAAAC,WAAA,CAXWN,KAAA,CAAAO,QAAQ,EAAbC,CAAC;yBAAZN,mBAAA,CAWK;MAXsBO,GAAG,EAAED,CAAC,CAACE;QAC9Bd,mBAAA,CAOK,aANWY,CAAC,CAACG,IAAI,CAACC,SAAS,IAAIJ,CAAC,CAACG,IAAI,CAACE,UAAU,I,cAAjDX,mBAAA,CAEO,QAAAY,UAAA,EAAAC,gBAAA,CADAP,CAAC,CAACG,IAAI,CAACC,SAAS,IAAG,GAAC,GAAAG,gBAAA,CAAGP,CAAC,CAACG,IAAI,CAACE,UAAU,qB,cAE/CX,mBAAA,CAEO,QAAAc,UAAA,EAAAD,gBAAA,CADAP,CAAC,CAACG,IAAI,CAACM,QAAQ,kB,GAG1BrB,mBAAA,CAAyB,YAAAmB,gBAAA,CAAlBG,QAAA,CAAAC,IAAI,CAACX,CAAC,CAACE,EAAE,mBAChBd,mBAAA,CAAqB,YAAAmB,gBAAA,CAAdP,CAAC,CAACY,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}