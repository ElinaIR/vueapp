{"ast":null,"code":"// import Vue from 'vue'\nimport { createStore } from 'vuex';\nimport { API } from './axios-api';\nexport default createStore({\n  state: {\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    accessToken: JSON.parse(localStorage.getItem('access')) || null,\n    refreshToken: JSON.parse(localStorage.getItem('refresh')) || null\n  },\n  mutations: {\n    updateStorage(state, {\n      access,\n      refresh\n    }) {\n      state.accessToken = access;\n      state.refreshToken = refresh;\n      localStorage.setItem('access', JSON.stringify(access));\n      localStorage.setItem('refresh', JSON.stringify(refresh));\n      console.log(state.accessToken);\n    },\n    refreshToken(state, {\n      newAccess\n    }) {\n      state.accessToken = newAccess;\n      localStorage.setItem('access', JSON.stringify(newAccess));\n    },\n    destroyToken(state) {\n      state.accessToken = null;\n      state.refreshToken = null;\n      state.user = null;\n    },\n    getUser(state) {\n      state.user = JSON.parse(localStorage.getItem('user'));\n      console.log(state.user);\n    }\n  },\n  getters: {\n    loggedIn(state) {\n      return state.accessToken != null;\n    }\n  },\n  actions: {\n    userLogin(context, usercredentials) {\n      API.post('/token/', {\n        username: usercredentials.username,\n        password: usercredentials.password\n      }).then(response => {\n        localStorage.setItem('access', JSON.stringify(response.data.access));\n        localStorage.setItem('refresh', JSON.stringify(response.data.refresh));\n        context.commit('updateStorage', {\n          access: response.data.access,\n          refresh: response.data.refresh\n        });\n        API.get('/users/', {\n          params: {\n            username: usercredentials.username\n          }\n        }).then(response => {\n          localStorage.setItem('user', JSON.stringify(response.data));\n          context.commit('getUser');\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    tokenRefresh(context, refreshToken) {\n      API.post('/token/refresh/', {\n        refresh: refreshToken\n      }).then(response => {\n        localStorage.getItem('access', response.data.access);\n        context.commit('refreshToken', {\n          newAccess: response.data.access\n        });\n        // context.commit('getUser')\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    userLogout(context) {\n      console.log(\"is logged in?  \", context.getters.loggedIn);\n      if (context.getters.loggedIn) {\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n        context.commit('destroyToken');\n      }\n    }\n  }\n});","map":{"version":3,"names":["createStore","API","state","user","JSON","parse","localStorage","getItem","accessToken","refreshToken","mutations","updateStorage","access","refresh","setItem","stringify","console","log","newAccess","destroyToken","getUser","getters","loggedIn","actions","userLogin","context","usercredentials","post","username","password","then","response","data","commit","get","params","catch","err","tokenRefresh","userLogout","removeItem"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/store.js"],"sourcesContent":["// import Vue from 'vue'\nimport { createStore} from 'vuex'\nimport { API } from './axios-api'\n\nexport default createStore({\n    state: {\n        user: JSON.parse(localStorage.getItem('user')) || null,\n        accessToken: JSON.parse(localStorage.getItem('access')) || null,\n        refreshToken: JSON.parse(localStorage.getItem('refresh')) || null,\n    },\n    mutations: {\n        updateStorage (state, { access, refresh }) {\n            state.accessToken = access\n            state.refreshToken = refresh\n            localStorage.setItem('access', JSON.stringify(access))\n            localStorage.setItem('refresh', JSON.stringify(refresh))\n            console.log(state.accessToken)\n        },\n        refreshToken (state, { newAccess }) {\n            state.accessToken = newAccess\n            localStorage.setItem('access', JSON.stringify(newAccess))\n        },\n        destroyToken (state) {\n            state.accessToken = null\n            state.refreshToken = null\n            state.user = null\n        },\n        getUser (state) {\n            state.user = JSON.parse(localStorage.getItem('user'))\n            console.log(state.user)\n        }\n    },\n    getters: {\n        loggedIn (state) {\n            return state.accessToken != null\n        }\n    },\n    actions: {\n        userLogin (context, usercredentials) {\n            API.post('/token/', {\n                username: usercredentials.username,\n                password: usercredentials.password\n            }).then(response => {\n                localStorage.setItem('access', JSON.stringify(response.data.access))\n                localStorage.setItem('refresh', JSON.stringify(response.data.refresh))\n                context.commit('updateStorage', { \n                    access: response.data.access, \n                    refresh: response.data.refresh \n                })\n                API.get('/users/', { \n                    params: { username: usercredentials.username } \n                }).then(response => {\n                    localStorage.setItem('user', JSON.stringify(response.data))\n                    context.commit('getUser')\n                })\n            }).catch(err => {\n                console.log(err)\n            })\n        },\n        tokenRefresh (context, refreshToken) {\n            API.post('/token/refresh/', {\n                refresh: refreshToken,\n            }).then(response => {\n                localStorage.getItem('access', response.data.access)\n                context.commit('refreshToken', { newAccess: response.data.access })\n                // context.commit('getUser')\n            }).catch(err => {\n                console.log(err)\n            })\n        },\n        userLogout (context) {\n            console.log(\"is logged in?  \", context.getters.loggedIn)\n            if (context.getters.loggedIn) {\n                localStorage.removeItem('user')\n                localStorage.removeItem('token')\n                context.commit('destroyToken')\n            }\n        }\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}