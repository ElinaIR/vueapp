{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"my-3\"\n}, \" Мои стопки \", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"d-flex flex-wrap\"\n};\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"d-flex justify-content-between\"\n};\nconst _hoisted_6 = {\n  class: \"card-title\"\n};\nconst _hoisted_7 = {\n  class: \"card-subtitle mb-2 text-muted\"\n};\nconst _hoisted_8 = {\n  class: \"card-text\"\n};\nconst _hoisted_9 = {\n  class: \"col-5 d-flex flex-column justify-content-around\"\n};\nconst _hoisted_10 = {\n  class: \"badge bg-secondary\"\n};\nconst _hoisted_11 = {\n  class: \"card-footer\"\n};\nconst _hoisted_12 = {\n  class: \"text-muted\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-center\"\n}, [/*#__PURE__*/_createCommentVNode(\" {% if page_obj.has_previous %}\\n                <a href=\\\"?page={{ page_obj.previous_page_number }}\\\">пред.</a>\\n            {% endif %}\\n\\n            <p class=\\\"mt-2\\\">\\n                {{ page_obj.number }} из {{ page_obj.paginator.num_pages }}\\n            </p>\\n\\n            {% if page_obj.has_next %}\\n                <a href=\\\"?page={{ page_obj.next_page_number }}\\\">след.</a>\\n            {% endif %} \")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_router_link, {\n    to: {\n      name: 'create-deck'\n    },\n    class: \"btn btn-outline-secondary btn-sm\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Создать стопку\")]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.decks, deck => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"card m-2 col-5\",\n      key: deck.id\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, [_createElementVNode(\"h5\", _hoisted_6, [_createVNode(_component_router_link, {\n      to: {\n        name: 'deck',\n        params: {\n          slug: deck.slug\n        }\n      },\n      class: \"text-reset text-decoration-none\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(deck.title), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]), _createElementVNode(\"h6\", _hoisted_7, _toDisplayString(deck.creator.username) + \", \" + _toDisplayString(deck.creation_date), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_8, _toDisplayString(deck.desc), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_router_link, {\n      to: {\n        name: 'review',\n        params: {\n          slug: deck.slug\n        }\n      },\n      class: \"btn btn-primary\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Учить\"), _createElementVNode(\"span\", _hoisted_10, _toDisplayString($options.cards_to_review(deck.id)), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _ctx.accessToken != null && _ctx.user.id == deck.creator ? (_openBlock(), _createBlock(_component_router_link, {\n      key: 0,\n      to: {\n        name: 'create-card',\n        params: {\n          slug: deck.slug\n        }\n      },\n      class: \"btn btn-outline-secondary btn-sm\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Создать карточку\")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])) : _createCommentVNode(\"v-if\", true)])])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"small\", _hoisted_12, _toDisplayString($options.closest_date(deck.id)), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_13])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","_createVNode","_component_Navbar","_hoisted_1","_hoisted_2","_component_router_link","to","name","_hoisted_3","_createElementBlock","_Fragment","_renderList","$data","decks","deck","key","id","_hoisted_4","_hoisted_5","_hoisted_6","params","slug","title","_hoisted_7","_toDisplayString","creator","username","creation_date","_hoisted_8","desc","_hoisted_9","_hoisted_10","$options","cards_to_review","_ctx","accessToken","user","_createBlock","_hoisted_11","_hoisted_12","closest_date","_hoisted_13"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/card_views/MyDecks.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <h1 class=\"my-3\"> Мои стопки </h1>\n        <router-link :to=\"{ name: 'create-deck' }\" class=\"btn btn-outline-secondary btn-sm\">Создать стопку</router-link>\n        <div class=\"d-flex flex-wrap\">\n            <div class=\"card m-2 col-5\" v-for=\"deck in decks\" :key=\"deck.id\">\n                <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between\">\n                        <div>\n                            <h5 class=\"card-title\"><router-link :to=\"{ name: 'deck', params: { slug: deck.slug } }\"\n                                    class=\"text-reset text-decoration-none\">{{ deck.title }}</router-link></h5>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">{{ deck.creator.username }}, {{ deck.creation_date }}\n                            </h6>\n                            <p class=\"card-text\">{{ deck.desc }}</p>\n                        </div>\n                        <div class=\"col-5 d-flex flex-column justify-content-around\">\n                            <router-link :to=\"{ name: 'review', params: { slug: deck.slug } }\" class=\"btn btn-primary\">Учить<span class=\"badge bg-secondary\">{{ cards_to_review(deck.id) }}</span></router-link>\n                            <router-link :to=\"{ name: 'create-card', params: { slug: deck.slug } }\" v-if=\"accessToken != null && user.id == deck.creator\" class=\"btn btn-outline-secondary btn-sm\">Создать карточку</router-link>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <small class=\"text-muted\">{{ closest_date(deck.id) }}</small>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"text-center\">\n\n            <!-- {% if page_obj.has_previous %}\n                <a href=\"?page={{ page_obj.previous_page_number }}\">пред.</a>\n            {% endif %}\n\n            <p class=\"mt-2\">\n                {{ page_obj.number }} из {{ page_obj.paginator.num_pages }}\n            </p>\n\n            {% if page_obj.has_next %}\n                <a href=\"?page={{ page_obj.next_page_number }}\">след.</a>\n            {% endif %} -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'MyDecks',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            profile: '',\n            decks: [],\n            cards: [],\n        }\n    },\n    computed: {\n        ...mapState(['accessToken', 'user']),\n        // closest_date(id) {\n        //     let closest = new Date('2023-02-31');\n        //     console.log('this cards', id)\n        //     let cards = this.cards\n        //     cards.forEach(card => {\n        //         console.log('card ?', card)\n        //         if (card.original_card.deck == id) {\n        //             if (!isNaN(closest)) {\n        //                 let next = new Date(card.next_review)\n        //                 if (next.getTime() < closest.getTime()) {\n        //                     closest = next\n        //                 }\n        //             }\n        //             else {\n        //                 closest = Date(card.next_review)\n        //             }\n        //         }\n        //     })\n        //     return closest\n        // },\n        // cards_to_review: function(id) {\n        //     let today = new Date()\n        //     let k = 0\n        //     for (let card in this.cards) {\n        //         if (card.original_card.deck == id) {\n        //             let next = new Date(card.next_review)\n        //             if (next.getTime() < today.getTime()) {\n        //                 k++\n        //             }\n        //         }\n        //     }\n        //     return k\n        // }\n    },\n    created() {\n        API.get('/cards/profiles').then(response => {\n            console.log(response.data)\n            let profiles = response.data\n            profiles.forEach(p => {\n                if (p.user.id == this.user.id) {\n                    this.profile = p\n                }\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n        API.get('/cards/decks').then(response => {\n            console.log(response.data)\n            let decks = response.data\n            decks.forEach(d => {\n                if (this.profile.decks.includes(d.id)) {\n                    this.decks.push(d)\n                }\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n        API.get('/cards/cards').then(response => {\n            console.log(response.data)\n            let all_cards = response.data\n            all_cards.forEach(c => {\n                if (this.profile.user.id == c.user) {\n                    this.cards.push(c)\n                }\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    },\n    methods: {\n        closest_date(id) {\n            let closest = new Date('NaN');\n            console.log('this cards', closest)\n            let cards = this.cards\n            cards.forEach(card => {\n                if (card.original_card.deck == id) {\n                    console.log(card)\n                    console.log('is', isNaN(closest))\n                    if (!isNaN(closest)) {\n                        console.log('not nan')\n                        let next = new Date(card.next_review)\n                        if (next.getTime() < closest.getTime()) {\n                            closest = next\n                        }\n                    }\n                    else {\n                        console.log('nan')\n                        closest = Date(card.next_review)\n                        console.log('close', closest)\n                    }\n                }\n            })\n            return closest\n        },\n        cards_to_review(id) {\n            let today = new Date()\n            let k = 0\n            for (let card in this.cards) {\n                if (card.original_card.deck == id) {\n                    let next = new Date(card.next_review)\n                    if (next.getTime() < today.getTime()) {\n                        k++\n                    }\n                }\n            }\n            return k\n        }\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;gCAClBC,mBAAA,CAAkC;EAA9BD,KAAK,EAAC;AAAM,GAAC,cAAY;;EAExBA,KAAK,EAAC;AAAkB;;EAEhBA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAgC;;EAE/BA,KAAK,EAAC;AAAY;;EAElBA,KAAK,EAAC;AAA+B;;EAEtCA,KAAK,EAAC;AAAW;;EAEnBA,KAAK,EAAC;AAAiD;;EAC8CA,KAAK,EAAC;AAAoB;;EAKvIA,KAAK,EAAC;AAAa;;EACbA,KAAK,EAAC;AAAY;iCAKrCC,mBAAA,CAaM;EAbDD,KAAK,EAAC;AAAa,I,aAEpBE,mBAAA,+ZAUe,C;;;;;6DAvCvBC,YAAA,CAAiBC,iBAAA,GACjBH,mBAAA,CAwCM,OAxCNI,UAwCM,GAvCFC,UAAkC,EAClCH,YAAA,CAAgHI,sBAAA;IAAlGC,EAAE,EAAE;MAAAC,IAAA;IAAA,CAAuB;IAAET,KAAK,EAAC;;sBAAmC,MAAc,C,iBAAd,gBAAc,E;;MAClGC,mBAAA,CAqBM,OArBNS,UAqBM,I,kBApBFC,mBAAA,CAmBMC,SAAA,QAAAC,WAAA,CAnBqCC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAvCL,mBAAA,CAmBM;MAnBDX,KAAK,EAAC,gBAAgB;MAAwBiB,GAAG,EAAED,IAAI,CAACE;QACzDjB,mBAAA,CAcM,OAdNkB,UAcM,GAbFlB,mBAAA,CAYM,OAZNmB,UAYM,GAXFnB,mBAAA,CAMM,cALFA,mBAAA,CACmF,MADnFoB,UACmF,GAD5DlB,YAAA,CACuDI,sBAAA;MADzCC,EAAE;QAAAC,IAAA;QAAAa,MAAA;UAAAC,IAAA,EAAkCP,IAAI,CAACO;QAAI;MAAA;MAC1EvB,KAAK,EAAC;;wBAAkC,MAAgB,C,kCAAbgB,IAAI,CAACQ,KAAK,iB;;;mDAC7DvB,mBAAA,CACK,MADLwB,UACK,EAAAC,gBAAA,CADwCV,IAAI,CAACW,OAAO,CAACC,QAAQ,IAAG,IAAE,GAAAF,gBAAA,CAAGV,IAAI,CAACa,aAAa,kBAE5F5B,mBAAA,CAAwC,KAAxC6B,UAAwC,EAAAJ,gBAAA,CAAhBV,IAAI,CAACe,IAAI,iB,GAErC9B,mBAAA,CAGM,OAHN+B,UAGM,GAFF7B,YAAA,CAAoLI,sBAAA;MAAtKC,EAAE;QAAAC,IAAA;QAAAa,MAAA;UAAAC,IAAA,EAAoCP,IAAI,CAACO;QAAI;MAAA;MAAMvB,KAAK,EAAC;;wBAAkB,MAAK,C,iBAAL,OAAK,GAAAC,mBAAA,CAAsE,QAAtEgC,WAAsE,EAAAP,gBAAA,CAAlCQ,QAAA,CAAAC,eAAe,CAACnB,IAAI,CAACE,EAAE,kB;;;iDAC7EkB,IAAA,CAAAC,WAAW,YAAYD,IAAA,CAAAE,IAAI,CAACpB,EAAE,IAAIF,IAAI,CAACW,OAAO,I,cAA5HY,YAAA,CAAqMhC,sBAAA;;MAAvLC,EAAE;QAAAC,IAAA;QAAAa,MAAA;UAAAC,IAAA,EAAyCP,IAAI,CAACO;QAAI;MAAA;MAA4DvB,KAAK,EAAC;;wBAAmC,MAAgB,C,iBAAhB,kBAAgB,E;;4FAInMC,mBAAA,CAEM,OAFNuC,WAEM,GADFvC,mBAAA,CAA6D,SAA7DwC,WAA6D,EAAAf,gBAAA,CAAhCQ,QAAA,CAAAQ,YAAY,CAAC1B,IAAI,CAACE,EAAE,kB;oCAK7DyB,WAaM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}