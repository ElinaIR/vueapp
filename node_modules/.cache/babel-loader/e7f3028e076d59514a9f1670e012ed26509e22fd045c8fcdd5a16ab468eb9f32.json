{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API } from '../axios-api';\nimport { mapState } from 'vuex';\nimport Navbar from '../components/Navbar.vue';\nexport default {\n  name: 'Test',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      loaded: false,\n      base_url: 'http://127.0.0.1:8000',\n      cards: [],\n      attempt: ''\n    };\n  },\n  computed: {\n    ...mapState(['accessToken', 'user'])\n  },\n  created() {\n    API.get(`/cards/attempts/${this.$route.params.id}`).then(response => {\n      console.log(response.data);\n      this.attempt = response.data;\n      API.get('/cards/or_cards').then(response => {\n        console.log(response.data);\n        let all_cards = response.data;\n        all_cards.forEach(c => {\n          if (c.deck.id == this.attempt.deck) {\n            this.cards.push(c);\n          }\n        });\n        this.loaded = true;\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  methods: {\n    check() {\n      let cards = this.cards;\n      cards.forEach(c => {\n        let answer = document.getElementById(c.id).value;\n        let mark = 0;\n        if (answer.toLowerCase() == c.word.toLowerCase()) {\n          mark = 1;\n        }\n        API.post(`/cards/marks/`, {\n          card_id: c.id,\n          mark: mark,\n          attempt: this.$route.params.id\n        }, {\n          headers: {\n            'Authorization': `Bearer ${this.accessToken}`\n          }\n        }).then(response => {\n          console.log(response.data);\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n      this.$router.push({\n        name: 'results',\n        params: {\n          id: this.$route.params.id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["API","mapState","Navbar","name","components","data","loaded","base_url","cards","attempt","computed","created","get","$route","params","id","then","response","console","log","all_cards","forEach","c","deck","push","catch","err","methods","check","answer","document","getElementById","value","mark","toLowerCase","word","post","card_id","headers","accessToken","$router"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/card_views/Test.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <div v-if=\"loaded\">\n            <form class=\"p-2 bg-light border border-3 rounded-3 row w-75 mx-auto mt-2\" @submit=\"check()\">\n                <div v-for=\"c in cards\" :key=\"c.id\" class=\"row my-3 border border-1\">\n                    <div class=\"col-3\">\n                        <div v-if=\"c.front_word\">{{ c.front_word }}</div>\n                        <img :src=\"c.front_pic\" class=\"img-fluid\" alt=\"\" v-if=\"c.front_pic\">\n                    </div>\n                    <div class=\"col-5 my-auto\">\n                        <input type=\"text\" class=\"form-control\" :id=\"c.id\">\n                    </div>\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-outline-success\">Закончить тест</button>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue'\n\nexport default {\n    name: 'Test',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            loaded: false,\n            base_url: 'http://127.0.0.1:8000',\n            cards: [],\n            attempt: '',\n        }\n    },\n    computed: {\n        ...mapState(['accessToken', 'user']),\n    },\n    created() {\n        API.get(`/cards/attempts/${this.$route.params.id}`).then(response => {\n            console.log(response.data)\n            this.attempt = response.data\n            API.get('/cards/or_cards').then(response => {\n                console.log(response.data)\n                let all_cards = response.data\n                all_cards.forEach(c => {\n                    if (c.deck.id == this.attempt.deck) {\n                        this.cards.push(c)\n                    }\n                })\n                this.loaded = true\n            }).catch(err => {\n                console.log(err)\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    },\n    methods: {\n        check() {\n            let cards = this.cards\n            cards.forEach(c => {\n                let answer = document.getElementById(c.id).value\n                let mark = 0\n                if (answer.toLowerCase() == c.word.toLowerCase()) {\n                    mark = 1\n                }\n                API.post(`/cards/marks/`, {\n                    card_id: c.id,\n                    mark: mark,\n                    attempt: this.$route.params.id\n                }, {\n                    headers: {\n                        'Authorization': `Bearer ${this.accessToken}`,\n                    },\n                }).then(response => {\n                    console.log(response.data)\n                }).catch(err => {\n                    console.log(err)\n                })\n            })\n\n            this.$router.push({ name: 'results', params: { id: this.$route.params.id }})\n        }\n    }\n\n}\n</script>\n<style lang=\"\">\n    \n</style>"],"mappings":";AAsBA,SAASA,GAAE,QAAS,cAAa;AACjC,SAASC,QAAO,QAAS,MAAK;AAC9B,OAAOC,MAAK,MAAO,0BAAyB;AAE5C,eAAe;EACXC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE,uBAAuB;MACjCC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,QAAQ,EAAE;IACN,GAAGT,QAAQ,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC;EACvC,CAAC;EACDU,OAAOA,CAAA,EAAG;IACNX,GAAG,CAACY,GAAG,CAAE,mBAAkB,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAG,EAAC,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;MACjEC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACZ,IAAI;MACzB,IAAI,CAACI,OAAM,GAAIQ,QAAQ,CAACZ,IAAG;MAC3BL,GAAG,CAACY,GAAG,CAAC,iBAAiB,CAAC,CAACI,IAAI,CAACC,QAAO,IAAK;QACxCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACZ,IAAI;QACzB,IAAIe,SAAQ,GAAIH,QAAQ,CAACZ,IAAG;QAC5Be,SAAS,CAACC,OAAO,CAACC,CAAA,IAAK;UACnB,IAAIA,CAAC,CAACC,IAAI,CAACR,EAAC,IAAK,IAAI,CAACN,OAAO,CAACc,IAAI,EAAE;YAChC,IAAI,CAACf,KAAK,CAACgB,IAAI,CAACF,CAAC;UACrB;QACJ,CAAC;QACD,IAAI,CAAChB,MAAK,GAAI,IAAG;MACrB,CAAC,CAAC,CAACmB,KAAK,CAACC,GAAE,IAAK;QACZR,OAAO,CAACC,GAAG,CAACO,GAAG;MACnB,CAAC;IACL,CAAC,CAAC,CAACD,KAAK,CAACC,GAAE,IAAK;MACZR,OAAO,CAACC,GAAG,CAACO,GAAG;IACnB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,KAAKA,CAAA,EAAG;MACJ,IAAIpB,KAAI,GAAI,IAAI,CAACA,KAAI;MACrBA,KAAK,CAACa,OAAO,CAACC,CAAA,IAAK;QACf,IAAIO,MAAK,GAAIC,QAAQ,CAACC,cAAc,CAACT,CAAC,CAACP,EAAE,CAAC,CAACiB,KAAI;QAC/C,IAAIC,IAAG,GAAI;QACX,IAAIJ,MAAM,CAACK,WAAW,EAAC,IAAKZ,CAAC,CAACa,IAAI,CAACD,WAAW,EAAE,EAAE;UAC9CD,IAAG,GAAI;QACX;QACAjC,GAAG,CAACoC,IAAI,CAAE,eAAc,EAAE;UACtBC,OAAO,EAAEf,CAAC,CAACP,EAAE;UACbkB,IAAI,EAAEA,IAAI;UACVxB,OAAO,EAAE,IAAI,CAACI,MAAM,CAACC,MAAM,CAACC;QAChC,CAAC,EAAE;UACCuB,OAAO,EAAE;YACL,eAAe,EAAG,UAAS,IAAI,CAACC,WAAY;UAChD;QACJ,CAAC,CAAC,CAACvB,IAAI,CAACC,QAAO,IAAK;UAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACZ,IAAI;QAC7B,CAAC,CAAC,CAACoB,KAAK,CAACC,GAAE,IAAK;UACZR,OAAO,CAACC,GAAG,CAACO,GAAG;QACnB,CAAC;MACL,CAAC;MAED,IAAI,CAACc,OAAO,CAAChB,IAAI,CAAC;QAAErB,IAAI,EAAE,SAAS;QAAEW,MAAM,EAAE;UAAEC,EAAE,EAAE,IAAI,CAACF,MAAM,CAACC,MAAM,CAACC;QAAG;MAAC,CAAC;IAC/E;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}