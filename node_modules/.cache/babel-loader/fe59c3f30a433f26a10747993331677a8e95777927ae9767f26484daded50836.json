{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API } from '../axios-api';\nimport Navbar from '../components/Navbar.vue';\nexport default {\n  name: 'EGETask1',\n  // props: ['id'],\n  data() {\n    return {\n      APIData: '',\n      img_url: '',\n      task: '',\n      points: [],\n      task_end: '',\n      BaseData: ''\n    };\n  },\n  components: {\n    Navbar\n  },\n  created() {\n    API.get(`/ege/variants/${this.$route.params.id}/tasks`).then(response => {\n      console.log(response.data);\n      this.APIData = response.data.tasks[1];\n      this.img_url = 'http://127.0.0.1:8000' + this.APIData.pic;\n      document.getElementById('image').src = this.img_url;\n\n      // let text = this.APIData.task\n      // let first = text.split(': ')\n      // this.task = first[0] + ':'\n      // let second = first[1].split('. ')\n      // this.task_end = second[1]\n      // second[0] = second[0] + '.'\n      // let third = second[0].split('; ')\n      // for (let p in third) {\n      //     p = p + ';'\n      // }\n      // this.points = third\n    }).catch(err => {\n      console.log(err);\n    });\n\n    // await this.startfunc()\n    // this.start_player.src = this.BaseData.start\n    // this.start_player.play()\n    API.get(`/base-audio`).then(response => {\n      console.log(response.data);\n      this.BaseData = response.data.at(-1);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    // let start_timer = 5\n    // setTimeout(() => {\n    //     this.start = true\n    // }, start_timer * 1000)\n  },\n\n  mounted() {\n    // document.getElementsById('keyid').focus()\n    // let start_timer = this.countdown\n    // let start_interval = setInterval(() => {\n    //     this.countdown--\n    // }, 1000)\n    // var pl = new Audio(this.BaseData.start)\n\n    // setTimeout(() => {\n    //     clearInterval(start_interval)\n    //     this.counteddown = true\n    // var pl = new Audio(this.BaseData.start)\n    // pl.play()\n\n    // this.start_player.src = this.APIData.audio\n    // this.start_player.play()\n    // this.start_player.addEventListener('ended', function() {\n    //     this.start = true\n    // })\n    // }, 3000)\n  },\n  methods: {\n    handleclick() {\n      // new Audio(this.BaseData.start).play().catch(err => {\n      //     console.log(err)\n      // })\n      // this.start_player.src = this.BaseData.start\n      // this.start_player.play()\n      // this.start_player.addEventListener('ended', function() {\n      //     this.start = true\n      // })\n      var start_pl = new Audio(this.BaseData.start);\n      start_pl.play();\n      // pl.onended = function() {\n      //     var started = true\n      //     console.log(started)\n      // }\n      setTimeout(() => {\n        this.start = true;\n        var task_url = 'http://127.0.0.1:8000' + this.APIData.audio;\n        var task_pl = new Audio(task_url);\n        console.log(task_pl);\n        task_pl.play();\n        setTimeout(() => {\n          var speak_pl = new Audio(this.BaseData.start_speaking);\n          speak_pl.play();\n          setTimeout(() => {\n            this.$router.push({\n              name: 'ege-task2',\n              params: {\n                id: this.$route.params.id\n              }\n            });\n          }, this.APIData.record_time * 1000);\n        }, this.APIData.prepare_time * 1000);\n      }, 3000);\n    },\n    handleSkip() {\n      this.start_pl.pause();\n      this.task_pl.pause();\n      this.speak_pl.pause();\n      this.$router.push({\n        name: 'ege-task2',\n        params: {\n          id: this.$route.params.id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["API","Navbar","name","data","APIData","img_url","task","points","task_end","BaseData","components","created","get","$route","params","id","then","response","console","log","tasks","pic","document","getElementById","src","catch","err","at","mounted","methods","handleclick","start_pl","Audio","start","play","setTimeout","task_url","audio","task_pl","speak_pl","start_speaking","$router","push","record_time","prepare_time","handleSkip","pause"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/EGETask2.vue"],"sourcesContent":["<template>\n    <!-- <keyboard-events @keyup=\"handleclick\"></keyboard-events> -->\n    <div tabindex=\"-1\" @keypress=\"handleclick\">\n        <!-- <Navbar v-if=\"start\"></Navbar> -->\n        <div class=\"vh-100\">\n            <Navbar></Navbar>\n            <div class=\"container\">\n                <div class=\"d-flex justify-content-around mt-3\">\n                    <div class=\"\">\n                        <p><strong>{{ APIData.pic_caption }}</strong></p>\n                        <img id=\"image\" src=\"\" alt=\"\">\n                    </div>\n                    <div class=\"col-6\">\n                        <pre>{{ APIData.task }}</pre>\n                        <!-- <p><strong>{{ task }}</strong></p>\n                        <ul>\n                            <li v-for=\"p in points\" :key=\"p\">\n                                {{ p }}\n                            </li>\n                        </ul>\n                        <p><strong>{{ task_end }}</strong></p> -->\n                    </div>\n                </div>\n            </div>\n\n            <button class=\"btn btn-outline-secondary position-absolute bottom-0 end-0 m-5\" @click=\"handleSkip\">Пропустить</button>\n        </div>\n        <!-- <div class=\"container\">\n        <div v-if=\"start\" class=\"mt-2\">\n            <p><strong>{{ APIData.task }}</strong></p>\n            <p>{{ APIData.text }}</p>\n        </div>\n    </div> -->\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'EGETask1',\n    // props: ['id'],\n    data() {\n        return {\n            APIData: '',\n            img_url: '',\n            task: '',\n            points: [],\n            task_end: '',\n            BaseData: '',\n        }\n    },\n    components: {\n        Navbar\n    },\n    created() {\n        API.get(`/ege/variants/${this.$route.params.id}/tasks`,)\n            .then(response => {\n                console.log(response.data)\n                this.APIData = response.data.tasks[1]\n                this.img_url = 'http://127.0.0.1:8000' + this.APIData.pic\n                document.getElementById('image').src = this.img_url\n\n                // let text = this.APIData.task\n                // let first = text.split(': ')\n                // this.task = first[0] + ':'\n                // let second = first[1].split('. ')\n                // this.task_end = second[1]\n                // second[0] = second[0] + '.'\n                // let third = second[0].split('; ')\n                // for (let p in third) {\n                //     p = p + ';'\n                // }\n                // this.points = third\n\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        // await this.startfunc()\n        // this.start_player.src = this.BaseData.start\n        // this.start_player.play()\n        API.get(`/base-audio`,)\n            .then(response => {\n                console.log(response.data)\n                this.BaseData = response.data.at(-1)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        // let start_timer = 5\n        // setTimeout(() => {\n        //     this.start = true\n        // }, start_timer * 1000)\n    },\n    mounted() {\n        // document.getElementsById('keyid').focus()\n        // let start_timer = this.countdown\n        // let start_interval = setInterval(() => {\n        //     this.countdown--\n        // }, 1000)\n        // var pl = new Audio(this.BaseData.start)\n\n        // setTimeout(() => {\n        //     clearInterval(start_interval)\n        //     this.counteddown = true\n            // var pl = new Audio(this.BaseData.start)\n            // pl.play()\n\n            // this.start_player.src = this.APIData.audio\n            // this.start_player.play()\n            // this.start_player.addEventListener('ended', function() {\n            //     this.start = true\n            // })\n        // }, 3000)\n\n    },\n    methods: {\n        handleclick() {\n            // new Audio(this.BaseData.start).play().catch(err => {\n            //     console.log(err)\n            // })\n            // this.start_player.src = this.BaseData.start\n            // this.start_player.play()\n            // this.start_player.addEventListener('ended', function() {\n            //     this.start = true\n            // })\n            var start_pl = new Audio(this.BaseData.start)\n            start_pl.play()\n            // pl.onended = function() {\n            //     var started = true\n            //     console.log(started)\n            // }\n            setTimeout(() => {\n                this.start = true\n                var task_url = 'http://127.0.0.1:8000' + this.APIData.audio\n                var task_pl = new Audio(task_url)\n                console.log(task_pl)\n                task_pl.play()\n                setTimeout(() => {\n                    var speak_pl = new Audio(this.BaseData.start_speaking)\n                    speak_pl.play()\n                    setTimeout(() => {\n                        this.$router.push({ name: 'ege-task2', params: { id: this.$route.params.id } })\n                    }, this.APIData.record_time * 1000)\n                }, this.APIData.prepare_time * 1000)\n            }, 3000)\n\n        },\n        handleSkip() {\n            this.start_pl.pause()\n            this.task_pl.pause()\n            this.speak_pl.pause()\n            this.$router.push({ name: 'ege-task2', params: { id: this.$route.params.id } })\n        }\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}