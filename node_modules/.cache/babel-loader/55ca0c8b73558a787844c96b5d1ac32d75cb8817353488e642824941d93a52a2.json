{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"container\"\n}, [/*#__PURE__*/_createCommentVNode(\" <audio controls>\\n                <source src=\\\"http://127.0.0.1:8000/media/audio/default_start.mp3\\\">\\n            </audio> \"), /*#__PURE__*/_createCommentVNode(\" <input @keyup=\\\"handleclick\\\" /> \"), /*#__PURE__*/_createCommentVNode(\" <div @mousemove=\\\"handleclick\\\"></div> \")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <keyboard-events @keyup=\\\"handleclick\\\"></keyboard-events> \"), _createElementVNode(\"div\", {\n    tabindex: \"-1\",\n    onKeypress: _cache[0] || (_cache[0] = (...args) => $options.handleclick && $options.handleclick(...args))\n  }, [_createCommentVNode(\" <Navbar v-if=\\\"start\\\"></Navbar> \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"vh-100\", {\n      'd-flex': !_ctx.start,\n      'flex-column': !_ctx.start,\n      'justify-content-center': !_ctx.start\n    }])\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass({\n      'fixed-top': !_ctx.start\n    })\n  }, [_createVNode(_component_Navbar)], 2 /* CLASS */), _hoisted_1], 2 /* CLASS */), _createCommentVNode(\" <div class=\\\"container\\\">\\n        <div v-if=\\\"start\\\" class=\\\"mt-2\\\">\\n            <p><strong>{{ APIData.task }}</strong></p>\\n            <p>{{ APIData.text }}</p>\\n        </div>\\n    </div> \")], 32 /* HYDRATE_EVENTS */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_createCommentVNode","tabindex","onKeypress","_cache","args","$options","handleclick","_normalizeClass","_ctx","start","_createVNode","_component_Navbar","_hoisted_1"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/EGETask2.vue"],"sourcesContent":["<template>\n    <!-- <keyboard-events @keyup=\"handleclick\"></keyboard-events> -->\n    <div tabindex=\"-1\" @keypress=\"handleclick\">\n        <!-- <Navbar v-if=\"start\"></Navbar> -->\n        <div class=\"vh-100\" :class=\"{ 'd-flex': !start, 'flex-column': !start, 'justify-content-center': !start }\">\n            <div :class=\"{ 'fixed-top': !start }\">\n                <Navbar></Navbar>\n            </div>\n            <div class=\"container\">\n                <!-- <audio controls>\n                <source src=\"http://127.0.0.1:8000/media/audio/default_start.mp3\">\n            </audio> -->\n                <!-- <input @keyup=\"handleclick\" /> -->\n                <!-- <div @mousemove=\"handleclick\"></div> -->\n            </div>\n        </div>\n        <!-- <div class=\"container\">\n        <div v-if=\"start\" class=\"mt-2\">\n            <p><strong>{{ APIData.task }}</strong></p>\n            <p>{{ APIData.text }}</p>\n        </div>\n    </div> -->\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'EGETask1',\n    // props: ['id'],\n    data() {\n        return {\n            APIData: '',\n            BaseData: '',\n        }\n    },\n    components: {\n        Navbar\n    },\n    created() {\n        API.get(`/ege/variants/${this.$route.params.id}/tasks`,)\n            .then(response => {\n                console.log(response.data)\n                this.APIData = response.data.tasks[0]\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        // await this.startfunc()\n        // this.start_player.src = this.BaseData.start\n        // this.start_player.play()\n        API.get(`/base-audio`,)\n            .then(response => {\n                console.log(response.data)\n                this.BaseData = response.data.at(-1)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        // let start_timer = 5\n        // setTimeout(() => {\n        //     this.start = true\n        // }, start_timer * 1000)\n    },\n    mounted() {\n        // document.getElementsById('keyid').focus()\n        // let start_timer = this.countdown\n        // let start_interval = setInterval(() => {\n        //     this.countdown--\n        // }, 1000)\n        // var pl = new Audio(this.BaseData.start)\n\n        // setTimeout(() => {\n        //     clearInterval(start_interval)\n        //     this.counteddown = true\n            // var pl = new Audio(this.BaseData.start)\n            // pl.play()\n\n            // this.start_player.src = this.APIData.audio\n            // this.start_player.play()\n            // this.start_player.addEventListener('ended', function() {\n            //     this.start = true\n            // })\n        // }, 3000)\n\n    },\n    methods: {\n        handleclick() {\n            // new Audio(this.BaseData.start).play().catch(err => {\n            //     console.log(err)\n            // })\n            // this.start_player.src = this.BaseData.start\n            // this.start_player.play()\n            // this.start_player.addEventListener('ended', function() {\n            //     this.start = true\n            // })\n            var start_pl = new Audio(this.BaseData.start)\n            start_pl.play()\n            // pl.onended = function() {\n            //     var started = true\n            //     console.log(started)\n            // }\n            setTimeout(() => {\n                this.start = true\n                var task_url = 'http://127.0.0.1:8000' + this.APIData.audio\n                var task_pl = new Audio(task_url)\n                console.log(task_pl)\n                task_pl.play()\n                setTimeout(() => {\n                    var speak_pl = new Audio(this.BaseData.start_speaking)\n                    speak_pl.play()\n                    setTimeout(() => {\n                        this.$router.push({ name: 'ege-task2', params: { id: this.$route.params.id } })\n                    }, this.APIData.record_time * 1000)\n                }, this.APIData.prepare_time * 1000)\n            }, 3000)\n\n        }\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";gCAQYA,mBAAA,CAMM;EANDC,KAAK,EAAC;AAAW,I,aAClBC,mBAAA,kIAEQ,E,aACRA,mBAAA,sCAAuC,E,aACvCA,mBAAA,4CAA6C,C;;;;6DAZzDA,mBAAA,gEAAiE,EACjEF,mBAAA,CAoBM;IApBDG,QAAQ,EAAC,IAAI;IAAEC,UAAQ,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;MACrCJ,mBAAA,sCAAuC,EACvCF,mBAAA,CAWM;IAXDC,KAAK,EAAAQ,eAAA,EAAC,QAAQ;MAAA,WAAsBC,IAAA,CAAAC,KAAK;MAAA,gBAAkBD,IAAA,CAAAC,KAAK;MAAA,2BAA6BD,IAAA,CAAAC;IAAK;MACnGX,mBAAA,CAEM;IAFAC,KAAK,EAAAQ,eAAA;MAAA,cAAkBC,IAAA,CAAAC;IAAK;MAC9BC,YAAA,CAAiBC,iBAAA,E,kBAErBC,UAMM,C,kBAEVZ,mBAAA,uMAKM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}