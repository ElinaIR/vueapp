{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API } from '../axios-api';\nimport Navbar from '../components/Navbar.vue';\nexport default {\n  name: 'EGETask2',\n  // props: ['id'],\n  data() {\n    return {\n      APIData: '',\n      img_url: '',\n      BaseData: '',\n      task_pl: new Audio(),\n      speak_pl: new Audio(),\n      q_pl: new Audio(),\n      q: 1,\n      q1_pl: new Audio(),\n      q2_pl: new Audio(),\n      q3_pl: new Audio(),\n      q4_pl: new Audio(),\n      prepareTimeout: '',\n      speakTimeout: '',\n      recordTimeout1: '',\n      recordTimeout2: '',\n      recordTimeout3: '',\n      recordTimeout4: '',\n      timeouts: []\n    };\n  },\n  components: {\n    Navbar\n  },\n  created() {\n    API.get(`/${this.$route.params.exam}/variants/${this.$route.params.id}/tasks`).then(response => {\n      console.log(response.data);\n      this.APIData = response.data.tasks[1];\n      this.img_url = 'http://127.0.0.1:8000' + this.APIData.pic;\n      document.getElementById('image').src = this.img_url;\n    }).catch(err => {\n      console.log(err);\n    });\n    API.get(`/base-audio`).then(response => {\n      console.log(response.data);\n      this.BaseData = response.data.at(-1);\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  mounted() {\n    this.handleclick();\n  },\n  beforeRouteLeave() {\n    console.log(this.timeouts);\n    for (let i = 0; i < this.timeouts.length; i++) {\n      console.log(this.timeouts, i, this.timeouts[i]);\n      clearTimeout(this.timeouts[i]);\n    }\n    this.task_pl.pause();\n    this.speak_pl.pause();\n    this.q_pl.pause();\n  },\n  methods: {\n    handleclick() {\n      console.log('handle');\n      var task_url = 'http://127.0.0.1:8000' + this.APIData.audio;\n      console.log(task_url);\n      this.task_pl.src = task_url;\n      this.task_pl.play();\n      this.task_pl.addEventListener('ended', () => {\n        this.timeouts.push(setTimeout(() => {\n          this.speak_pl.src = this.BaseData.start_speaking;\n          this.speak_pl.play();\n\n          // this.speakTimeout = setTimeout(() => {\n          //     var q_url = 'http://127.0.0.1:8000' + this.APIData.question1\n          //     this.q1_pl.src = q_url\n          //     this.q1_pl.play()\n\n          //     this.recordTimeout1 = setTimeout(() => {\n          //         var q_url = 'http://127.0.0.1:8000' + this.APIData.question2\n          //         this.q2_pl.src = q_url\n          //         this.q2_pl.play()\n\n          // this.recordTimeout2 = setTimeout(() => {\n          //     var q_url = 'http://127.0.0.1:8000' + this.APIData.question3\n          //     this.q3_pl.src = q_url\n          //     this.q3_pl.play()\n\n          //     this.recordTimeout3 = setTimeout(() => {\n          //         var q_url = 'http://127.0.0.1:8000' + this.APIData.question4\n          //         this.q4_pl.src = q_url\n          //         this.q4_pl.play()\n          // \n          //                 this.recordTimeout4 = setTimeout(() => {\n          //                     this.$router.push({ name: 'ege-task3', params: { id: this.$route.params.id } })\n          //                 }, this.APIData.record_time * 1000)\n          //             }, this.APIData.record_time * 1000)\n          //         }, this.APIData.record_time * 1000)\n          //     }, this.APIData.record_time * 1000)\n          // }, 3000)\n        }, this.APIData.prepare_time * 1000));\n      });\n      this.speak_pl.addEventListener('ended', () => {\n        var q_url = 'http://127.0.0.1:8000' + this.APIData.question1;\n        this.q_pl.src = q_url;\n        this.q_pl.play();\n      });\n      this.q_pl.addEventListener('ended', () => {\n        if (this.q == 4) {\n          this.timeouts.push(setTimeout(() => {\n            this.$router.push({\n              name: 'ege-task3',\n              params: {\n                exam: this.$route.params.exam,\n                id: this.$route.params.id\n              }\n            });\n          }, this.APIData.record_time * 1000));\n        } else {\n          this.q++;\n          this.timeouts.push(setTimeout(() => {\n            var q_url = 'http://127.0.0.1:8000' + eval(`this.APIData.question${this.q}`);\n            this.q_pl.src = q_url;\n            this.q_pl.play();\n          }, this.APIData.record_time * 1000));\n        }\n      });\n    }\n    // handleSkip() {\n    //     clearTimeout(this.prepareTimeout)\n    //     clearTimeout(this.recordTimeout1)\n    //     clearTimeout(this.recordTimeout2)\n    //     clearTimeout(this.recordTimeout3)\n    //     clearTimeout(this.recordTimeout4)\n    //     this.task_pl.pause()\n    //     this.speak_pl.pause()\n    //     this.q1_pl.pause()\n    //     this.q2_pl.pause()\n    //     this.q3_pl.pause()\n    //     this.q4_pl.pause()\n    //     this.$router.push({ name: 'ege-task3', params: { id: this.$route.params.id } })\n    // }\n  }\n};","map":{"version":3,"names":["API","Navbar","name","data","APIData","img_url","BaseData","task_pl","Audio","speak_pl","q_pl","q","q1_pl","q2_pl","q3_pl","q4_pl","prepareTimeout","speakTimeout","recordTimeout1","recordTimeout2","recordTimeout3","recordTimeout4","timeouts","components","created","get","$route","params","exam","id","then","response","console","log","tasks","pic","document","getElementById","src","catch","err","at","mounted","handleclick","beforeRouteLeave","i","length","clearTimeout","pause","methods","task_url","audio","play","addEventListener","push","setTimeout","start_speaking","prepare_time","q_url","question1","$router","record_time","eval"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/EGETask2.vue"],"sourcesContent":["<template>\n    <div tabindex=\"-1\" @keypress=\"handleclick\">\n        <div class=\"vh-100\">\n            <Navbar></Navbar>\n            <div class=\"container\">\n                <div class=\"d-flex justify-content-around mt-3\">\n                    <div class=\"\">\n                        <p><strong>{{ APIData.pic_caption }}</strong></p>\n                        <img id=\"image\" src=\"\" alt=\"\">\n                    </div>\n                    <div class=\"col-6\">\n                        <p style=\"white-space: pre-wrap;\"><strong>{{ APIData.task }}</strong></p>\n                    </div>\n                </div>\n            </div>\n\n            <!-- <button class=\"btn btn-outline-secondary position-absolute bottom-0 end-0 m-5\" @click=\"handleSkip\">Пропустить</button> -->\n            <router-link :to=\"{ name: 'ege-task3', params: { exam: this.$route.params.exam, id: this.$route.params.id } }\" class=\"btn btn-outline-secondary btn btn-outline-secondary position-absolute bottom-0 end-0 m-5\">Пропустить</router-link>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'EGETask2',\n    // props: ['id'],\n    data() {\n        return {\n            APIData: '',\n            img_url: '',\n            BaseData: '',\n            task_pl: new Audio(),\n            speak_pl: new Audio(),\n            q_pl: new Audio(),\n            q: 1,\n            q1_pl: new Audio(),\n            q2_pl: new Audio(),\n            q3_pl: new Audio(),\n            q4_pl: new Audio(),\n            prepareTimeout: '',\n            speakTimeout: '',\n            recordTimeout1: '',\n            recordTimeout2: '',\n            recordTimeout3: '',\n            recordTimeout4: '',\n            timeouts: [],\n        }\n    },\n    components: {\n        Navbar\n    },\n    created() {\n        API.get(`/${this.$route.params.exam}/variants/${this.$route.params.id}/tasks`,)\n            .then(response => {\n                console.log(response.data)\n                this.APIData = response.data.tasks[1]\n                this.img_url = 'http://127.0.0.1:8000' + this.APIData.pic\n                document.getElementById('image').src = this.img_url\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        API.get(`/base-audio`,)\n            .then(response => {\n                console.log(response.data)\n                this.BaseData = response.data.at(-1)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    },\n    mounted() {\n        this.handleclick()\n    },\n    beforeRouteLeave() {\n        console.log(this.timeouts)\n        for (let i = 0; i < this.timeouts.length; i++) {\n            console.log(this.timeouts, i, this.timeouts[i])\n            clearTimeout(this.timeouts[i])\n        }\n        this.task_pl.pause()\n        this.speak_pl.pause()\n        this.q_pl.pause()\n    },\n    methods: {\n        handleclick() {\n            console.log('handle')\n            var task_url = 'http://127.0.0.1:8000' + this.APIData.audio\n            console.log(task_url)\n            this.task_pl.src = task_url\n            this.task_pl.play()\n\n            this.task_pl.addEventListener('ended', () => {\n                this.timeouts.push(setTimeout(() => {\n                    this.speak_pl.src = this.BaseData.start_speaking\n                    this.speak_pl.play()\n\n                    // this.speakTimeout = setTimeout(() => {\n                    //     var q_url = 'http://127.0.0.1:8000' + this.APIData.question1\n                    //     this.q1_pl.src = q_url\n                    //     this.q1_pl.play()\n\n                    //     this.recordTimeout1 = setTimeout(() => {\n                    //         var q_url = 'http://127.0.0.1:8000' + this.APIData.question2\n                    //         this.q2_pl.src = q_url\n                    //         this.q2_pl.play()\n\n                            // this.recordTimeout2 = setTimeout(() => {\n                            //     var q_url = 'http://127.0.0.1:8000' + this.APIData.question3\n                            //     this.q3_pl.src = q_url\n                            //     this.q3_pl.play()\n\n                            //     this.recordTimeout3 = setTimeout(() => {\n                            //         var q_url = 'http://127.0.0.1:8000' + this.APIData.question4\n                            //         this.q4_pl.src = q_url\n                            //         this.q4_pl.play()\n// \n                    //                 this.recordTimeout4 = setTimeout(() => {\n                    //                     this.$router.push({ name: 'ege-task3', params: { id: this.$route.params.id } })\n                    //                 }, this.APIData.record_time * 1000)\n                    //             }, this.APIData.record_time * 1000)\n                    //         }, this.APIData.record_time * 1000)\n                    //     }, this.APIData.record_time * 1000)\n                    // }, 3000)\n                }, this.APIData.prepare_time * 1000))\n            })\n\n            this.speak_pl.addEventListener('ended', () => {\n                var q_url = 'http://127.0.0.1:8000' + this.APIData.question1\n                this.q_pl.src = q_url\n                this.q_pl.play()\n            })\n\n            this.q_pl.addEventListener('ended', () => {\n                if (this.q == 4) {\n                    this.timeouts.push(setTimeout(() => {\n                        this.$router.push({ name: 'ege-task3', params: { exam: this.$route.params.exam, id: this.$route.params.id } })\n                    }, this.APIData.record_time * 1000))\n                }\n                else {\n                    this.q++\n                    this.timeouts.push(setTimeout(() => {\n                        var q_url = 'http://127.0.0.1:8000' + eval(`this.APIData.question${this.q}`)\n                        this.q_pl.src = q_url\n                        this.q_pl.play()\n                    }, this.APIData.record_time * 1000))\n                }\n            })\n\n\n        },\n        // handleSkip() {\n        //     clearTimeout(this.prepareTimeout)\n        //     clearTimeout(this.recordTimeout1)\n        //     clearTimeout(this.recordTimeout2)\n        //     clearTimeout(this.recordTimeout3)\n        //     clearTimeout(this.recordTimeout4)\n        //     this.task_pl.pause()\n        //     this.speak_pl.pause()\n        //     this.q1_pl.pause()\n        //     this.q2_pl.pause()\n        //     this.q3_pl.pause()\n        //     this.q4_pl.pause()\n        //     this.$router.push({ name: 'ege-task3', params: { id: this.$route.params.id } })\n        // }\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}