{"ast":null,"code":"import { API } from '../axios-api';\nimport { mapState } from 'vuex';\nimport Navbar from '../components/Navbar.vue';\nexport default {\n  name: 'Deck',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      base_url: 'http://127.0.0.1:8000',\n      deck: '',\n      cards: [],\n      profile: ''\n    };\n  },\n  computed: {\n    ...mapState(['accessToken', 'user']),\n    has_deck: function () {\n      return id => this.profile.decks.includes(id);\n    }\n  },\n  created() {\n    API.get(`/cards/decks/${this.$route.params.slug}`).then(response => {\n      console.log(response.data);\n      this.deck = response.data;\n    }).catch(err => {\n      console.log(err);\n    });\n    API.get(`/cards/decks/${this.$route.params.slug}/cards`).then(response => {\n      console.log(response.data);\n      this.cards = response.data.cards;\n    }).catch(err => {\n      console.log(err);\n    });\n    API.get('/cards/profiles').then(response => {\n      console.log(response.data);\n      let profiles = response.data;\n      profiles.forEach(p => {\n        if (p.user.id == this.user.id) {\n          this.profile = p;\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  methods: {\n    add(id) {\n      API.patch(`/cards/profiles/${this.profile.id}/`, {\n        decks: [id]\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.accessToken}`\n        }\n      }).then(response => {\n        console.log(response.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    update() {\n      API.get(`/cards/profiles/${this.profile.id}/cards`).then(response => {\n        let has_cards = response.data;\n        console.log(has_cards);\n        for (card in this.cards) {\n          let has = false;\n          has_cards.forEach(c => {\n            if (c.original_card == card) {\n              has = true;\n            }\n          });\n          if (!has) {\n            API.post('/cards/cards/', {\n              user: this.user,\n              original_card: card\n            }, {\n              headers: {\n                'Authorization': `Bearer ${this.accessToken}`\n              }\n            }).then(response => {\n              console.log(response);\n            }).catch(err => {\n              console.log(err);\n            });\n          }\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["API","mapState","Navbar","name","components","data","base_url","deck","cards","profile","computed","has_deck","id","decks","includes","created","get","$route","params","slug","then","response","console","log","catch","err","profiles","forEach","p","user","methods","add","patch","headers","accessToken","update","has_cards","card","has","c","original_card","post"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/card_views/Deck.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <div class=\"card mt-3\">\n            <div class=\"card-body\">\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"ms-2\">\n                        <h5 class=\"card-title\">{{ deck.title }}</h5>\n                        <h6 class=\"card-subtitle mb-2 text-muted\">{{ deck.creator.username }}, {{ deck.creation_date }}</h6>\n                        <p class=\"card-text\">{{ deck.desc }}</p>\n                    </div>\n                    <div class=\"col-5 d-flex flex-column justify-content-around\" v-if=\"accessToken != null\">\n                        <button v-if=\"!has_deck(deck.id)\" class=\"btn btn-primary align-self-end\" @click=\"add(deck.id)\">Добавить</button>\n                        <button v-if=\"has_deck(deck.id)\" class=\"btn btn-primary align-self-end\" @click=\"update\">Обновить</button>\n                        <router-link :to=\"{ name: 'create-card', params: { slug: deck.slug }}\" v-if=\"user.id == deck.creator.id\" class=\"btn btn-outline-secondary btn-sm align-self-end\">Создать карточку</router-link>\n                    </div>\n                </div>\n                <div class=\"my-3 list-group list-group-flush\">\n                    <div class=\"card list-group-item\" v-for=\"card in cards\" :key=\"card.id\">\n                        <div class=\"row\">\n                        <div class=\"col-2\">\n                            <img :src=\"base_url + card.front_pic\" class=\"img-fluid\" alt=\"\" v-if=\"card.front_pic\">\n                        </div>\n                        <div class=\"col\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\" v-if=\"card.front_word\">{{ card.front_word }}</h5>\n                            <p class=\"card-text\" style=\"white-space: pre-wrap;\">{{ card.back }}</p>\n                        </div>\n                        </div>\n                        </div>\n                    </div>\n                    <!-- </div> -->\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'Deck',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            base_url: 'http://127.0.0.1:8000',\n            deck: '',\n            cards: [],\n            profile: '',\n        }\n    },\n    computed: {\n        ...mapState(['accessToken', 'user']),\n        has_deck: function () {\n            return (id) => this.profile.decks.includes(id)\n        },\n    },\n    created() {\n        API.get(`/cards/decks/${this.$route.params.slug}`).then(response => {\n            console.log(response.data)\n            this.deck = response.data\n        }).catch(err => {\n            console.log(err)\n        })\n        API.get(`/cards/decks/${this.$route.params.slug}/cards`).then(response => {\n            console.log(response.data)\n            this.cards = response.data.cards\n        }).catch(err => {\n            console.log(err)\n        })\n        API.get('/cards/profiles').then(response => {\n            console.log(response.data)\n            let profiles = response.data\n            profiles.forEach(p => {\n                if (p.user.id == this.user.id) {\n                    this.profile = p\n                }\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    },\n    methods: {\n        add(id) {\n            API.patch(`/cards/profiles/${this.profile.id}/`, {\n                decks: [id]\n            }, {\n                headers: {\n                    'Authorization': `Bearer ${this.accessToken}`,\n                },\n            }).then(response => {\n                console.log(response.data)\n            }).catch(err => {\n                console.log(err)\n            })\n        },\n        update() {\n            API.get(`/cards/profiles/${this.profile.id}/cards`).then(response => {\n                let has_cards = response.data\n                console.log(has_cards)\n                for (card in this.cards) {\n                    let has = false\n                    has_cards.forEach(c => {\n                        if (c.original_card == card) {\n                            has = true\n                        }\n                    })\n\n                    if (!has) {\n                        API.post('/cards/cards/', {\n                            user: this.user,\n                            original_card: card\n                        }, {\n                            headers: {\n                                'Authorization': `Bearer ${this.accessToken}`,\n                            },\n                        }).then(response => {\n                            console.log(response)\n                        }).catch(err => {\n                            console.log(err)\n                        })\n                    }\n                }\n            }).catch(err => {\n                console.log(err)\n            })\n        }\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}