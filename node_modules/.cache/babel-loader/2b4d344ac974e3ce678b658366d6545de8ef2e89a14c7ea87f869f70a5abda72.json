{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-4\"\n};\nconst _hoisted_4 = {\n  class: \"col-4\"\n};\nconst _hoisted_5 = {\n  class: \"col-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_LineChart = _resolveComponent(\"LineChart\");\n  const _component_BarChart = _resolveComponent(\"BarChart\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [$data.users_loaded ? (_openBlock(), _createBlock(_component_LineChart, {\n    key: 0,\n    options: _ctx.ChartOptions\n  }, null, 8 /* PROPS */, [\"options\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$data.ege_loaded ? (_openBlock(), _createBlock(_component_BarChart, {\n    key: 0,\n    options: $data.chartOptions,\n    data: $data.egeBarChartData,\n    class: \"col-3\"\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [$data.oge_loaded ? (_openBlock(), _createBlock(_component_BarChart, {\n    key: 0,\n    options: $data.chartOptions,\n    data: $data.ogeBarChartData,\n    class: \"col-3\"\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_5, [$data.vpr_loaded ? (_openBlock(), _createBlock(_component_BarChart, {\n    key: 0,\n    options: $data.chartOptions,\n    data: $data.vprBarChartData,\n    class: \"col-3\"\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])) : _createCommentVNode(\"v-if\", true)])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createVNode","_component_Navbar","_createElementVNode","_hoisted_1","$data","users_loaded","_createBlock","_component_LineChart","options","_ctx","ChartOptions","_hoisted_2","_hoisted_3","ege_loaded","_component_BarChart","chartOptions","data","egeBarChartData","_hoisted_4","oge_loaded","ogeBarChartData","_hoisted_5","vpr_loaded","vprBarChartData"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/views/Stats.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <div>\n            <LineChart v-if=\"users_loaded\" :options=\"ChartOptions\"/>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-4\">\n                <BarChart v-if=\"ege_loaded\" :options=\"chartOptions\" :data=\"egeBarChartData\" class=\"col-3\"/>\n            </div>\n            <div class=\"col-4\">\n                <BarChart v-if=\"oge_loaded\" :options=\"chartOptions\" :data=\"ogeBarChartData\" class=\"col-3\"/>\n            </div>\n            <div class=\"col-4\">\n                <BarChart v-if=\"vpr_loaded\" :options=\"chartOptions\" :data=\"vprBarChartData\" class=\"col-3\"/>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport { API } from '../axios-api'\n// import { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue'\nimport BarChart from '../components/BarChart.vue'\n// import { Bar } from 'vue-chartjs'\n// import { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js'\n\n// ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\nexport default {\n    name: 'Stats',\n    components: {\n        Navbar, BarChart\n    },\n    data() {\n        return {\n            users_loaded: false,\n            ege_loaded: false,\n            oge_loaded: false,\n            vpr_loaded: false,\n            egeBarChartData: {\n                // labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ЕГЭ',\n                        backgroundColor: 'red',\n                        data: null,\n                    }\n                ]\n            },\n            ogeBarChartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ОГЭ',\n                        backgroundColor: 'orange',\n                        data: null,\n                    }\n                ]\n            },\n            vprBarChartData: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'ВПР',\n                        backgroundColor: 'yellow',\n                        data: null,\n                    }\n                ]\n            },\n            chartOptions: {\n                responsive: true\n            }\n        }\n    },\n    async mounted() {\n        await API.get('/users').then(response => {\n            console.log(response.data)\n\n            this.users_loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n        await API.get('/ege/popularity').then(response => {\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.egeBarChartData.labels = labels\n            this.egeBarChartData.datasets[0].data = data\n            this.ege_loaded = true\n            console.log(labels, data)\n        }).catch(err => {\n            console.log(err)\n        })\n        await API.get('/oge/popularity').then(response => {\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.ogeBarChartData.labels = labels\n            this.ogeBarChartData.datasets[0].data = data\n            this.oge_loaded = true\n            console.log(labels, data)\n        }).catch(err => {\n            console.log(err)\n        })\n        \n        await API.get('/vpr/popularity').then(response => {\n            let popularity = response.data\n            let variants = []\n            let data = []\n            let labels = []\n            popularity.forEach(p => {\n                if (variants.includes(p.variant.id)) {\n                    data[variants.findIndex((elem) => elem == p.variant.id)] += 1\n                }\n                else {\n                    variants.push(p.variant.id)\n                    data.push(1)\n                    labels.push(p.variant.name)\n                }\n            })\n            this.vprBarChartData.labels = labels\n            this.vprBarChartData.datasets[0].data = data\n            console.log(labels, data)\n            this.vpr_loaded = true\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n}\n</script>\n<style scoped>\n    \n</style>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;;EAIbA,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC;AAAO;;EAGbA,KAAK,EAAC;AAAO;;EAGbA,KAAK,EAAC;AAAO;;;;;6DAZ1BC,YAAA,CAAiBC,iBAAA,GACjBC,mBAAA,CAeM,OAfNC,UAeM,GAdFD,mBAAA,CAEM,cADeE,KAAA,CAAAC,YAAY,I,cAA7BC,YAAA,CAAwDC,oBAAA;;IAAxBC,OAAO,EAAEC,IAAA,CAAAC;+EAE7CR,mBAAA,CAUM,OAVNS,UAUM,GATFT,mBAAA,CAEM,OAFNU,UAEM,GADcR,KAAA,CAAAS,UAAU,I,cAA1BP,YAAA,CAA2FQ,mBAAA;;IAA9DN,OAAO,EAAEJ,KAAA,CAAAW,YAAY;IAAGC,IAAI,EAAEZ,KAAA,CAAAa,eAAe;IAAElB,KAAK,EAAC;uFAEtFG,mBAAA,CAEM,OAFNgB,UAEM,GADcd,KAAA,CAAAe,UAAU,I,cAA1Bb,YAAA,CAA2FQ,mBAAA;;IAA9DN,OAAO,EAAEJ,KAAA,CAAAW,YAAY;IAAGC,IAAI,EAAEZ,KAAA,CAAAgB,eAAe;IAAErB,KAAK,EAAC;uFAEtFG,mBAAA,CAEM,OAFNmB,UAEM,GADcjB,KAAA,CAAAkB,UAAU,I,cAA1BhB,YAAA,CAA2FQ,mBAAA;;IAA9DN,OAAO,EAAEJ,KAAA,CAAAW,YAAY;IAAGC,IAAI,EAAEZ,KAAA,CAAAmB,eAAe;IAAExB,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}