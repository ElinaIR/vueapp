{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API } from '../axios-api';\nimport { mapState } from 'vuex';\nimport Navbar from '../components/Navbar.vue';\nexport default {\n  name: 'Tests',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      profile: '',\n      decks: [],\n      attempts: [],\n      loaded: false\n    };\n  },\n  computed: {\n    ...mapState(['accessToken', 'user'])\n  },\n  created() {\n    API.get('/cards/profiles').then(response => {\n      console.log(response.data);\n      let profiles = response.data;\n      profiles.forEach(p => {\n        if (p.user.id == this.user.id) {\n          this.profile = p;\n        }\n      });\n      console.log(this.profile);\n      API.get('/cards/decks').then(response => {\n        console.log(response.data);\n        let decks = response.data;\n        decks.forEach(d => {\n          if (this.profile.decks.includes(d.id)) {\n            this.decks.push(d);\n          }\n        });\n        console.log(this.decks);\n        API.get('/cards/attempts').then(response => {\n          console.log(response.data);\n          let all_attempts = response.data;\n          all_attempts.forEach(a => {\n            if (this.profile.user.id == a.user) {\n              this.attempts.push(a);\n            }\n          });\n          this.loaded = true;\n        }).catch(err => {\n          console.log(err);\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  methods: {\n    last_mark(id) {\n      var closest = new Date('NaN');\n      var last_attempt;\n      let attempts = this.attempts;\n      attempts.forEach(a => {\n        if (a.deck == id) {\n          if (!isNaN(closest)) {\n            let next = new Date(a.date);\n            if (next.getTime() > closest.getTime()) {\n              closest = next;\n              last_attempt = a;\n            }\n          } else {\n            closest = new Date(a.date);\n          }\n        }\n      });\n      API.get(`/cards/attempts/${last_attempt.id}/marks`).then(response => {\n        console.log(response.data);\n        let marks = response.data;\n        let total = 0;\n        marks.forEach(m => {\n          total += m.mark;\n        });\n        return total;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    attempt(id) {\n      API.post(`/cards/attempts/`, {\n        deck: id\n      }).then(response => {\n        console.log(response.data);\n        this.$router.push({\n          name: 'test',\n          params: {\n            id: response.data.id\n          }\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["API","mapState","Navbar","name","components","data","profile","decks","attempts","loaded","computed","created","get","then","response","console","log","profiles","forEach","p","user","id","d","includes","push","all_attempts","a","catch","err","methods","last_mark","closest","Date","last_attempt","deck","isNaN","next","date","getTime","marks","total","m","mark","attempt","post","$router","params"],"sources":["/Users/elinaigdavletova/Documents/Интернет_программирование/GQW/frontend/vueapp/src/card_views/Tests.vue"],"sourcesContent":["<template>\n    <Navbar></Navbar>\n    <div class=\"container\">\n        <h1 class=\"my-3\"> Мои тесты </h1>\n        <div class=\"d-flex flex-wrap mt-2\" v-if=\"loaded\">\n            <div class=\"card m-2 col-5\" v-for=\"deck in decks\" :key=\"deck.id\">\n                <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between\">\n                        <div>\n                            <h5 class=\"card-title\"><router-link :to=\"{ name: 'deck', params: { slug: deck.slug } }\"\n                                    class=\"text-reset text-decoration-none\">{{ deck.title }}</router-link></h5>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">{{ deck.creator.username }}, {{ deck.creation_date }}\n                            </h6>\n                            <p class=\"card-text\">{{ deck.desc }}</p>\n                        </div>\n                        <div class=\"col-5 d-flex flex-column justify-content-around\">\n                            <button class=\"btn btn-primary\" @click=\"attempt(deck.id)\">Пройти тест</button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <small class=\"text-muted\">{{ last_mark(deck.id) }}</small>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"text-center\">\n        </div>\n    </div>\n</template>\n\n<script>\nimport { API } from '../axios-api'\nimport { mapState } from 'vuex'\nimport Navbar from '../components/Navbar.vue'\nexport default {\n    name: 'Tests',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            profile: '',\n            decks: [],\n            attempts: [],\n            loaded: false,\n        }\n    },\n    computed: {\n        ...mapState(['accessToken', 'user']),\n    },\n    created() {\n        API.get('/cards/profiles').then(response => {\n            console.log(response.data)\n            let profiles = response.data\n            profiles.forEach(p => {\n                if (p.user.id == this.user.id) {\n                    this.profile = p\n                }\n            })\n            console.log(this.profile)\n\n            API.get('/cards/decks').then(response => {\n                console.log(response.data)\n                let decks = response.data\n                decks.forEach(d => {\n                    if (this.profile.decks.includes(d.id)) {\n                        this.decks.push(d)\n                    }\n                })\n                console.log(this.decks)\n\n                API.get('/cards/attempts').then(response => {\n                    console.log(response.data)\n                    let all_attempts = response.data\n                    all_attempts.forEach(a => {\n                        if (this.profile.user.id == a.user) {\n                            this.attempts.push(a)\n                        }\n                    })\n                    this.loaded = true\n                }).catch(err => {\n                    console.log(err)\n                })\n            }).catch(err => {\n                console.log(err)\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    },\n    methods: {\n        last_mark(id) {\n            var closest = new Date('NaN');\n            var last_attempt\n            let attempts = this.attempts\n            attempts.forEach(a => {\n                if (a.deck == id) {\n                    if (!isNaN(closest)) {\n                        let next = new Date(a.date)\n                        if (next.getTime() > closest.getTime()) {\n                            closest = next\n                            last_attempt = a\n                        }\n                    }\n                    else {\n                        closest = new Date(a.date)\n                    }\n                }\n            })\n\n            API.get(`/cards/attempts/${last_attempt.id}/marks`).then(response => {\n                console.log(response.data)\n                let marks = response.data\n                let total = 0\n                marks.forEach(m => {\n                    total += m.mark\n                })\n                return total\n            }).catch(err => {\n                console.log(err)\n            })\n        },\n        attempt(id) {\n            API.post(`/cards/attempts/`, {\n                deck: id\n            }).then(response => {\n                console.log(response.data)\n                this.$router.push({ name: 'test', params: { id: response.data.id}})\n            })\n        }\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}